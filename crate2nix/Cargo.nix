
# This file was @generated by crate2nix 0.10.0 with the command:
#   "generate" "--no-default-features" "--features" "default" "--crate-hashes" "crate2nix/crate-hashes.json" "--output" "crate2nix/Cargo.nix"
# See https://github.com/kolloch/crate2nix for more info.

{ nixpkgs ? <nixpkgs>
, pkgs ? import nixpkgs { config = {}; }
, lib ? pkgs.lib
, stdenv ? pkgs.stdenv
, buildRustCrateForPkgs ? if buildRustCrate != null
    then lib.warn "crate2nix: Passing `buildRustCrate` as argument to Cargo.nix is deprecated. If you don't customize `buildRustCrate`, replace `callPackage ./Cargo.nix {}` by `import ./Cargo.nix { inherit pkgs; }`, and if you need to customize `buildRustCrate`, use `buildRustCrateForPkgs` instead." (_: buildRustCrate)
    else pkgs: pkgs.buildRustCrate
  # Deprecated
, buildRustCrate ? null
  # This is used as the `crateOverrides` argument for `buildRustCrate`.
, defaultCrateOverrides ? pkgs.defaultCrateOverrides
  # The features to enable for the root_crate or the workspace_members.
, rootFeatures ? [ "default" ]
  # If true, throw errors instead of issueing deprecation warnings.
, strictDeprecation ? false
  # Used for conditional compilation based on CPU feature detection.
, targetFeatures ? []
  # Whether to perform release builds: longer compile times, faster binaries.
, release ? true
  # Additional crate2nix configuration if it exists.
, crateConfig
  ? if builtins.pathExists ./crate-config.nix
    then pkgs.callPackage ./crate-config.nix {}
    else {}
}:

rec {
  #
  # "public" attributes that we attempt to keep stable with new versions of crate2nix.
  #


  # Refer your crate build derivation by name here.
  # You can override the features with
  # workspaceMembers."${crateName}".build.override { features = [ "default" "feature1" ... ]; }.
  workspaceMembers = {
    "anoma" = rec {
      packageId = "anoma";
      build = internal.buildRustCrateWithFeatures {
        packageId = "anoma";
      };

      # Debug support which might change between releases.
      # File a bug if you depend on any for non-debug work!
      debug = internal.debugCrate { inherit packageId; };
    };
    "anoma_apps" = rec {
      packageId = "anoma_apps";
      build = internal.buildRustCrateWithFeatures {
        packageId = "anoma_apps";
      };

      # Debug support which might change between releases.
      # File a bug if you depend on any for non-debug work!
      debug = internal.debugCrate { inherit packageId; };
    };
    "anoma_encoding_spec" = rec {
      packageId = "anoma_encoding_spec";
      build = internal.buildRustCrateWithFeatures {
        packageId = "anoma_encoding_spec";
      };

      # Debug support which might change between releases.
      # File a bug if you depend on any for non-debug work!
      debug = internal.debugCrate { inherit packageId; };
    };
    "anoma_macros" = rec {
      packageId = "anoma_macros";
      build = internal.buildRustCrateWithFeatures {
        packageId = "anoma_macros";
      };

      # Debug support which might change between releases.
      # File a bug if you depend on any for non-debug work!
      debug = internal.debugCrate { inherit packageId; };
    };
    "anoma_proof_of_stake" = rec {
      packageId = "anoma_proof_of_stake";
      build = internal.buildRustCrateWithFeatures {
        packageId = "anoma_proof_of_stake";
      };

      # Debug support which might change between releases.
      # File a bug if you depend on any for non-debug work!
      debug = internal.debugCrate { inherit packageId; };
    };
    "anoma_tests" = rec {
      packageId = "anoma_tests";
      build = internal.buildRustCrateWithFeatures {
        packageId = "anoma_tests";
      };

      # Debug support which might change between releases.
      # File a bug if you depend on any for non-debug work!
      debug = internal.debugCrate { inherit packageId; };
    };
    "anoma_tx_prelude" = rec {
      packageId = "anoma_tx_prelude";
      build = internal.buildRustCrateWithFeatures {
        packageId = "anoma_tx_prelude";
      };

      # Debug support which might change between releases.
      # File a bug if you depend on any for non-debug work!
      debug = internal.debugCrate { inherit packageId; };
    };
    "anoma_vm_env" = rec {
      packageId = "anoma_vm_env";
      build = internal.buildRustCrateWithFeatures {
        packageId = "anoma_vm_env";
      };

      # Debug support which might change between releases.
      # File a bug if you depend on any for non-debug work!
      debug = internal.debugCrate { inherit packageId; };
    };
    "anoma_vp_prelude" = rec {
      packageId = "anoma_vp_prelude";
      build = internal.buildRustCrateWithFeatures {
        packageId = "anoma_vp_prelude";
      };

      # Debug support which might change between releases.
      # File a bug if you depend on any for non-debug work!
      debug = internal.debugCrate { inherit packageId; };
    };
    "mm_template" = rec {
      packageId = "mm_template";
      build = internal.buildRustCrateWithFeatures {
        packageId = "mm_template";
      };

      # Debug support which might change between releases.
      # File a bug if you depend on any for non-debug work!
      debug = internal.debugCrate { inherit packageId; };
    };
    "mm_token_exch" = rec {
      packageId = "mm_token_exch";
      build = internal.buildRustCrateWithFeatures {
        packageId = "mm_token_exch";
      };

      # Debug support which might change between releases.
      # File a bug if you depend on any for non-debug work!
      debug = internal.debugCrate { inherit packageId; };
    };
  };

  # A derivation that joins the outputs of all workspace members together.
  allWorkspaceMembers = pkgs.symlinkJoin {
      name = "all-workspace-members";
      paths =
        let members = builtins.attrValues workspaceMembers;
        in builtins.map (m: m.build) members;
  };

  #
  # "internal" ("private") attributes that may change in every new version of crate2nix.
  #

  internal = rec {
    # Build and dependency information for crates.
    # Many of the fields are passed one-to-one to buildRustCrate.
    #
    # Noteworthy:
    # * `dependencies`/`buildDependencies`: similar to the corresponding fields for buildRustCrate.
    #   but with additional information which is used during dependency/feature resolution.
    # * `resolvedDependencies`: the selected default features reported by cargo - only included for debugging.
    # * `devDependencies` as of now not used by `buildRustCrate` but used to
    #   inject test dependencies into the build

    crates = {
      "addr2line" = rec {
        crateName = "addr2line";
        version = "0.17.0";
        edition = "2015";
        sha256 = "0sw16zqy6w0ar633z69m7lw6gb0k1y7xj3387a8wly43ij5div5r";
        dependencies = [
          {
            name = "gimli";
            packageId = "gimli 0.26.1";
            usesDefaultFeatures = false;
            features = [ "read" ];
          }
        ];
        features = {
          "default" = [ "rustc-demangle" "cpp_demangle" "std-object" "fallible-iterator" "smallvec" ];
          "rustc-dep-of-std" = [ "core" "alloc" "compiler_builtins" "gimli/rustc-dep-of-std" ];
          "std" = [ "gimli/std" ];
          "std-object" = [ "std" "object" "object/std" "object/compression" "gimli/endian-reader" ];
        };
      };
      "adler" = rec {
        crateName = "adler";
        version = "1.0.2";
        edition = "2015";
        sha256 = "1zim79cvzd5yrkzl3nyfx0avijwgk9fqv3yrscdy1cc79ih02qpj";
        authors = [
          "Jonas Schievink <jonasschievink@gmail.com>"
        ];
        features = {
          "default" = [ "std" ];
          "rustc-dep-of-std" = [ "core" "compiler_builtins" ];
        };
      };
      "aead" = rec {
        crateName = "aead";
        version = "0.4.3";
        edition = "2018";
        sha256 = "0xw8kp9j1whfdxhgmr2qf9xgslkg52zh6gzmhsh13y9w3s73nq8b";
        authors = [
          "RustCrypto Developers"
        ];
        dependencies = [
          {
            name = "generic-array";
            packageId = "generic-array 0.14.5";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "dev" = [ "blobby" ];
          "std" = [ "alloc" "rand_core/std" ];
        };
        resolvedDefaultFeatures = [ "alloc" ];
      };
      "aes" = rec {
        crateName = "aes";
        version = "0.7.5";
        edition = "2018";
        sha256 = "1f0sdx2fsa8w3l7xzsyi9ry3shvnnsgc0znh50if9fm95vslg2wy";
        authors = [
          "RustCrypto Developers"
        ];
        dependencies = [
          {
            name = "cfg-if";
            packageId = "cfg-if 1.0.0";
          }
          {
            name = "cipher";
            packageId = "cipher";
          }
          {
            name = "cpufeatures";
            packageId = "cpufeatures";
            target = { target, features }: ((target."arch" == "aarch64") || (target."arch" == "x86_64") || (target."arch" == "x86"));
          }
          {
            name = "opaque-debug";
            packageId = "opaque-debug 0.3.0";
          }
        ];
        devDependencies = [
          {
            name = "cipher";
            packageId = "cipher";
            features = [ "dev" ];
          }
        ];
        features = {
        };
      };
      "aes-gcm" = rec {
        crateName = "aes-gcm";
        version = "0.9.4";
        edition = "2018";
        sha256 = "1xndncn1phjb7pjam63vl0yp7h8jh95m0yxanr1092vx7al8apyz";
        authors = [
          "RustCrypto Developers"
        ];
        dependencies = [
          {
            name = "aead";
            packageId = "aead";
            usesDefaultFeatures = false;
          }
          {
            name = "aes";
            packageId = "aes";
            optional = true;
          }
          {
            name = "cipher";
            packageId = "cipher";
          }
          {
            name = "ctr";
            packageId = "ctr";
          }
          {
            name = "ghash";
            packageId = "ghash";
            usesDefaultFeatures = false;
          }
          {
            name = "subtle";
            packageId = "subtle 2.4.1";
            usesDefaultFeatures = false;
          }
        ];
        devDependencies = [
          {
            name = "aead";
            packageId = "aead";
            usesDefaultFeatures = false;
            features = [ "dev" ];
          }
        ];
        features = {
          "alloc" = [ "aead/alloc" ];
          "armv8" = [ "aes/armv8" "ghash/armv8" ];
          "default" = [ "aes" "alloc" ];
          "force-soft" = [ "aes/force-soft" "ghash/force-soft" ];
          "heapless" = [ "aead/heapless" ];
          "std" = [ "aead/std" "alloc" ];
          "stream" = [ "aead/stream" ];
        };
        resolvedDefaultFeatures = [ "aes" "alloc" "default" ];
      };
      "ahash" = rec {
        crateName = "ahash";
        version = "0.7.6";
        edition = "2018";
        sha256 = "0isw672fiwx8cjl040jrck6pi85xcszkz6q0xsqkiy6qjl31mdgw";
        authors = [
          "Tom Kaitchuck <Tom.Kaitchuck@gmail.com>"
        ];
        dependencies = [
          {
            name = "getrandom";
            packageId = "getrandom 0.2.4";
            target = { target, features }: ((target."os" == "linux") || (target."os" == "android") || (target."os" == "windows") || (target."os" == "macos") || (target."os" == "ios") || (target."os" == "freebsd") || (target."os" == "openbsd") || (target."os" == "netbsd") || (target."os" == "dragonfly") || (target."os" == "solaris") || (target."os" == "illumos") || (target."os" == "fuchsia") || (target."os" == "redox") || (target."os" == "cloudabi") || (target."os" == "haiku") || (target."os" == "vxworks") || (target."os" == "emscripten") || (target."os" == "wasi"));
          }
          {
            name = "once_cell";
            packageId = "once_cell";
            usesDefaultFeatures = false;
            target = { target, features }: (!((target."arch" == "arm") && (target."os" == "none")));
            features = [ "alloc" ];
          }
        ];
        buildDependencies = [
          {
            name = "version_check";
            packageId = "version_check 0.9.4";
          }
        ];
        features = {
          "compile-time-rng" = [ "const-random" ];
          "default" = [ "std" ];
        };
      };
      "aho-corasick" = rec {
        crateName = "aho-corasick";
        version = "0.7.18";
        edition = "2018";
        sha256 = "0vv50b3nvkhyy7x7ip19qnsq11bqlnffkmj2yx2xlyk5wzawydqy";
        libName = "aho_corasick";
        authors = [
          "Andrew Gallant <jamslam@gmail.com>"
        ];
        dependencies = [
          {
            name = "memchr";
            packageId = "memchr";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "default" = [ "std" ];
          "std" = [ "memchr/std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "anoma" = rec {
        crateName = "anoma";
        version = "0.5.0";
        edition = "2021";
        src = lib.cleanSourceWith { filter = sourceFilter;  src = ../shared; };
        authors = [
          "Heliax AG <hello@heliax.dev>"
        ];
        dependencies = [
          {
            name = "anoma_proof_of_stake";
            packageId = "anoma_proof_of_stake";
          }
          {
            name = "ark-bls12-381";
            packageId = "ark-bls12-381";
          }
          {
            name = "ark-ec";
            packageId = "ark-ec";
            optional = true;
          }
          {
            name = "ark-serialize";
            packageId = "ark-serialize";
          }
          {
            name = "bech32";
            packageId = "bech32";
          }
          {
            name = "borsh";
            packageId = "borsh";
          }
          {
            name = "chrono";
            packageId = "chrono";
          }
          {
            name = "clru";
            packageId = "clru";
          }
          {
            name = "derivative";
            packageId = "derivative";
          }
          {
            name = "ed25519-consensus";
            packageId = "ed25519-consensus";
          }
          {
            name = "ferveo";
            packageId = "ferveo";
            optional = true;
          }
          {
            name = "ferveo-common";
            packageId = "ferveo-common";
          }
          {
            name = "group-threshold-cryptography";
            packageId = "group-threshold-cryptography";
            rename = "tpke";
            optional = true;
          }
          {
            name = "hex";
            packageId = "hex";
          }
          {
            name = "ibc";
            packageId = "ibc";
            optional = true;
            usesDefaultFeatures = false;
          }
          {
            name = "ibc";
            packageId = "ibc";
            rename = "ibc-abci";
            optional = true;
            usesDefaultFeatures = false;
          }
          {
            name = "ibc-proto";
            packageId = "ibc-proto";
            optional = true;
            usesDefaultFeatures = false;
          }
          {
            name = "ibc-proto";
            packageId = "ibc-proto";
            rename = "ibc-proto-abci";
            optional = true;
            usesDefaultFeatures = false;
          }
          {
            name = "ics23";
            packageId = "ics23";
          }
          {
            name = "itertools";
            packageId = "itertools 0.10.3";
          }
          {
            name = "loupe";
            packageId = "loupe";
            optional = true;
          }
          {
            name = "parity-wasm";
            packageId = "parity-wasm";
            optional = true;
          }
          {
            name = "proptest";
            packageId = "proptest 1.0.0 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
          }
          {
            name = "prost";
            packageId = "prost 0.9.0";
          }
          {
            name = "prost-types";
            packageId = "prost-types 0.9.0";
          }
          {
            name = "pwasm-utils";
            packageId = "pwasm-utils";
            optional = true;
          }
          {
            name = "rand";
            packageId = "rand 0.8.4";
            optional = true;
          }
          {
            name = "rand_core";
            packageId = "rand_core 0.6.3";
            optional = true;
          }
          {
            name = "rust_decimal";
            packageId = "rust_decimal";
          }
          {
            name = "serde";
            packageId = "serde 1.0.136";
            features = [ "derive" ];
          }
          {
            name = "serde_json";
            packageId = "serde_json";
          }
          {
            name = "sha2";
            packageId = "sha2 0.9.9";
          }
          {
            name = "sparse-merkle-tree";
            packageId = "sparse-merkle-tree";
            usesDefaultFeatures = false;
            features = [ "std" "borsh" ];
          }
          {
            name = "tempfile";
            packageId = "tempfile";
            optional = true;
          }
          {
            name = "tendermint";
            packageId = "tendermint";
            optional = true;
          }
          {
            name = "tendermint";
            packageId = "tendermint";
            rename = "tendermint-stable";
            optional = true;
          }
          {
            name = "tendermint-proto";
            packageId = "tendermint-proto";
            optional = true;
          }
          {
            name = "tendermint-proto";
            packageId = "tendermint-proto";
            rename = "tendermint-proto-abci";
            optional = true;
          }
          {
            name = "thiserror";
            packageId = "thiserror";
          }
          {
            name = "tracing";
            packageId = "tracing 0.1.31";
          }
          {
            name = "wasmer";
            packageId = "wasmer";
            optional = true;
          }
          {
            name = "wasmer-cache";
            packageId = "wasmer-cache";
            optional = true;
          }
          {
            name = "wasmer-compiler-singlepass";
            packageId = "wasmer-compiler-singlepass";
            optional = true;
          }
          {
            name = "wasmer-engine-dylib";
            packageId = "wasmer-engine-dylib";
            optional = true;
          }
          {
            name = "wasmer-engine-universal";
            packageId = "wasmer-engine-universal";
            optional = true;
          }
          {
            name = "wasmer-vm";
            packageId = "wasmer-vm";
            optional = true;
          }
          {
            name = "wasmparser";
            packageId = "wasmparser 0.83.0";
          }
        ];
        buildDependencies = [
          {
            name = "tonic-build";
            packageId = "tonic-build";
          }
        ];
        devDependencies = [
          {
            name = "assert_matches";
            packageId = "assert_matches";
          }
          {
            name = "byte-unit";
            packageId = "byte-unit";
          }
          {
            name = "pretty_assertions";
            packageId = "pretty_assertions";
          }
          {
            name = "proptest";
            packageId = "proptest 1.0.0 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "test-log";
            packageId = "test-log";
            usesDefaultFeatures = false;
            features = [ "trace" ];
          }
          {
            name = "tracing-subscriber";
            packageId = "tracing-subscriber 0.3.9";
            usesDefaultFeatures = false;
            features = [ "env-filter" "fmt" ];
          }
        ];
        features = {
          "ABCI" = [ "ibc-proto-abci" "tendermint-stable" "tendermint-proto-abci" ];
          "ABCI-plus-plus" = [ "ibc-proto" "tendermint" "tendermint-proto" ];
          "default" = [ "ABCI" "ibc-vp-abci" ];
          "ferveo-tpke" = [ "ferveo" "tpke" "ark-ec" "rand_core" "rand" ];
          "ibc-mocks" = [ "ibc/mocks" ];
          "ibc-mocks-abci" = [ "ibc-abci/mocks" ];
          "ibc-vp" = [ "ibc" ];
          "ibc-vp-abci" = [ "ibc-abci" ];
          "testing" = [ "proptest" "rand" "rand_core" "tempfile" ];
          "wasm-runtime" = [ "loupe" "parity-wasm" "pwasm-utils" "wasmer-cache" "wasmer-compiler-singlepass" "wasmer-engine-dylib" "wasmer-engine-universal" "wasmer-vm" "wasmer" ];
        };
        resolvedDefaultFeatures = [ "ABCI" "ark-ec" "default" "dev" "ferveo" "ferveo-tpke" "ibc-abci" "ibc-mocks-abci" "ibc-proto-abci" "ibc-vp-abci" "loupe" "parity-wasm" "proptest" "pwasm-utils" "rand" "rand_core" "tempfile" "tendermint-proto-abci" "tendermint-stable" "testing" "tpke" "wasm-runtime" "wasmer" "wasmer-cache" "wasmer-compiler-singlepass" "wasmer-engine-dylib" "wasmer-engine-universal" "wasmer-vm" ];
      };
      "anoma_apps" = rec {
        crateName = "anoma_apps";
        version = "0.5.0";
        edition = "2021";
        crateBin = [
          { name = "anoma"; path = "src/bin/anoma/main.rs"; }
          { name = "anoman"; path = "src/bin/anoma-node/main.rs"; }
          { name = "anomac"; path = "src/bin/anoma-client/main.rs"; }
          { name = "anomaw"; path = "src/bin/anoma-wallet/main.rs"; }
        ];
        src = lib.cleanSourceWith { filter = sourceFilter;  src = ../apps; };
        libPath = "src/lib/mod.rs";
        authors = [
          "Heliax AG <hello@heliax.dev>"
        ];
        dependencies = [
          {
            name = "anoma";
            packageId = "anoma";
            usesDefaultFeatures = false;
            features = [ "wasm-runtime" "ferveo-tpke" "rand" ];
          }
          {
            name = "ark-serialize";
            packageId = "ark-serialize";
          }
          {
            name = "ark-std";
            packageId = "ark-std";
          }
          {
            name = "async-std";
            packageId = "async-std";
            features = [ "unstable" ];
          }
          {
            name = "async-trait";
            packageId = "async-trait";
          }
          {
            name = "base64";
            packageId = "base64 0.13.0";
          }
          {
            name = "bech32";
            packageId = "bech32";
          }
          {
            name = "blake2b-rs";
            packageId = "blake2b-rs";
          }
          {
            name = "borsh";
            packageId = "borsh";
          }
          {
            name = "byte-unit";
            packageId = "byte-unit";
          }
          {
            name = "byteorder";
            packageId = "byteorder";
          }
          {
            name = "clap";
            packageId = "clap 3.0.0-beta.2";
            usesDefaultFeatures = false;
            features = [ "std" "suggestions" "color" "cargo" ];
          }
          {
            name = "color-eyre";
            packageId = "color-eyre";
          }
          {
            name = "config";
            packageId = "config";
          }
          {
            name = "derivative";
            packageId = "derivative";
          }
          {
            name = "directories";
            packageId = "directories";
          }
          {
            name = "ed25519-consensus";
            packageId = "ed25519-consensus";
          }
          {
            name = "eyre";
            packageId = "eyre";
          }
          {
            name = "ferveo";
            packageId = "ferveo";
          }
          {
            name = "ferveo-common";
            packageId = "ferveo-common";
          }
          {
            name = "file-lock";
            packageId = "file-lock";
          }
          {
            name = "flate2";
            packageId = "flate2";
          }
          {
            name = "futures";
            packageId = "futures 0.3.19";
          }
          {
            name = "hex";
            packageId = "hex";
          }
          {
            name = "itertools";
            packageId = "itertools 0.10.3";
          }
          {
            name = "jsonpath_lib";
            packageId = "jsonpath_lib";
          }
          {
            name = "libc";
            packageId = "libc";
          }
          {
            name = "libloading";
            packageId = "libloading";
          }
          {
            name = "libp2p";
            packageId = "libp2p";
          }
          {
            name = "message-io";
            packageId = "message-io";
            usesDefaultFeatures = false;
            features = [ "websocket" ];
          }
          {
            name = "num-derive";
            packageId = "num-derive";
          }
          {
            name = "num-traits";
            packageId = "num-traits 0.2.14";
          }
          {
            name = "num_cpus";
            packageId = "num_cpus";
          }
          {
            name = "once_cell";
            packageId = "once_cell";
          }
          {
            name = "orion";
            packageId = "orion";
          }
          {
            name = "pathdiff";
            packageId = "pathdiff";
          }
          {
            name = "prost";
            packageId = "prost 0.9.0";
          }
          {
            name = "prost-types";
            packageId = "prost-types 0.9.0";
          }
          {
            name = "rand";
            packageId = "rand 0.8.4";
            usesDefaultFeatures = false;
          }
          {
            name = "rand_core";
            packageId = "rand_core 0.6.3";
            usesDefaultFeatures = false;
          }
          {
            name = "rayon";
            packageId = "rayon";
          }
          {
            name = "regex";
            packageId = "regex";
          }
          {
            name = "reqwest";
            packageId = "reqwest";
          }
          {
            name = "rlimit";
            packageId = "rlimit";
          }
          {
            name = "rocksdb";
            packageId = "rocksdb";
          }
          {
            name = "rpassword";
            packageId = "rpassword";
          }
          {
            name = "serde";
            packageId = "serde 1.0.136";
            features = [ "derive" ];
          }
          {
            name = "serde_bytes";
            packageId = "serde_bytes";
          }
          {
            name = "serde_json";
            packageId = "serde_json";
          }
          {
            name = "serde_regex";
            packageId = "serde_regex";
          }
          {
            name = "sha2";
            packageId = "sha2 0.9.9";
          }
          {
            name = "signal-hook";
            packageId = "signal-hook";
          }
          {
            name = "sparse-merkle-tree";
            packageId = "sparse-merkle-tree";
            features = [ "borsh" ];
          }
          {
            name = "sysinfo";
            packageId = "sysinfo";
            usesDefaultFeatures = false;
          }
          {
            name = "tar";
            packageId = "tar";
          }
          {
            name = "tendermint";
            packageId = "tendermint";
            optional = true;
          }
          {
            name = "tendermint";
            packageId = "tendermint";
            rename = "tendermint-stable";
            optional = true;
          }
          {
            name = "tendermint-config";
            packageId = "tendermint-config";
            optional = true;
          }
          {
            name = "tendermint-config";
            packageId = "tendermint-config";
            rename = "tendermint-config-abci";
            optional = true;
          }
          {
            name = "tendermint-proto";
            packageId = "tendermint-proto";
            optional = true;
          }
          {
            name = "tendermint-proto";
            packageId = "tendermint-proto";
            rename = "tendermint-proto-abci";
            optional = true;
          }
          {
            name = "tendermint-rpc";
            packageId = "tendermint-rpc";
            optional = true;
            features = [ "http-client" "websocket-client" ];
          }
          {
            name = "tendermint-rpc";
            packageId = "tendermint-rpc";
            rename = "tendermint-rpc-abci";
            optional = true;
            features = [ "http-client" "websocket-client" ];
          }
          {
            name = "thiserror";
            packageId = "thiserror";
          }
          {
            name = "tokio";
            packageId = "tokio";
            features = [ "full" ];
          }
          {
            name = "toml";
            packageId = "toml";
          }
          {
            name = "tonic";
            packageId = "tonic";
          }
          {
            name = "tower";
            packageId = "tower";
          }
          {
            name = "tower-abci";
            packageId = "tower-abci";
            optional = true;
          }
          {
            name = "tower-abci";
            packageId = "tower-abci";
            rename = "tower-abci-old";
            optional = true;
          }
          {
            name = "tracing";
            packageId = "tracing 0.1.31";
          }
          {
            name = "tracing-log";
            packageId = "tracing-log";
          }
          {
            name = "tracing-subscriber";
            packageId = "tracing-subscriber 0.3.9";
            features = [ "env-filter" ];
          }
          {
            name = "websocket";
            packageId = "websocket";
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.9";
          }
        ];
        buildDependencies = [
          {
            name = "git2";
            packageId = "git2";
          }
          {
            name = "tonic-build";
            packageId = "tonic-build";
          }
        ];
        devDependencies = [
          {
            name = "anoma";
            packageId = "anoma";
            usesDefaultFeatures = false;
            features = [ "testing" "wasm-runtime" ];
          }
          {
            name = "bit-set";
            packageId = "bit-set";
          }
          {
            name = "cargo-watch";
            packageId = "cargo-watch";
          }
          {
            name = "proptest";
            packageId = "proptest 1.0.0 (git+https://github.com/heliaxdev/proptest?branch=tomas/sm#d8fd7ad8897df353987d2c41793b5fe164fed9b9)";
          }
          {
            name = "tempfile";
            packageId = "tempfile";
          }
          {
            name = "test-log";
            packageId = "test-log";
            usesDefaultFeatures = false;
            features = [ "trace" ];
          }
          {
            name = "tokio-test";
            packageId = "tokio-test";
          }
        ];
        features = {
          "ABCI" = [ "tendermint-stable" "tendermint-config-abci" "tendermint-proto-abci" "tendermint-rpc-abci" "tower-abci-old" "anoma/ABCI" "anoma/ibc-vp-abci" ];
          "ABCI-plus-plus" = [ "tendermint" "tendermint-config" "tendermint-proto" "tendermint-rpc" "tower-abci" "anoma/ABCI-plus-plus" "anoma/ibc-vp" ];
          "default" = [ "std" "ABCI" ];
          "dev" = [ "anoma/dev" ];
          "std" = [ "ed25519-consensus/std" "rand/std" "rand_core/std" ];
          "testing" = [ "dev" ];
        };
        resolvedDefaultFeatures = [ "ABCI" "default" "dev" "std" "tendermint-config-abci" "tendermint-proto-abci" "tendermint-rpc-abci" "tendermint-stable" "testing" "tower-abci-old" ];
      };
      "anoma_encoding_spec" = rec {
        crateName = "anoma_encoding_spec";
        version = "0.5.0";
        edition = "2021";
        crateBin = [
          { name = "anoma_encoding_spec"; path = "src/main.rs"; }
        ];
        src = lib.cleanSourceWith { filter = sourceFilter;  src = ../encoding_spec; };
        authors = [
          "Heliax AG <hello@heliax.dev>"
        ];
        dependencies = [
          {
            name = "anoma";
            packageId = "anoma";
            usesDefaultFeatures = false;
          }
          {
            name = "borsh";
            packageId = "borsh";
          }
          {
            name = "itertools";
            packageId = "itertools 0.10.3";
          }
          {
            name = "lazy_static";
            packageId = "lazy_static 1.4.0";
          }
          {
            name = "madato";
            packageId = "madato";
          }
        ];
        features = {
          "ABCI" = [ "anoma/ABCI" "anoma/ibc-vp-abci" ];
          "ABCI-plus-plus" = [ "anoma/ABCI-plus-plus" "anoma/ibc-vp" ];
          "default" = [ "ABCI" ];
        };
        resolvedDefaultFeatures = [ "ABCI" "default" ];
      };
      "anoma_macros" = rec {
        crateName = "anoma_macros";
        version = "0.5.0";
        edition = "2021";
        src = lib.cleanSourceWith { filter = sourceFilter;  src = ../macros; };
        procMacro = true;
        authors = [
          "Heliax AG <hello@heliax.dev>"
        ];
        dependencies = [
          {
            name = "quote";
            packageId = "quote";
          }
          {
            name = "syn";
            packageId = "syn";
          }
        ];

      };
      "anoma_proof_of_stake" = rec {
        crateName = "anoma_proof_of_stake";
        version = "0.5.0";
        edition = "2021";
        src = lib.cleanSourceWith { filter = sourceFilter;  src = ../proof_of_stake; };
        authors = [
          "Heliax AG <hello@heliax.dev>"
        ];
        dependencies = [
          {
            name = "borsh";
            packageId = "borsh";
          }
          {
            name = "thiserror";
            packageId = "thiserror";
          }
        ];
        devDependencies = [
          {
            name = "proptest";
            packageId = "proptest 1.0.0 (git+https://github.com/heliaxdev/proptest?branch=tomas/sm#d8fd7ad8897df353987d2c41793b5fe164fed9b9)";
          }
        ];

      };
      "anoma_tests" = rec {
        crateName = "anoma_tests";
        version = "0.5.0";
        edition = "2021";
        src = lib.cleanSourceWith { filter = sourceFilter;  src = ../tests; };
        authors = [
          "Heliax AG <hello@heliax.dev>"
        ];
        dependencies = [
          {
            name = "anoma";
            packageId = "anoma";
            usesDefaultFeatures = false;
            features = [ "testing" ];
          }
          {
            name = "anoma_vm_env";
            packageId = "anoma_vm_env";
            usesDefaultFeatures = false;
          }
          {
            name = "chrono";
            packageId = "chrono";
          }
          {
            name = "concat-idents";
            packageId = "concat-idents";
          }
          {
            name = "prost";
            packageId = "prost 0.9.0";
          }
          {
            name = "serde_json";
            packageId = "serde_json";
          }
          {
            name = "sha2";
            packageId = "sha2 0.9.9";
          }
          {
            name = "tempfile";
            packageId = "tempfile";
          }
          {
            name = "test-log";
            packageId = "test-log";
            usesDefaultFeatures = false;
            features = [ "trace" ];
          }
          {
            name = "tracing";
            packageId = "tracing 0.1.31";
          }
          {
            name = "tracing-subscriber";
            packageId = "tracing-subscriber 0.3.9";
            usesDefaultFeatures = false;
            features = [ "env-filter" "fmt" ];
          }
        ];
        devDependencies = [
          {
            name = "anoma_apps";
            packageId = "anoma_apps";
            usesDefaultFeatures = false;
            features = [ "testing" ];
          }
          {
            name = "assert_cmd";
            packageId = "assert_cmd";
          }
          {
            name = "borsh";
            packageId = "borsh";
          }
          {
            name = "color-eyre";
            packageId = "color-eyre";
          }
          {
            name = "escargot";
            packageId = "escargot";
          }
          {
            name = "eyre";
            packageId = "eyre";
          }
          {
            name = "fs_extra";
            packageId = "fs_extra";
          }
          {
            name = "itertools";
            packageId = "itertools 0.10.3";
          }
          {
            name = "libp2p";
            packageId = "libp2p";
          }
          {
            name = "pretty_assertions";
            packageId = "pretty_assertions";
          }
          {
            name = "rexpect";
            packageId = "rexpect";
          }
        ];
        features = {
          "ABCI" = [ "anoma/ABCI" "anoma/ibc-mocks-abci" "anoma_vm_env/ABCI" ];
          "ABCI-plus-plus" = [ "anoma/ABCI-plus-plus" "anoma/ibc-mocks" "anoma_vm_env/ABCI-plus-plus" ];
          "default" = [ "wasm-runtime" "ABCI" ];
          "wasm-runtime" = [ "anoma/wasm-runtime" ];
        };
        resolvedDefaultFeatures = [ "ABCI" "default" "wasm-runtime" ];
      };
      "anoma_tx_prelude" = rec {
        crateName = "anoma_tx_prelude";
        version = "0.5.0";
        edition = "2021";
        src = lib.cleanSourceWith { filter = sourceFilter;  src = ../tx_prelude; };
        authors = [
          "Heliax AG <hello@heliax.dev>"
        ];
        dependencies = [
          {
            name = "anoma_vm_env";
            packageId = "anoma_vm_env";
            usesDefaultFeatures = false;
          }
          {
            name = "sha2";
            packageId = "sha2 0.10.2";
          }
        ];
        features = {
          "ABCI" = [ "anoma_vm_env/ABCI" ];
          "ABCI-plus-plus" = [ "anoma_vm_env/ABCI-plus-plus" ];
          "default" = [ "ABCI" ];
        };
        resolvedDefaultFeatures = [ "ABCI" "default" ];
      };
      "anoma_vm_env" = rec {
        crateName = "anoma_vm_env";
        version = "0.5.0";
        edition = "2021";
        src = lib.cleanSourceWith { filter = sourceFilter;  src = ../vm_env; };
        authors = [
          "Heliax AG <hello@heliax.dev>"
        ];
        dependencies = [
          {
            name = "anoma";
            packageId = "anoma";
            usesDefaultFeatures = false;
          }
          {
            name = "anoma_macros";
            packageId = "anoma_macros";
          }
          {
            name = "borsh";
            packageId = "borsh";
          }
          {
            name = "hex";
            packageId = "hex";
          }
        ];
        features = {
          "ABCI" = [ "anoma/ABCI" "anoma/ibc-vp-abci" ];
          "ABCI-plus-plus" = [ "anoma/ABCI-plus-plus" "anoma/ibc-vp" ];
          "default" = [ "ABCI" ];
        };
        resolvedDefaultFeatures = [ "ABCI" "default" ];
      };
      "anoma_vp_prelude" = rec {
        crateName = "anoma_vp_prelude";
        version = "0.5.0";
        edition = "2021";
        src = lib.cleanSourceWith { filter = sourceFilter;  src = ../vp_prelude; };
        authors = [
          "Heliax AG <hello@heliax.dev>"
        ];
        dependencies = [
          {
            name = "anoma_vm_env";
            packageId = "anoma_vm_env";
            usesDefaultFeatures = false;
          }
          {
            name = "sha2";
            packageId = "sha2 0.10.2";
          }
        ];
        features = {
          "ABCI" = [ "anoma_vm_env/ABCI" ];
          "ABCI-plus-plus" = [ "anoma_vm_env/ABCI-plus-plus" ];
          "default" = [ "ABCI" ];
        };
        resolvedDefaultFeatures = [ "ABCI" "default" ];
      };
      "ansi_term" = rec {
        crateName = "ansi_term";
        version = "0.12.1";
        edition = "2015";
        sha256 = "1ljmkbilxgmhavxvxqa7qvm6f3fjggi7q2l3a72q9x0cxjvrnanm";
        authors = [
          "ogham@bsago.me"
          "Ryan Scheel (Havvy) <ryan.havvy@gmail.com>"
          "Josh Triplett <josh@joshtriplett.org>"
        ];
        dependencies = [
          {
            name = "winapi";
            packageId = "winapi 0.3.9";
            target = { target, features }: (target."os" == "windows");
            features = [ "consoleapi" "errhandlingapi" "fileapi" "handleapi" "processenv" ];
          }
        ];
        features = {
          "derive_serde_style" = [ "serde" ];
        };
      };
      "anyhow" = rec {
        crateName = "anyhow";
        version = "1.0.53";
        edition = "2018";
        sha256 = "1q06xg4jn4lpad7lj1af28x5xdwymgl1k820zj2nnrhlbi2mp94l";
        authors = [
          "David Tolnay <dtolnay@gmail.com>"
        ];
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "ark-bls12-381" = rec {
        crateName = "ark-bls12-381";
        version = "0.3.0";
        edition = "2018";
        sha256 = "1apnc5bkj8h25k86v7h5f7rwcr74rmv740qb2p88msfiklpm7gk5";
        authors = [
          "arkworks contributors"
        ];
        dependencies = [
          {
            name = "ark-ec";
            packageId = "ark-ec";
            usesDefaultFeatures = false;
          }
          {
            name = "ark-ff";
            packageId = "ark-ff";
            usesDefaultFeatures = false;
          }
          {
            name = "ark-std";
            packageId = "ark-std";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "curve" = [ "scalar_field" ];
          "default" = [ "curve" ];
          "std" = [ "ark-std/std" "ark-ff/std" "ark-ec/std" ];
        };
        resolvedDefaultFeatures = [ "curve" "default" "scalar_field" ];
      };
      "ark-ec" = rec {
        crateName = "ark-ec";
        version = "0.3.0";
        edition = "2018";
        sha256 = "0hnx0ddslng8kqdizcmqflsrqhjmrh2kndxj5lya272bdi07iafy";
        authors = [
          "arkworks contributors"
        ];
        dependencies = [
          {
            name = "ark-ff";
            packageId = "ark-ff";
            usesDefaultFeatures = false;
          }
          {
            name = "ark-serialize";
            packageId = "ark-serialize";
            usesDefaultFeatures = false;
          }
          {
            name = "ark-std";
            packageId = "ark-std";
            usesDefaultFeatures = false;
          }
          {
            name = "derivative";
            packageId = "derivative";
            features = [ "use_core" ];
          }
          {
            name = "num-traits";
            packageId = "num-traits 0.2.14";
            usesDefaultFeatures = false;
          }
          {
            name = "zeroize";
            packageId = "zeroize";
            usesDefaultFeatures = false;
            features = [ "zeroize_derive" ];
          }
        ];
        features = {
          "parallel" = [ "std" "rayon" "ark-std/parallel" ];
          "std" = [ "ark-std/std" "ark-ff/std" "ark-serialize/std" ];
        };
        resolvedDefaultFeatures = [ "default" ];
      };
      "ark-ed-on-bls12-381" = rec {
        crateName = "ark-ed-on-bls12-381";
        version = "0.3.0";
        edition = "2018";
        sha256 = "0w19ncbw204q68fpxvim95ciis0hisqn0kp7jiclz1dkgnhsvds3";
        authors = [
          "arkworks contributors"
        ];
        dependencies = [
          {
            name = "ark-bls12-381";
            packageId = "ark-bls12-381";
            usesDefaultFeatures = false;
            features = [ "scalar_field" ];
          }
          {
            name = "ark-ec";
            packageId = "ark-ec";
            usesDefaultFeatures = false;
          }
          {
            name = "ark-ff";
            packageId = "ark-ff";
            usesDefaultFeatures = false;
          }
          {
            name = "ark-std";
            packageId = "ark-std";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "r1cs" = [ "ark-r1cs-std" ];
          "std" = [ "ark-std/std" "ark-ff/std" "ark-ec/std" "ark-bls12-381/std" ];
        };
        resolvedDefaultFeatures = [ "default" ];
      };
      "ark-ff" = rec {
        crateName = "ark-ff";
        version = "0.3.0";
        edition = "2018";
        sha256 = "1mjxq12li803n31jznhblnl16rxlswm5lmrcmym14ypf8763ackb";
        authors = [
          "arkworks contributors"
        ];
        dependencies = [
          {
            name = "ark-ff-asm";
            packageId = "ark-ff-asm";
          }
          {
            name = "ark-ff-macros";
            packageId = "ark-ff-macros";
          }
          {
            name = "ark-serialize";
            packageId = "ark-serialize";
            usesDefaultFeatures = false;
          }
          {
            name = "ark-std";
            packageId = "ark-std";
            usesDefaultFeatures = false;
          }
          {
            name = "derivative";
            packageId = "derivative";
            features = [ "use_core" ];
          }
          {
            name = "num-bigint";
            packageId = "num-bigint";
            usesDefaultFeatures = false;
          }
          {
            name = "num-traits";
            packageId = "num-traits 0.2.14";
            usesDefaultFeatures = false;
          }
          {
            name = "paste";
            packageId = "paste";
          }
          {
            name = "zeroize";
            packageId = "zeroize";
            usesDefaultFeatures = false;
            features = [ "zeroize_derive" ];
          }
        ];
        buildDependencies = [
          {
            name = "rustc_version";
            packageId = "rustc_version 0.3.3";
          }
        ];
        features = {
          "parallel" = [ "std" "rayon" "ark-std/parallel" ];
          "std" = [ "ark-std/std" "ark-serialize/std" ];
        };
        resolvedDefaultFeatures = [ "default" ];
      };
      "ark-ff-asm" = rec {
        crateName = "ark-ff-asm";
        version = "0.3.0";
        edition = "2018";
        sha256 = "0i3fdiw7xl9k708zkbh0jr2w8jqwxqdd68ix9m0gnhv6py8d60nv";
        procMacro = true;
        authors = [
          "arkworks contributors"
        ];
        dependencies = [
          {
            name = "quote";
            packageId = "quote";
          }
          {
            name = "syn";
            packageId = "syn";
            features = [ "full" "parsing" "extra-traits" ];
          }
        ];

      };
      "ark-ff-macros" = rec {
        crateName = "ark-ff-macros";
        version = "0.3.0";
        edition = "2018";
        sha256 = "084bqfx24wlhbwsb67hnz3vamamw2pgyz7h0b2033jwcl2adfbyv";
        procMacro = true;
        authors = [
          "arkworks contributors"
        ];
        dependencies = [
          {
            name = "num-bigint";
            packageId = "num-bigint";
            usesDefaultFeatures = false;
          }
          {
            name = "num-traits";
            packageId = "num-traits 0.2.14";
            usesDefaultFeatures = false;
          }
          {
            name = "quote";
            packageId = "quote";
          }
          {
            name = "syn";
            packageId = "syn";
            features = [ "full" "parsing" "extra-traits" ];
          }
        ];

      };
      "ark-poly" = rec {
        crateName = "ark-poly";
        version = "0.3.0";
        edition = "2018";
        sha256 = "1ap5afg265sf34c15y6yz7di25ycckz9hznv0rbz3hipfps7h3vv";
        authors = [
          "arkworks contributors"
        ];
        dependencies = [
          {
            name = "ark-ff";
            packageId = "ark-ff";
            usesDefaultFeatures = false;
          }
          {
            name = "ark-serialize";
            packageId = "ark-serialize";
            usesDefaultFeatures = false;
            features = [ "derive" ];
          }
          {
            name = "ark-std";
            packageId = "ark-std";
            usesDefaultFeatures = false;
          }
          {
            name = "derivative";
            packageId = "derivative";
            usesDefaultFeatures = false;
            features = [ "use_core" ];
          }
          {
            name = "hashbrown";
            packageId = "hashbrown";
          }
        ];
        features = {
          "parallel" = [ "std" "ark-ff/parallel" "rayon" "ark-std/parallel" ];
          "std" = [ "ark-std/std" "ark-ff/std" ];
        };
        resolvedDefaultFeatures = [ "default" ];
      };
      "ark-serialize" = rec {
        crateName = "ark-serialize";
        version = "0.3.0";
        edition = "2018";
        sha256 = "0wg65smr5m086j58v5xajn4vik60mn1kmrsk5260zqg6iqqjnv0x";
        authors = [
          "arkworks contributors"
        ];
        dependencies = [
          {
            name = "ark-serialize-derive";
            packageId = "ark-serialize-derive";
            optional = true;
          }
          {
            name = "ark-std";
            packageId = "ark-std";
            usesDefaultFeatures = false;
          }
          {
            name = "digest";
            packageId = "digest 0.9.0";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "derive" = [ "ark-serialize-derive" ];
          "std" = [ "ark-std/std" ];
        };
        resolvedDefaultFeatures = [ "ark-serialize-derive" "default" "derive" ];
      };
      "ark-serialize-derive" = rec {
        crateName = "ark-serialize-derive";
        version = "0.3.0";
        edition = "2018";
        sha256 = "10ly34zyx2yyjlhwd4zx11wjjghz86vzl9wdagnxb1c2pzqfbm4d";
        procMacro = true;
        authors = [
          "arkworks Contributors"
        ];
        dependencies = [
          {
            name = "proc-macro2";
            packageId = "proc-macro2";
          }
          {
            name = "quote";
            packageId = "quote";
          }
          {
            name = "syn";
            packageId = "syn";
          }
        ];

      };
      "ark-std" = rec {
        crateName = "ark-std";
        version = "0.3.0";
        edition = "2018";
        sha256 = "0z2fbjicajga7skmrysx0nqjivmcnbyh03npn4la1ifb569c1whx";
        authors = [
          "arkworks contributors"
        ];
        dependencies = [
          {
            name = "num-traits";
            packageId = "num-traits 0.2.14";
            usesDefaultFeatures = false;
          }
          {
            name = "rand";
            packageId = "rand 0.8.4";
            usesDefaultFeatures = false;
            features = [ "std_rng" ];
          }
        ];
        features = {
          "default" = [ "std" ];
          "parallel" = [ "rayon" "std" ];
          "print-trace" = [ "std" "colored" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "arrayref" = rec {
        crateName = "arrayref";
        version = "0.3.6";
        edition = "2015";
        sha256 = "0i6m1l3f73i0lf0cjdf5rh3xpvxydyhfbakq7xx7bkrp5qajgid4";
        authors = [
          "David Roundy <roundyd@physics.oregonstate.edu>"
        ];

      };
      "arrayvec 0.5.2" = rec {
        crateName = "arrayvec";
        version = "0.5.2";
        edition = "2018";
        sha256 = "12q6hn01x5435bprwlb7w9m7817dyfq55yrl4psygr78bp32zdi3";
        authors = [
          "bluss"
        ];
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "array-sizes-33-128" "default" "std" ];
      };
      "arrayvec 0.7.2" = rec {
        crateName = "arrayvec";
        version = "0.7.2";
        edition = "2018";
        sha256 = "1mjl8jjqxpl0x7sm9cij61cppi7yi38cdrd1l8zjw7h7qxk2v9cd";
        authors = [
          "bluss"
        ];
        features = {
          "default" = [ "std" ];
        };
      };
      "asn1_der" = rec {
        crateName = "asn1_der";
        version = "0.7.5";
        edition = "2018";
        sha256 = "08aawbxps19a4cqgq86yhxsigb2z05491p4rgh18lacci15iybg2";
        authors = [
          "KizzyCode Software Labs./Keziah Biermann <development@kizzycode.de>"
        ];
        features = {
          "default" = [ "native_types" ];
          "no_panic" = [ "no-panic" ];
        };
        resolvedDefaultFeatures = [ "default" "native_types" ];
      };
      "assert_cmd" = rec {
        crateName = "assert_cmd";
        version = "1.0.8";
        edition = "2018";
        crateBin = [];
        sha256 = "1zhz7bgzsmwc50bknw658q6i0lcwk67v6zp74fmh31ixcz3370n9";
        authors = [
          "Pascal Hertleif <killercup@gmail.com>"
          "Ed Page <eopage@gmail.com>"
        ];
        dependencies = [
          {
            name = "bstr";
            packageId = "bstr";
          }
          {
            name = "doc-comment";
            packageId = "doc-comment";
          }
          {
            name = "predicates";
            packageId = "predicates";
            usesDefaultFeatures = false;
            features = [ "diff" ];
          }
          {
            name = "predicates-core";
            packageId = "predicates-core";
          }
          {
            name = "predicates-tree";
            packageId = "predicates-tree";
          }
          {
            name = "wait-timeout";
            packageId = "wait-timeout";
          }
        ];

      };
      "assert_matches" = rec {
        crateName = "assert_matches";
        version = "1.5.0";
        edition = "2015";
        sha256 = "1a9b3p9vy0msylyr2022sk5flid37ini1dxji5l3vwxsvw4xcd4v";
        authors = [
          "Murarth <murarth@gmail.com>"
        ];

      };
      "async-channel" = rec {
        crateName = "async-channel";
        version = "1.6.1";
        edition = "2018";
        sha256 = "06b3sq2hd8qwl2xxlc4qalg6xw3l9b41w4sym9g0q70mf93dc511";
        authors = [
          "Stjepan Glavina <stjepang@gmail.com>"
        ];
        dependencies = [
          {
            name = "concurrent-queue";
            packageId = "concurrent-queue";
          }
          {
            name = "event-listener";
            packageId = "event-listener";
          }
          {
            name = "futures-core";
            packageId = "futures-core";
          }
        ];

      };
      "async-executor" = rec {
        crateName = "async-executor";
        version = "1.4.1";
        edition = "2018";
        sha256 = "0rd9sd0rksvjwx4zzy6c69qcd7bwp3z42rpiiizfnbm2w2srn7w7";
        authors = [
          "Stjepan Glavina <stjepang@gmail.com>"
        ];
        dependencies = [
          {
            name = "async-task";
            packageId = "async-task";
          }
          {
            name = "concurrent-queue";
            packageId = "concurrent-queue";
          }
          {
            name = "fastrand";
            packageId = "fastrand";
          }
          {
            name = "futures-lite";
            packageId = "futures-lite";
          }
          {
            name = "once_cell";
            packageId = "once_cell";
          }
          {
            name = "slab";
            packageId = "slab";
          }
        ];

      };
      "async-global-executor" = rec {
        crateName = "async-global-executor";
        version = "2.0.2";
        edition = "2018";
        sha256 = "1xjacr43sbz2zk0zygpd9k14n95wa61x8n9i8mcdwdkz659fr1lm";
        authors = [
          "Marc-Antoine Perennou <Marc-Antoine@Perennou.com>"
        ];
        dependencies = [
          {
            name = "async-channel";
            packageId = "async-channel";
          }
          {
            name = "async-executor";
            packageId = "async-executor";
          }
          {
            name = "async-io";
            packageId = "async-io";
            optional = true;
          }
          {
            name = "async-mutex";
            packageId = "async-mutex";
          }
          {
            name = "blocking";
            packageId = "blocking";
          }
          {
            name = "futures-lite";
            packageId = "futures-lite";
          }
          {
            name = "num_cpus";
            packageId = "num_cpus";
          }
          {
            name = "once_cell";
            packageId = "once_cell";
          }
        ];
        features = {
          "default" = [ "async-io" ];
          "tokio" = [ "tokio-crate" ];
          "tokio02" = [ "tokio02-crate" ];
          "tokio03" = [ "tokio03-crate" ];
        };
        resolvedDefaultFeatures = [ "async-io" "default" ];
      };
      "async-io" = rec {
        crateName = "async-io";
        version = "1.6.0";
        edition = "2018";
        sha256 = "0yv0xv7nhkdhyz9z5q1hq9bavlmkrysrd1q30h69yhzjg6jfc4d8";
        authors = [
          "Stjepan Glavina <stjepang@gmail.com>"
        ];
        dependencies = [
          {
            name = "concurrent-queue";
            packageId = "concurrent-queue";
          }
          {
            name = "futures-lite";
            packageId = "futures-lite";
          }
          {
            name = "libc";
            packageId = "libc";
            target = { target, features }: (target."unix" or false);
          }
          {
            name = "log";
            packageId = "log 0.4.14";
          }
          {
            name = "once_cell";
            packageId = "once_cell";
          }
          {
            name = "parking";
            packageId = "parking";
          }
          {
            name = "polling";
            packageId = "polling";
          }
          {
            name = "slab";
            packageId = "slab";
          }
          {
            name = "socket2";
            packageId = "socket2 0.4.2";
            features = [ "all" ];
          }
          {
            name = "waker-fn";
            packageId = "waker-fn";
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.9";
            target = { target, features }: (target."windows" or false);
            features = [ "winsock2" ];
          }
        ];

      };
      "async-lock" = rec {
        crateName = "async-lock";
        version = "2.4.0";
        edition = "2018";
        sha256 = "12vrxabscfq0a20qayf60fqpgg3xchga7bawgh0a2iwrpxhyma76";
        authors = [
          "Stjepan Glavina <stjepang@gmail.com>"
        ];
        dependencies = [
          {
            name = "event-listener";
            packageId = "event-listener";
          }
        ];

      };
      "async-mutex" = rec {
        crateName = "async-mutex";
        version = "1.4.0";
        edition = "2018";
        sha256 = "0vhmsscqx48dmxw0yir6az0pbwcq6qjvcv2f43vdpn95vd9bi7a7";
        authors = [
          "Stjepan Glavina <stjepang@gmail.com>"
        ];
        dependencies = [
          {
            name = "event-listener";
            packageId = "event-listener";
          }
        ];

      };
      "async-process" = rec {
        crateName = "async-process";
        version = "1.3.0";
        edition = "2018";
        sha256 = "1impq0jj8nm9rr0afwq484ax4mq9ibk4k3hncxns19m2wdkp04w3";
        authors = [
          "Stjepan Glavina <stjepang@gmail.com>"
        ];
        dependencies = [
          {
            name = "async-io";
            packageId = "async-io";
            target = { target, features }: (target."unix" or false);
          }
          {
            name = "blocking";
            packageId = "blocking";
            target = { target, features }: (target."windows" or false);
          }
          {
            name = "cfg-if";
            packageId = "cfg-if 1.0.0";
          }
          {
            name = "event-listener";
            packageId = "event-listener";
          }
          {
            name = "futures-lite";
            packageId = "futures-lite";
          }
          {
            name = "libc";
            packageId = "libc";
            target = { target, features }: (target."unix" or false);
          }
          {
            name = "once_cell";
            packageId = "once_cell";
          }
          {
            name = "signal-hook";
            packageId = "signal-hook";
            usesDefaultFeatures = false;
            target = { target, features }: (target."unix" or false);
            features = [ "iterator" ];
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.9";
            usesDefaultFeatures = false;
            target = { target, features }: (target."windows" or false);
            features = [ "winbase" "winnt" ];
          }
        ];

      };
      "async-std" = rec {
        crateName = "async-std";
        version = "1.10.0";
        edition = "2018";
        sha256 = "0lprzax4jkslfpk9y3m721ad5jxh98g3jivvsinvi6hnala6y1gq";
        authors = [
          "Stjepan Glavina <stjepang@gmail.com>"
          "Yoshua Wuyts <yoshuawuyts@gmail.com>"
          "Friedel Ziegelmayer <me@dignifiedquire.com>"
          "Contributors to async-std"
        ];
        dependencies = [
          {
            name = "async-channel";
            packageId = "async-channel";
            optional = true;
          }
          {
            name = "async-global-executor";
            packageId = "async-global-executor";
            optional = true;
            target = { target, features }: (!(target."os" == "unknown"));
            features = [ "async-io" ];
          }
          {
            name = "async-io";
            packageId = "async-io";
            optional = true;
            target = { target, features }: (!(target."os" == "unknown"));
          }
          {
            name = "async-lock";
            packageId = "async-lock";
            optional = true;
          }
          {
            name = "async-process";
            packageId = "async-process";
            optional = true;
            target = { target, features }: (!(target."os" == "unknown"));
          }
          {
            name = "crossbeam-utils";
            packageId = "crossbeam-utils 0.8.6";
            optional = true;
          }
          {
            name = "futures-channel";
            packageId = "futures-channel";
            optional = true;
            target = { target, features }: (target."arch" == "wasm32");
          }
          {
            name = "futures-core";
            packageId = "futures-core";
            optional = true;
            usesDefaultFeatures = false;
          }
          {
            name = "futures-io";
            packageId = "futures-io";
            optional = true;
          }
          {
            name = "futures-lite";
            packageId = "futures-lite";
            optional = true;
            target = { target, features }: (!(target."os" == "unknown"));
          }
          {
            name = "gloo-timers";
            packageId = "gloo-timers";
            optional = true;
            target = { target, features }: (target."arch" == "wasm32");
            features = [ "futures" ];
          }
          {
            name = "kv-log-macro";
            packageId = "kv-log-macro";
            optional = true;
          }
          {
            name = "log";
            packageId = "log 0.4.14";
            optional = true;
            features = [ "kv_unstable" ];
          }
          {
            name = "memchr";
            packageId = "memchr";
            optional = true;
          }
          {
            name = "num_cpus";
            packageId = "num_cpus";
            optional = true;
          }
          {
            name = "once_cell";
            packageId = "once_cell";
            optional = true;
          }
          {
            name = "pin-project-lite";
            packageId = "pin-project-lite 0.2.8";
            optional = true;
          }
          {
            name = "pin-utils";
            packageId = "pin-utils";
            optional = true;
          }
          {
            name = "slab";
            packageId = "slab";
            optional = true;
          }
          {
            name = "wasm-bindgen-futures";
            packageId = "wasm-bindgen-futures";
            optional = true;
            target = { target, features }: (target."arch" == "wasm32");
          }
        ];
        features = {
          "alloc" = [ "futures-core/alloc" "pin-project-lite" ];
          "attributes" = [ "async-attributes" ];
          "default" = [ "std" "async-global-executor" "async-io" "futures-lite" "kv-log-macro" "log" "num_cpus" "pin-project-lite" "gloo-timers" ];
          "docs" = [ "attributes" "unstable" "default" ];
          "std" = [ "alloc" "crossbeam-utils" "futures-core/std" "futures-io" "memchr" "once_cell" "pin-utils" "slab" "wasm-bindgen-futures" "futures-channel" "async-channel" "async-lock" ];
          "tokio02" = [ "async-global-executor/tokio02" ];
          "tokio03" = [ "async-global-executor/tokio03" ];
          "tokio1" = [ "async-global-executor/tokio" ];
          "unstable" = [ "std" "async-io" "async-process" ];
        };
        resolvedDefaultFeatures = [ "alloc" "async-channel" "async-global-executor" "async-io" "async-lock" "async-process" "crossbeam-utils" "default" "futures-channel" "futures-core" "futures-io" "futures-lite" "gloo-timers" "kv-log-macro" "log" "memchr" "num_cpus" "once_cell" "pin-project-lite" "pin-utils" "slab" "std" "unstable" "wasm-bindgen-futures" ];
      };
      "async-std-resolver" = rec {
        crateName = "async-std-resolver";
        version = "0.20.3";
        edition = "2018";
        sha256 = "0f6690d9lz0awwcb4mginq2rb3ligbdr2c8yrddd92jdl4yjqkpd";
        libName = "async_std_resolver";
        authors = [
          "Benjamin Fry <benjaminfry@me.com>"
        ];
        dependencies = [
          {
            name = "async-std";
            packageId = "async-std";
          }
          {
            name = "async-trait";
            packageId = "async-trait";
          }
          {
            name = "futures-io";
            packageId = "futures-io";
            usesDefaultFeatures = false;
            features = [ "std" ];
          }
          {
            name = "futures-util";
            packageId = "futures-util";
            usesDefaultFeatures = false;
            features = [ "std" ];
          }
          {
            name = "pin-utils";
            packageId = "pin-utils";
          }
          {
            name = "trust-dns-resolver";
            packageId = "trust-dns-resolver";
            usesDefaultFeatures = false;
          }
        ];
        devDependencies = [
          {
            name = "async-std";
            packageId = "async-std";
            features = [ "attributes" ];
          }
          {
            name = "trust-dns-resolver";
            packageId = "trust-dns-resolver";
            usesDefaultFeatures = false;
            features = [ "testing" ];
          }
        ];
        features = {
          "default" = [ "system-config" ];
          "system-config" = [ "trust-dns-resolver/system-config" ];
        };
        resolvedDefaultFeatures = [ "default" "system-config" ];
      };
      "async-stream" = rec {
        crateName = "async-stream";
        version = "0.3.2";
        edition = "2018";
        sha256 = "0986b72jksg4lndw76py9glry3snc29bbqrna874wl5jwgkp84qp";
        authors = [
          "Carl Lerche <me@carllerche.com>"
        ];
        dependencies = [
          {
            name = "async-stream-impl";
            packageId = "async-stream-impl";
          }
          {
            name = "futures-core";
            packageId = "futures-core";
          }
        ];

      };
      "async-stream-impl" = rec {
        crateName = "async-stream-impl";
        version = "0.3.2";
        edition = "2018";
        sha256 = "024k57iwmmhzvbzacxlkssh45cqlnb8xjlvlsp60jm6fsb4di3k4";
        procMacro = true;
        authors = [
          "Carl Lerche <me@carllerche.com>"
        ];
        dependencies = [
          {
            name = "proc-macro2";
            packageId = "proc-macro2";
          }
          {
            name = "quote";
            packageId = "quote";
          }
          {
            name = "syn";
            packageId = "syn";
            features = [ "extra-traits" "full" "visit-mut" ];
          }
        ];

      };
      "async-task" = rec {
        crateName = "async-task";
        version = "4.1.0";
        edition = "2018";
        sha256 = "1s5yb9b2b1b5jdsk8s6fxaxzc908vj42sd7xlc837xds45hk0zb7";
        authors = [
          "Stjepan Glavina <stjepang@gmail.com>"
        ];
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "async-trait" = rec {
        crateName = "async-trait";
        version = "0.1.52";
        edition = "2018";
        sha256 = "1qv5l9izrd96zcrlcr4x1kh41ylq1d9702f3vl8w11m2rb67l6h6";
        procMacro = true;
        authors = [
          "David Tolnay <dtolnay@gmail.com>"
        ];
        dependencies = [
          {
            name = "proc-macro2";
            packageId = "proc-macro2";
          }
          {
            name = "quote";
            packageId = "quote";
          }
          {
            name = "syn";
            packageId = "syn";
            features = [ "full" "visit-mut" ];
          }
        ];

      };
      "async-tungstenite" = rec {
        crateName = "async-tungstenite";
        version = "0.12.0";
        edition = "2018";
        sha256 = "0p2wv5rhpnh7bg7352ppjpxb0jan611yxl2ha88w9qpqks1501g0";
        authors = [
          "Sebastian Dröge <sebastian@centricular.com>"
        ];
        dependencies = [
          {
            name = "futures-io";
            packageId = "futures-io";
            usesDefaultFeatures = false;
            features = [ "std" ];
          }
          {
            name = "futures-util";
            packageId = "futures-util";
            usesDefaultFeatures = false;
            features = [ "sink" "std" ];
          }
          {
            name = "log";
            packageId = "log 0.4.14";
          }
          {
            name = "pin-project-lite";
            packageId = "pin-project-lite 0.2.8";
          }
          {
            name = "tokio";
            packageId = "tokio";
            optional = true;
            features = [ "net" ];
          }
          {
            name = "tokio-rustls";
            packageId = "tokio-rustls";
            rename = "real-tokio-rustls";
            optional = true;
          }
          {
            name = "tungstenite";
            packageId = "tungstenite 0.12.0";
            usesDefaultFeatures = false;
          }
          {
            name = "webpki-roots";
            packageId = "webpki-roots";
            optional = true;
          }
        ];
        devDependencies = [
          {
            name = "tokio";
            packageId = "tokio";
            features = [ "full" ];
          }
        ];
        features = {
          "async-native-tls" = [ "async-std-runtime" "real-async-native-tls" ];
          "async-std-runtime" = [ "async-std" ];
          "async-tls" = [ "real-async-tls" ];
          "gio-runtime" = [ "gio" "glib" ];
          "tokio-native-tls" = [ "tokio-runtime" "real-tokio-native-tls" "real-native-tls" "tungstenite/tls" ];
          "tokio-openssl" = [ "tokio-runtime" "real-tokio-openssl" "openssl" ];
          "tokio-runtime" = [ "tokio" ];
          "tokio-rustls" = [ "tokio-runtime" "real-tokio-rustls" "webpki-roots" ];
        };
        resolvedDefaultFeatures = [ "real-tokio-rustls" "tokio" "tokio-runtime" "tokio-rustls" "webpki-roots" ];
      };
      "asynchronous-codec" = rec {
        crateName = "asynchronous-codec";
        version = "0.6.0";
        edition = "2018";
        sha256 = "147ndvbc14whavvyqrdjw769bh7199kdkhmqbz253gzdwmj53pph";
        authors = [
          "Max Inden <mail@max-inden.de>"
        ];
        dependencies = [
          {
            name = "bytes";
            packageId = "bytes 1.1.0";
          }
          {
            name = "futures-sink";
            packageId = "futures-sink";
          }
          {
            name = "futures-util";
            packageId = "futures-util";
            features = [ "io" ];
          }
          {
            name = "memchr";
            packageId = "memchr";
          }
          {
            name = "pin-project-lite";
            packageId = "pin-project-lite 0.2.8";
          }
        ];
        features = {
          "cbor" = [ "serde" "serde_cbor" ];
          "json" = [ "serde" "serde_json" ];
        };
        resolvedDefaultFeatures = [ "default" ];
      };
      "atomic" = rec {
        crateName = "atomic";
        version = "0.5.1";
        edition = "2018";
        sha256 = "0k135q1qfmxxyzrlhr47r0j38r5fnd4163rgl552qxyagrk853dq";
        authors = [
          "Amanieu d'Antras <amanieu@gmail.com>"
        ];
        buildDependencies = [
          {
            name = "autocfg";
            packageId = "autocfg 1.0.1";
          }
        ];
        features = {
          "default" = [ "fallback" ];
        };
        resolvedDefaultFeatures = [ "default" "fallback" ];
      };
      "atomic-waker" = rec {
        crateName = "atomic-waker";
        version = "1.0.0";
        edition = "2018";
        sha256 = "0ansiq5vlw684fhks2x4a4is2rqlbv50q5mi8x0fxxvx5q2p8lq6";
        authors = [
          "Stjepan Glavina <stjepang@gmail.com>"
        ];

      };
      "atty" = rec {
        crateName = "atty";
        version = "0.2.11";
        edition = "2015";
        sha256 = "0lln6vaczj521qqjbaqnb81w5p6xk4fjfkg33r0m22cm4f3mnzcs";
        authors = [
          "softprops <d.tangren@gmail.com>"
        ];
        dependencies = [
          {
            name = "libc";
            packageId = "libc";
            usesDefaultFeatures = false;
            target = { target, features }: (target."unix" or false);
          }
          {
            name = "termion";
            packageId = "termion";
            target = { target, features }: (target."os" == "redox");
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.9";
            target = { target, features }: (target."windows" or false);
            features = [ "consoleapi" "processenv" "minwinbase" "minwindef" "winbase" ];
          }
        ];

      };
      "autocfg 0.1.7" = rec {
        crateName = "autocfg";
        version = "0.1.7";
        edition = "2015";
        sha256 = "1chwgimpx5z7xbag7krr9d8asxfqbh683qhgl9kn3hxk2l0djj8x";
        authors = [
          "Josh Stone <cuviper@gmail.com>"
        ];

      };
      "autocfg 1.0.1" = rec {
        crateName = "autocfg";
        version = "1.0.1";
        edition = "2015";
        sha256 = "0jj6i9zn4gjl03kjvziqdji6rwx8ykz8zk2ngpc331z2g3fk3c6d";
        authors = [
          "Josh Stone <cuviper@gmail.com>"
        ];

      };
      "backtrace" = rec {
        crateName = "backtrace";
        version = "0.3.64";
        edition = "2018";
        sha256 = "07y3z67h9mybdw4l1cjrlqw3ng7h7m4y374d4jmk7ki3h3p1s4jy";
        authors = [
          "The Rust Project Developers"
        ];
        dependencies = [
          {
            name = "addr2line";
            packageId = "addr2line";
            usesDefaultFeatures = false;
          }
          {
            name = "cfg-if";
            packageId = "cfg-if 1.0.0";
          }
          {
            name = "libc";
            packageId = "libc";
            usesDefaultFeatures = false;
          }
          {
            name = "miniz_oxide";
            packageId = "miniz_oxide";
            usesDefaultFeatures = false;
          }
          {
            name = "object";
            packageId = "object 0.27.1";
            usesDefaultFeatures = false;
            features = [ "read_core" "elf" "macho" "pe" "unaligned" "archive" ];
          }
          {
            name = "rustc-demangle";
            packageId = "rustc-demangle";
          }
        ];
        buildDependencies = [
          {
            name = "cc";
            packageId = "cc";
          }
        ];
        features = {
          "default" = [ "std" ];
          "serialize-rustc" = [ "rustc-serialize" ];
          "serialize-serde" = [ "serde" ];
          "verify-winapi" = [ "winapi/dbghelp" "winapi/handleapi" "winapi/libloaderapi" "winapi/memoryapi" "winapi/minwindef" "winapi/processthreadsapi" "winapi/synchapi" "winapi/tlhelp32" "winapi/winbase" "winapi/winnt" ];
        };
        resolvedDefaultFeatures = [ "default" "gimli-symbolize" "std" ];
      };
      "base64 0.10.1" = rec {
        crateName = "base64";
        version = "0.10.1";
        edition = "2015";
        sha256 = "13k6bvd3n6dm7jqn9x918w65dd9xhx454bqphbnv0bkd6n9dj98b";
        authors = [
          "Alice Maz <alice@alicemaz.com>"
          "Marshall Pierce <marshall@mpierce.org>"
        ];
        dependencies = [
          {
            name = "byteorder";
            packageId = "byteorder";
          }
        ];

      };
      "base64 0.12.3" = rec {
        crateName = "base64";
        version = "0.12.3";
        edition = "2018";
        sha256 = "1zq33had71xh48n17g4kqs96szhx3yh7qibzwi4fk217n3vz0h9l";
        authors = [
          "Alice Maz <alice@alicemaz.com>"
          "Marshall Pierce <marshall@mpierce.org>"
        ];
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "base64 0.13.0" = rec {
        crateName = "base64";
        version = "0.13.0";
        edition = "2018";
        sha256 = "1z82g23mbzjgijkpcrilc7nljpxpvpf7zxf6iyiapkgka2ngwkch";
        authors = [
          "Alice Maz <alice@alicemaz.com>"
          "Marshall Pierce <marshall@mpierce.org>"
        ];
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "base64 0.9.3" = rec {
        crateName = "base64";
        version = "0.9.3";
        edition = "2015";
        sha256 = "0hs62r35bgxslawyrn1vp9rmvrkkm76fqv0vqcwd048vs876r7a8";
        authors = [
          "Alice Maz <alice@alicemaz.com>"
          "Marshall Pierce <marshall@mpierce.org>"
        ];
        dependencies = [
          {
            name = "byteorder";
            packageId = "byteorder";
          }
          {
            name = "safemem";
            packageId = "safemem";
          }
        ];

      };
      "bech32" = rec {
        crateName = "bech32";
        version = "0.8.1";
        edition = "2015";
        sha256 = "12xzbgh12v3wnv5gc4rnr6vyylyghc9xhxzp9b3ib7v3znxz17yg";
        authors = [
          "Clark Moody"
        ];
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "bincode" = rec {
        crateName = "bincode";
        version = "1.3.3";
        edition = "2015";
        sha256 = "1bfw3mnwzx5g1465kiqllp5n4r10qrqy88kdlp3jfwnq2ya5xx5i";
        authors = [
          "Ty Overby <ty@pre-alpha.com>"
          "Francesco Mazzoli <f@mazzo.li>"
          "David Tolnay <dtolnay@gmail.com>"
          "Zoey Riordan <zoey@dos.cafe>"
        ];
        dependencies = [
          {
            name = "serde";
            packageId = "serde 1.0.136";
          }
        ];
        features = {
        };
      };
      "bindgen" = rec {
        crateName = "bindgen";
        version = "0.59.2";
        edition = "2018";
        crateBin = [];
        sha256 = "1f4fpycxmbrqk8r2x9brhfgjh86mzc6bngn4a9631x78b2jaklib";
        authors = [
          "Jyun-Yan You <jyyou.tw@gmail.com>"
          "Emilio Cobos Álvarez <emilio@crisal.io>"
          "Nick Fitzgerald <fitzgen@gmail.com>"
          "The Servo project developers"
        ];
        dependencies = [
          {
            name = "bitflags";
            packageId = "bitflags";
          }
          {
            name = "cexpr";
            packageId = "cexpr";
          }
          {
            name = "clang-sys";
            packageId = "clang-sys";
            features = [ "clang_6_0" ];
          }
          {
            name = "lazy_static";
            packageId = "lazy_static 1.4.0";
          }
          {
            name = "lazycell";
            packageId = "lazycell";
          }
          {
            name = "peeking_take_while";
            packageId = "peeking_take_while";
          }
          {
            name = "proc-macro2";
            packageId = "proc-macro2";
            usesDefaultFeatures = false;
          }
          {
            name = "quote";
            packageId = "quote";
            usesDefaultFeatures = false;
          }
          {
            name = "regex";
            packageId = "regex";
            usesDefaultFeatures = false;
            features = [ "std" "unicode" ];
          }
          {
            name = "rustc-hash";
            packageId = "rustc-hash";
          }
          {
            name = "shlex";
            packageId = "shlex";
          }
        ];
        devDependencies = [
          {
            name = "shlex";
            packageId = "shlex";
          }
        ];
        features = {
          "default" = [ "logging" "clap" "runtime" "which-rustfmt" ];
          "logging" = [ "env_logger" "log" ];
          "runtime" = [ "clang-sys/runtime" ];
          "static" = [ "clang-sys/static" ];
          "which-rustfmt" = [ "which" ];
        };
        resolvedDefaultFeatures = [ "runtime" ];
      };
      "bit-set" = rec {
        crateName = "bit-set";
        version = "0.5.2";
        edition = "2015";
        sha256 = "1pjrmpsnad5ipwjsv8ppi0qrhqvgpyn3wfbvk7jy8dga6mhf24bf";
        authors = [
          "Alexis Beingessner <a.beingessner@gmail.com>"
        ];
        dependencies = [
          {
            name = "bit-vec";
            packageId = "bit-vec";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "default" = [ "std" ];
          "std" = [ "bit-vec/std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "bit-vec" = rec {
        crateName = "bit-vec";
        version = "0.6.3";
        edition = "2015";
        sha256 = "1ywqjnv60cdh1slhz67psnp422md6jdliji6alq0gmly2xm9p7rl";
        authors = [
          "Alexis Beingessner <a.beingessner@gmail.com>"
        ];
        features = {
          "default" = [ "std" ];
          "serde_no_std" = [ "serde/alloc" ];
          "serde_std" = [ "std" "serde/std" ];
        };
        resolvedDefaultFeatures = [ "std" ];
      };
      "bitflags" = rec {
        crateName = "bitflags";
        version = "1.3.2";
        edition = "2018";
        sha256 = "12ki6w8gn1ldq7yz9y680llwk5gmrhrzszaa17g1sbrw2r2qvwxy";
        authors = [
          "The Rust Project Developers"
        ];
        features = {
          "rustc-dep-of-std" = [ "core" "compiler_builtins" ];
        };
        resolvedDefaultFeatures = [ "default" ];
      };
      "blake2 0.10.4" = rec {
        crateName = "blake2";
        version = "0.10.4";
        edition = "2018";
        sha256 = "121k5yj3c8fr826pbh0gf0b3jly2ivzrfvz3lpxyabjvw2g89kxr";
        authors = [
          "RustCrypto Developers"
        ];
        dependencies = [
          {
            name = "digest";
            packageId = "digest 0.10.3";
            features = [ "mac" ];
          }
        ];
        devDependencies = [
          {
            name = "digest";
            packageId = "digest 0.10.3";
            features = [ "dev" ];
          }
        ];
        features = {
          "default" = [ "std" ];
          "simd_asm" = [ "simd_opt" ];
          "simd_opt" = [ "simd" ];
          "std" = [ "digest/std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "blake2 0.9.2" = rec {
        crateName = "blake2";
        version = "0.9.2";
        edition = "2018";
        sha256 = "0x7i67c0hn3bzcwny08rgjrrnarqnqw10qpmh2blbx9hd78kfkha";
        authors = [
          "RustCrypto Developers"
        ];
        dependencies = [
          {
            name = "crypto-mac";
            packageId = "crypto-mac 0.8.0";
          }
          {
            name = "digest";
            packageId = "digest 0.9.0";
          }
          {
            name = "opaque-debug";
            packageId = "opaque-debug 0.3.0";
          }
        ];
        devDependencies = [
          {
            name = "crypto-mac";
            packageId = "crypto-mac 0.8.0";
            features = [ "dev" ];
          }
          {
            name = "digest";
            packageId = "digest 0.9.0";
            features = [ "dev" ];
          }
        ];
        features = {
          "default" = [ "std" ];
          "simd_asm" = [ "simd_opt" ];
          "simd_opt" = [ "simd" ];
          "std" = [ "digest/std" "crypto-mac/std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "blake2b-rs" = rec {
        crateName = "blake2b-rs";
        version = "0.2.0";
        edition = "2018";
        sha256 = "0w977b7wqlf096aviis61wprnzwyh68y6s49509vj8bzh1jqb6m8";
        authors = [
          "zhangsoledad <787953403@qq.com>"
        ];
        dependencies = [
          {
            name = "cty";
            packageId = "cty";
          }
        ];
        buildDependencies = [
          {
            name = "cc";
            packageId = "cc";
          }
        ];

      };
      "blake2b_simd" = rec {
        crateName = "blake2b_simd";
        version = "1.0.0";
        edition = "2018";
        sha256 = "09v1qymsplpivdxsgd0p8rxlkdc0cjsq70y3s4vggy67mzj6x4vj";
        authors = [
          "Jack O'Connor"
        ];
        dependencies = [
          {
            name = "arrayref";
            packageId = "arrayref";
          }
          {
            name = "arrayvec";
            packageId = "arrayvec 0.7.2";
            usesDefaultFeatures = false;
          }
          {
            name = "constant_time_eq";
            packageId = "constant_time_eq";
          }
        ];
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "blake3" = rec {
        crateName = "blake3";
        version = "1.3.1";
        edition = "2018";
        sha256 = "0gqqdi4xdnkf270gk4qqz7qha8jjf6ymdbkgzrdv2jsnbby573m0";
        authors = [
          "Jack O'Connor <oconnor663@gmail.com>"
          "Samuel Neves"
        ];
        dependencies = [
          {
            name = "arrayref";
            packageId = "arrayref";
          }
          {
            name = "arrayvec";
            packageId = "arrayvec 0.7.2";
            usesDefaultFeatures = false;
          }
          {
            name = "cfg-if";
            packageId = "cfg-if 1.0.0";
          }
          {
            name = "constant_time_eq";
            packageId = "constant_time_eq";
          }
          {
            name = "digest";
            packageId = "digest 0.10.3";
            optional = true;
            features = [ "mac" ];
          }
        ];
        buildDependencies = [
          {
            name = "cc";
            packageId = "cc";
          }
        ];
        features = {
          "default" = [ "std" ];
          "std" = [ "digest/std" ];
          "traits-preview" = [ "digest" ];
        };
        resolvedDefaultFeatures = [ "default" "digest" "std" ];
      };
      "block-buffer 0.10.0" = rec {
        crateName = "block-buffer";
        version = "0.10.0";
        edition = "2018";
        sha256 = "15cbh9jbcfcbbi863dlmamjka2f8l55ld915vr0b0xlf0l16mlzi";
        authors = [
          "RustCrypto Developers"
        ];
        dependencies = [
          {
            name = "generic-array";
            packageId = "generic-array 0.14.5";
          }
        ];

      };
      "block-buffer 0.7.3" = rec {
        crateName = "block-buffer";
        version = "0.7.3";
        edition = "2015";
        sha256 = "12v8wizynqin0hqf140kmp9s38q223mp1b0hkqk8j5pk8720v560";
        authors = [
          "RustCrypto Developers"
        ];
        dependencies = [
          {
            name = "block-padding";
            packageId = "block-padding 0.1.5";
          }
          {
            name = "byte-tools";
            packageId = "byte-tools";
          }
          {
            name = "byteorder";
            packageId = "byteorder";
            usesDefaultFeatures = false;
          }
          {
            name = "generic-array";
            packageId = "generic-array 0.12.4";
          }
        ];

      };
      "block-buffer 0.9.0" = rec {
        crateName = "block-buffer";
        version = "0.9.0";
        edition = "2018";
        sha256 = "1r4pf90s7d7lj1wdjhlnqa26vvbm6pnc33z138lxpnp9srpi2lj1";
        authors = [
          "RustCrypto Developers"
        ];
        dependencies = [
          {
            name = "block-padding";
            packageId = "block-padding 0.2.1";
            optional = true;
          }
          {
            name = "generic-array";
            packageId = "generic-array 0.14.5";
          }
        ];

        resolvedDefaultFeatures = [ "block-padding" ];
      };
      "block-padding 0.1.5" = rec {
        crateName = "block-padding";
        version = "0.1.5";
        edition = "2015";
        sha256 = "1xbkmysiz23vimd17rnsjpw9bgjxipwfslwyygqlkx4in3dxwygs";
        authors = [
          "RustCrypto Developers"
        ];
        dependencies = [
          {
            name = "byte-tools";
            packageId = "byte-tools";
          }
        ];

      };
      "block-padding 0.2.1" = rec {
        crateName = "block-padding";
        version = "0.2.1";
        edition = "2018";
        sha256 = "1bickjlmfw9iv63dp781n589rfybw879mik1va59833m1hvnqscd";
        authors = [
          "RustCrypto Developers"
        ];

      };
      "blocking" = rec {
        crateName = "blocking";
        version = "1.1.0";
        edition = "2018";
        sha256 = "09zlnl0zc417ryz6in6ca8c6rrfyp3gb21xlz3vb34fknba4fvh4";
        authors = [
          "Stjepan Glavina <stjepang@gmail.com>"
        ];
        dependencies = [
          {
            name = "async-channel";
            packageId = "async-channel";
          }
          {
            name = "async-task";
            packageId = "async-task";
          }
          {
            name = "atomic-waker";
            packageId = "atomic-waker";
          }
          {
            name = "fastrand";
            packageId = "fastrand";
          }
          {
            name = "futures-lite";
            packageId = "futures-lite";
          }
          {
            name = "once_cell";
            packageId = "once_cell";
          }
        ];

      };
      "borsh" = rec {
        crateName = "borsh";
        version = "0.9.4";
        edition = "2018";
        crateBin = [];
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/heliaxdev/borsh-rs.git";
          rev = "cd5223e5103c4f139e0c54cf8259b7ec5ec4073a";
          sha256 = "1f25rlxk1bgcv4qr88vv2nxwa31s9mjj7x0zx8bkdicjx78gxkay";
        };
        authors = [
          "Near Inc <hello@near.org>"
        ];
        dependencies = [
          {
            name = "borsh-derive";
            packageId = "borsh-derive";
          }
          {
            name = "hashbrown";
            packageId = "hashbrown";
          }
        ];
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "borsh-derive" = rec {
        crateName = "borsh-derive";
        version = "0.9.4";
        edition = "2018";
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/heliaxdev/borsh-rs.git";
          rev = "cd5223e5103c4f139e0c54cf8259b7ec5ec4073a";
          sha256 = "1f25rlxk1bgcv4qr88vv2nxwa31s9mjj7x0zx8bkdicjx78gxkay";
        };
        procMacro = true;
        authors = [
          "Near Inc <hello@nearprotocol.com>"
        ];
        dependencies = [
          {
            name = "borsh-derive-internal";
            packageId = "borsh-derive-internal";
          }
          {
            name = "borsh-schema-derive-internal";
            packageId = "borsh-schema-derive-internal";
          }
          {
            name = "proc-macro-crate";
            packageId = "proc-macro-crate 0.1.5";
          }
          {
            name = "proc-macro2";
            packageId = "proc-macro2";
          }
          {
            name = "syn";
            packageId = "syn";
            features = [ "full" "fold" ];
          }
        ];

      };
      "borsh-derive-internal" = rec {
        crateName = "borsh-derive-internal";
        version = "0.9.4";
        edition = "2018";
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/heliaxdev/borsh-rs.git";
          rev = "cd5223e5103c4f139e0c54cf8259b7ec5ec4073a";
          sha256 = "1f25rlxk1bgcv4qr88vv2nxwa31s9mjj7x0zx8bkdicjx78gxkay";
        };
        authors = [
          "Near Inc <hello@nearprotocol.com>"
        ];
        dependencies = [
          {
            name = "proc-macro2";
            packageId = "proc-macro2";
          }
          {
            name = "quote";
            packageId = "quote";
          }
          {
            name = "syn";
            packageId = "syn";
            features = [ "full" "fold" ];
          }
        ];

      };
      "borsh-schema-derive-internal" = rec {
        crateName = "borsh-schema-derive-internal";
        version = "0.9.4";
        edition = "2018";
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/heliaxdev/borsh-rs.git";
          rev = "cd5223e5103c4f139e0c54cf8259b7ec5ec4073a";
          sha256 = "1f25rlxk1bgcv4qr88vv2nxwa31s9mjj7x0zx8bkdicjx78gxkay";
        };
        authors = [
          "Near Inc <hello@nearprotocol.com>"
        ];
        dependencies = [
          {
            name = "proc-macro2";
            packageId = "proc-macro2";
          }
          {
            name = "quote";
            packageId = "quote";
          }
          {
            name = "syn";
            packageId = "syn";
            features = [ "full" "fold" ];
          }
        ];

      };
      "bs58" = rec {
        crateName = "bs58";
        version = "0.4.0";
        edition = "2018";
        sha256 = "1lr3vwzhhyica4y7rbkf26vr1h7vpjb1m6rml8zcqgw81c2y07vp";
        authors = [
          "Wim Looman <wim@nemo157.com>"
        ];
        features = {
          "check" = [ "sha2" ];
          "default" = [ "std" ];
          "std" = [ "alloc" ];
        };
        resolvedDefaultFeatures = [ "alloc" "default" "std" ];
      };
      "bstr" = rec {
        crateName = "bstr";
        version = "0.2.17";
        edition = "2018";
        sha256 = "08rjbhysy6gg27db2h3pnhvr2mlr5vkj797i9625kwg8hgrnjdds";
        authors = [
          "Andrew Gallant <jamslam@gmail.com>"
        ];
        dependencies = [
          {
            name = "lazy_static";
            packageId = "lazy_static 1.4.0";
            optional = true;
          }
          {
            name = "memchr";
            packageId = "memchr";
            usesDefaultFeatures = false;
          }
          {
            name = "regex-automata";
            packageId = "regex-automata";
            optional = true;
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "default" = [ "std" "unicode" ];
          "serde1" = [ "std" "serde1-nostd" "serde/std" ];
          "serde1-nostd" = [ "serde" ];
          "std" = [ "memchr/std" ];
          "unicode" = [ "lazy_static" "regex-automata" ];
        };
        resolvedDefaultFeatures = [ "default" "lazy_static" "regex-automata" "std" "unicode" ];
      };
      "bumpalo" = rec {
        crateName = "bumpalo";
        version = "3.9.1";
        edition = "2018";
        sha256 = "1688dv6s0cbj72p9lmll8a02a85dzxvdw2is7pji490zmd35m954";
        authors = [
          "Nick Fitzgerald <fitzgen@gmail.com>"
        ];
        features = {
        };
        resolvedDefaultFeatures = [ "default" ];
      };
      "byte-tools" = rec {
        crateName = "byte-tools";
        version = "0.3.1";
        edition = "2015";
        sha256 = "1mqi29wsm8njpl51pfwr31wmpzs5ahlcb40wsjyd92l90ixcmdg3";
        authors = [
          "RustCrypto Developers"
        ];

      };
      "byte-unit" = rec {
        crateName = "byte-unit";
        version = "4.0.13";
        edition = "2018";
        sha256 = "0zxfqic18j1byrxhn7msqbywzx2sp9izs89zksaadmy71rdzqvwm";
        authors = [
          "Magic Len <len@magiclen.org>"
        ];
        dependencies = [
          {
            name = "utf8-width";
            packageId = "utf8-width";
          }
        ];
        features = {
          "default" = [ "std" "u128" ];
        };
        resolvedDefaultFeatures = [ "default" "std" "u128" ];
      };
      "bytecheck" = rec {
        crateName = "bytecheck";
        version = "0.6.7";
        edition = "2018";
        sha256 = "1gjasf0viyrn1p01fb77n3n8ga8mjif6wvixgk5n98nd67m8jj1i";
        authors = [
          "David Koloski <djkoloski@gmail.com>"
        ];
        dependencies = [
          {
            name = "bytecheck_derive";
            packageId = "bytecheck_derive";
            usesDefaultFeatures = false;
          }
          {
            name = "ptr_meta";
            packageId = "ptr_meta";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "default" = [ "std" ];
          "simdutf8_std" = [ "simdutf8/std" ];
          "std" = [ "ptr_meta/std" "bytecheck_derive/std" ];
        };
        resolvedDefaultFeatures = [ "std" ];
      };
      "bytecheck_derive" = rec {
        crateName = "bytecheck_derive";
        version = "0.6.7";
        edition = "2018";
        sha256 = "0006ycn72g788hzfy5zd7gl3hxhqi5dj0q7plrjydnimq693nasa";
        procMacro = true;
        authors = [
          "David Koloski <djkoloski@gmail.com>"
        ];
        dependencies = [
          {
            name = "proc-macro2";
            packageId = "proc-macro2";
          }
          {
            name = "quote";
            packageId = "quote";
          }
          {
            name = "syn";
            packageId = "syn";
          }
        ];
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "std" ];
      };
      "byteorder" = rec {
        crateName = "byteorder";
        version = "1.4.3";
        edition = "2018";
        sha256 = "0456lv9xi1a5bcm32arknf33ikv76p3fr9yzki4lb2897p2qkh8l";
        authors = [
          "Andrew Gallant <jamslam@gmail.com>"
        ];
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "i128" "std" ];
      };
      "bytes 0.4.12" = rec {
        crateName = "bytes";
        version = "0.4.12";
        edition = "2015";
        sha256 = "0768a55q2fsqdjsvcv98ndg9dq7w2g44dvq1avhwpxrdzbydyvr0";
        authors = [
          "Carl Lerche <me@carllerche.com>"
        ];
        dependencies = [
          {
            name = "byteorder";
            packageId = "byteorder";
          }
          {
            name = "iovec";
            packageId = "iovec";
          }
        ];
        features = {
          "i128" = [ "byteorder/i128" ];
        };
      };
      "bytes 0.5.6" = rec {
        crateName = "bytes";
        version = "0.5.6";
        edition = "2018";
        sha256 = "0f5s7xq6qzmdh22ygsy8v0sp02m51y0radvq4i4y8cizy1lfqk0f";
        authors = [
          "Carl Lerche <me@carllerche.com>"
          "Sean McArthur <sean@seanmonstar.com>"
        ];
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "bytes 1.1.0" = rec {
        crateName = "bytes";
        version = "1.1.0";
        edition = "2018";
        sha256 = "1y70b249m02lfp0j6565b29kviapj4xsl9whamcqwddnp9kjv1y4";
        authors = [
          "Carl Lerche <me@carllerche.com>"
          "Sean McArthur <sean@seanmonstar.com>"
        ];
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "cache-padded" = rec {
        crateName = "cache-padded";
        version = "1.2.0";
        edition = "2018";
        sha256 = "0b39fmvn6j47xcyc03biyh8kdd52qwhb55xmx72hj3y73ri5kny1";
        authors = [
          "Stjepan Glavina <stjepang@gmail.com>"
        ];

      };
      "cargo-watch" = rec {
        crateName = "cargo-watch";
        version = "7.7.0";
        edition = "2018";
        crateBin = [];
        sha256 = "17vkdjyl5nzj1q6ma1ydngyhkw370ccfsjbzv78jhq1110lwz94p";
        authors = [
          "Félix Saparelli <felix@passcod.name>"
        ];
        dependencies = [
          {
            name = "clap";
            packageId = "clap 2.34.0";
          }
          {
            name = "log";
            packageId = "log 0.4.14";
          }
          {
            name = "shell-escape";
            packageId = "shell-escape";
          }
          {
            name = "stderrlog";
            packageId = "stderrlog";
          }
          {
            name = "watchexec";
            packageId = "watchexec";
          }
        ];

      };
      "cc" = rec {
        crateName = "cc";
        version = "1.0.72";
        edition = "2018";
        crateBin = [];
        sha256 = "1vl50h2qh0nh0iddzj6gd1pnxnxpvwmbfxc30578c1pajmxi7a92";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        dependencies = [
          {
            name = "jobserver";
            packageId = "jobserver";
            optional = true;
          }
        ];
        features = {
          "parallel" = [ "jobserver" ];
        };
        resolvedDefaultFeatures = [ "jobserver" "parallel" ];
      };
      "cexpr" = rec {
        crateName = "cexpr";
        version = "0.6.0";
        edition = "2018";
        sha256 = "0rl77bwhs5p979ih4r0202cn5jrfsrbgrksp40lkfz5vk1x3ib3g";
        authors = [
          "Jethro Beekman <jethro@jbeekman.nl>"
        ];
        dependencies = [
          {
            name = "nom";
            packageId = "nom 7.1.0";
            usesDefaultFeatures = false;
            features = [ "std" ];
          }
        ];

      };
      "cfg-if 0.1.10" = rec {
        crateName = "cfg-if";
        version = "0.1.10";
        edition = "2018";
        sha256 = "08h80ihs74jcyp24cd75wwabygbbdgl05k6p5dmq8akbr78vv1a7";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        features = {
          "rustc-dep-of-std" = [ "core" "compiler_builtins" ];
        };
      };
      "cfg-if 1.0.0" = rec {
        crateName = "cfg-if";
        version = "1.0.0";
        edition = "2018";
        sha256 = "1za0vb97n4brpzpv8lsbnzmq5r8f2b0cpqqr0sy8h5bn751xxwds";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        features = {
          "rustc-dep-of-std" = [ "core" "compiler_builtins" ];
        };
      };
      "chacha20 0.7.3" = rec {
        crateName = "chacha20";
        version = "0.7.3";
        edition = "2018";
        sha256 = "1c8h4sp9zh13v8p9arydjcj92xc6j3mccrjc4mizrvq7fzx9717h";
        authors = [
          "RustCrypto Developers"
        ];
        dependencies = [
          {
            name = "cfg-if";
            packageId = "cfg-if 1.0.0";
          }
          {
            name = "cipher";
            packageId = "cipher";
            optional = true;
          }
          {
            name = "cpufeatures";
            packageId = "cpufeatures";
            target = { target, features }: ((target."arch" == "x86_64") || (target."arch" == "x86"));
          }
          {
            name = "zeroize";
            packageId = "zeroize";
            optional = true;
            usesDefaultFeatures = false;
          }
        ];
        devDependencies = [
          {
            name = "cipher";
            packageId = "cipher";
            features = [ "dev" ];
          }
        ];
        features = {
          "default" = [ "xchacha" ];
          "hchacha" = [ "xchacha" ];
          "legacy" = [ "cipher" ];
          "rng" = [ "rand_core" ];
          "std" = [ "cipher/std" ];
          "xchacha" = [ "cipher" ];
        };
        resolvedDefaultFeatures = [ "cipher" "default" "xchacha" "zeroize" ];
      };
      "chacha20 0.8.1" = rec {
        crateName = "chacha20";
        version = "0.8.1";
        edition = "2018";
        sha256 = "14cgpnnpqsn5hmqkgrj4yaqdsvy56hkgcw5s2gqsxwhc7m1jmdq1";
        authors = [
          "RustCrypto Developers"
        ];
        dependencies = [
          {
            name = "cfg-if";
            packageId = "cfg-if 1.0.0";
          }
          {
            name = "cipher";
            packageId = "cipher";
            optional = true;
          }
          {
            name = "cpufeatures";
            packageId = "cpufeatures";
            target = { target, features }: ((target."arch" == "x86_64") || (target."arch" == "x86"));
          }
        ];
        devDependencies = [
          {
            name = "cipher";
            packageId = "cipher";
            features = [ "dev" ];
          }
        ];
        features = {
          "default" = [ "cipher" ];
          "hchacha" = [ "cipher" ];
          "legacy" = [ "cipher" ];
          "rng" = [ "rand_core" ];
          "std" = [ "cipher/std" ];
        };
        resolvedDefaultFeatures = [ "cipher" "default" ];
      };
      "chacha20poly1305" = rec {
        crateName = "chacha20poly1305";
        version = "0.8.2";
        edition = "2018";
        sha256 = "18mb6k1w71dqv5q50an4rvp19l6yg8ssmvfrmknjfh2z0az7lm5n";
        authors = [
          "RustCrypto Developers"
        ];
        dependencies = [
          {
            name = "aead";
            packageId = "aead";
            usesDefaultFeatures = false;
          }
          {
            name = "chacha20";
            packageId = "chacha20 0.7.3";
            optional = true;
            features = [ "zeroize" ];
          }
          {
            name = "cipher";
            packageId = "cipher";
          }
          {
            name = "poly1305";
            packageId = "poly1305";
          }
          {
            name = "zeroize";
            packageId = "zeroize";
            usesDefaultFeatures = false;
          }
        ];
        devDependencies = [
          {
            name = "aead";
            packageId = "aead";
            usesDefaultFeatures = false;
            features = [ "dev" ];
          }
        ];
        features = {
          "alloc" = [ "aead/alloc" ];
          "chacha20-reduced-round" = [ "chacha20" ];
          "default" = [ "alloc" "chacha20" "xchacha20" ];
          "force-soft" = [ "chacha20/force-soft" "poly1305/force-soft" ];
          "heapless" = [ "aead/heapless" ];
          "reduced-round" = [ "chacha20-reduced-round" "xchacha20-reduced-round" ];
          "std" = [ "aead/std" "alloc" ];
          "stream" = [ "aead/stream" ];
          "xchacha20" = [ "chacha20/xchacha" ];
          "xchacha20-reduced-round" = [ "xchacha20" ];
          "xchacha20poly1305" = [ "xchacha20" ];
        };
        resolvedDefaultFeatures = [ "alloc" "chacha20" "default" "xchacha20" ];
      };
      "chrono" = rec {
        crateName = "chrono";
        version = "0.4.19";
        edition = "2015";
        sha256 = "0wyfl6c00vhfl562spnfcna3zkw8jqvcp652m9iskhl8j26dc2k7";
        authors = [
          "Kang Seonghoon <public+rust@mearie.org>"
          "Brandon W Maister <quodlibetor@gmail.com>"
        ];
        dependencies = [
          {
            name = "libc";
            packageId = "libc";
            optional = true;
          }
          {
            name = "num-integer";
            packageId = "num-integer";
            usesDefaultFeatures = false;
          }
          {
            name = "num-traits";
            packageId = "num-traits 0.2.14";
            usesDefaultFeatures = false;
          }
          {
            name = "time";
            packageId = "time 0.1.44";
            optional = true;
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.9";
            optional = true;
            target = { target, features }: (target."windows" or false);
            features = [ "std" "minwinbase" "minwindef" "timezoneapi" ];
          }
        ];
        features = {
          "clock" = [ "libc" "std" "winapi" ];
          "default" = [ "clock" "std" "oldtime" ];
          "oldtime" = [ "time" ];
          "unstable-locales" = [ "pure-rust-locales" "alloc" ];
          "wasmbind" = [ "wasm-bindgen" "js-sys" ];
        };
        resolvedDefaultFeatures = [ "clock" "default" "libc" "oldtime" "std" "time" "winapi" ];
      };
      "cipher" = rec {
        crateName = "cipher";
        version = "0.3.0";
        edition = "2018";
        sha256 = "1dyzsv0c84rgz98d5glnhsz4320wl24x3bq511vnyf0mxir21rby";
        authors = [
          "RustCrypto Developers"
        ];
        dependencies = [
          {
            name = "generic-array";
            packageId = "generic-array 0.14.5";
          }
        ];
        features = {
          "dev" = [ "blobby" ];
        };
      };
      "clang-sys" = rec {
        crateName = "clang-sys";
        version = "1.3.0";
        edition = "2015";
        sha256 = "142cl9zyspf13r95mangwl3yw0lbc0q20wr02nf2wg5jkidh8rps";
        authors = [
          "Kyle Mayes <kyle@mayeses.com>"
        ];
        dependencies = [
          {
            name = "glob";
            packageId = "glob";
          }
          {
            name = "libc";
            packageId = "libc";
            usesDefaultFeatures = false;
          }
          {
            name = "libloading";
            packageId = "libloading";
            optional = true;
          }
        ];
        buildDependencies = [
          {
            name = "glob";
            packageId = "glob";
          }
        ];
        features = {
          "clang_10_0" = [ "clang_9_0" ];
          "clang_11_0" = [ "clang_10_0" ];
          "clang_12_0" = [ "clang_11_0" ];
          "clang_13_0" = [ "clang_12_0" ];
          "clang_3_6" = [ "clang_3_5" ];
          "clang_3_7" = [ "clang_3_6" ];
          "clang_3_8" = [ "clang_3_7" ];
          "clang_3_9" = [ "clang_3_8" ];
          "clang_4_0" = [ "clang_3_9" ];
          "clang_5_0" = [ "clang_4_0" ];
          "clang_6_0" = [ "clang_5_0" ];
          "clang_7_0" = [ "clang_6_0" ];
          "clang_8_0" = [ "clang_7_0" ];
          "clang_9_0" = [ "clang_8_0" ];
          "runtime" = [ "libloading" ];
        };
        resolvedDefaultFeatures = [ "clang_3_5" "clang_3_6" "clang_3_7" "clang_3_8" "clang_3_9" "clang_4_0" "clang_5_0" "clang_6_0" "libloading" "runtime" ];
      };
      "clap 2.34.0" = rec {
        crateName = "clap";
        version = "2.34.0";
        edition = "2018";
        sha256 = "071q5d8jfwbazi6zhik9xwpacx5i6kb2vkzy060vhf0c3120aqd0";
        authors = [
          "Kevin K. <kbknapp@gmail.com>"
        ];
        dependencies = [
          {
            name = "ansi_term";
            packageId = "ansi_term";
            optional = true;
            target = { target, features }: (!(target."windows" or false));
          }
          {
            name = "atty";
            packageId = "atty";
            optional = true;
          }
          {
            name = "bitflags";
            packageId = "bitflags";
          }
          {
            name = "strsim";
            packageId = "strsim 0.8.0";
            optional = true;
          }
          {
            name = "term_size";
            packageId = "term_size";
            optional = true;
          }
          {
            name = "textwrap";
            packageId = "textwrap 0.11.0";
          }
          {
            name = "unicode-width";
            packageId = "unicode-width";
          }
          {
            name = "vec_map";
            packageId = "vec_map";
            optional = true;
          }
        ];
        features = {
          "color" = [ "ansi_term" "atty" ];
          "default" = [ "suggestions" "color" "vec_map" ];
          "doc" = [ "yaml" ];
          "suggestions" = [ "strsim" ];
          "wrap_help" = [ "term_size" "textwrap/term_size" ];
          "yaml" = [ "yaml-rust" ];
        };
        resolvedDefaultFeatures = [ "ansi_term" "atty" "color" "default" "strsim" "suggestions" "term_size" "vec_map" "wrap_help" ];
      };
      "clap 3.0.0-beta.2" = rec {
        crateName = "clap";
        version = "3.0.0-beta.2";
        edition = "2018";
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/clap-rs/clap/";
          rev = "08b2f4d4289eca8a9225bbc56d5a5ad1e99e38e1";
          sha256 = "0d2idys7mxxvbv5fy6ssqa991f8cfi41zfmfkwwf0wcyvr7ikcn1";
        };
        authors = [
          "Kevin K. <kbknapp@gmail.com>"
          "Clap Maintainers"
        ];
        dependencies = [
          {
            name = "atty";
            packageId = "atty";
            optional = true;
          }
          {
            name = "bitflags";
            packageId = "bitflags";
          }
          {
            name = "indexmap";
            packageId = "indexmap";
          }
          {
            name = "lazy_static";
            packageId = "lazy_static 1.4.0";
            optional = true;
          }
          {
            name = "os_str_bytes";
            packageId = "os_str_bytes";
            features = [ "raw" ];
          }
          {
            name = "strsim";
            packageId = "strsim 0.10.0";
            optional = true;
          }
          {
            name = "termcolor";
            packageId = "termcolor";
            optional = true;
          }
          {
            name = "textwrap";
            packageId = "textwrap 0.12.1";
          }
          {
            name = "unicode-width";
            packageId = "unicode-width";
          }
          {
            name = "vec_map";
            packageId = "vec_map";
          }
        ];
        devDependencies = [
          {
            name = "lazy_static";
            packageId = "lazy_static 1.4.0";
          }
        ];
        features = {
          "cargo" = [ "lazy_static" ];
          "color" = [ "atty" "termcolor" ];
          "debug" = [ "clap_derive/debug" ];
          "default" = [ "suggestions" "color" "derive" "std" "cargo" ];
          "derive" = [ "clap_derive" "lazy_static" ];
          "doc" = [ "yaml" "regex" ];
          "suggestions" = [ "strsim" ];
          "unstable" = [ "clap_derive/unstable" ];
          "wrap_help" = [ "terminal_size" "textwrap/terminal_size" ];
          "yaml" = [ "yaml-rust" ];
        };
        resolvedDefaultFeatures = [ "atty" "cargo" "color" "lazy_static" "std" "strsim" "suggestions" "termcolor" ];
      };
      "cloudabi" = rec {
        crateName = "cloudabi";
        version = "0.0.3";
        edition = "2015";
        sha256 = "0kxcg83jlihy0phnd2g8c2c303px3l2p3pkjz357ll6llnd5pz6x";
        libPath = "cloudabi.rs";
        authors = [
          "Nuxi (https://nuxi.nl/) and contributors"
        ];
        dependencies = [
          {
            name = "bitflags";
            packageId = "bitflags";
            optional = true;
          }
        ];
        features = {
          "default" = [ "bitflags" ];
        };
        resolvedDefaultFeatures = [ "bitflags" "default" ];
      };
      "clru" = rec {
        crateName = "clru";
        version = "0.5.0";
        edition = "2018";
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/marmeladema/clru-rs.git";
          rev = "71ca566915f21f3c308091ca7756a91b0f8b5afc";
          sha256 = "1fygy09cz1kzf7cgpkd46a78sndqlxhbzx77vy2jq60nlwm5ylzz";
        };
        authors = [
          "marmeladema <xademax@gmail.com>"
        ];

      };
      "color-eyre" = rec {
        crateName = "color-eyre";
        version = "0.5.11";
        edition = "2018";
        sha256 = "1dspj58bk57f9hiqlvbz25rik92i4a95iwa2dl4pg8g8grlqa60z";
        authors = [
          "Jane Lusby <jlusby@yaah.dev>"
        ];
        dependencies = [
          {
            name = "backtrace";
            packageId = "backtrace";
            features = [ "gimli-symbolize" ];
          }
          {
            name = "color-spantrace";
            packageId = "color-spantrace";
            optional = true;
          }
          {
            name = "eyre";
            packageId = "eyre";
          }
          {
            name = "indenter";
            packageId = "indenter";
          }
          {
            name = "once_cell";
            packageId = "once_cell";
          }
          {
            name = "owo-colors";
            packageId = "owo-colors";
          }
          {
            name = "tracing-error";
            packageId = "tracing-error";
            optional = true;
          }
        ];
        features = {
          "capture-spantrace" = [ "tracing-error" "color-spantrace" ];
          "default" = [ "track-caller" "capture-spantrace" ];
          "issue-url" = [ "url" ];
        };
        resolvedDefaultFeatures = [ "capture-spantrace" "color-spantrace" "default" "tracing-error" "track-caller" ];
      };
      "color-spantrace" = rec {
        crateName = "color-spantrace";
        version = "0.1.6";
        edition = "2018";
        sha256 = "1lb2li71zvpxp80nck98gcqbqm3dnmp43pnlvm52z9x8livy9vmn";
        authors = [
          "Jane Lusby <jlusby@yaah.dev>"
        ];
        dependencies = [
          {
            name = "once_cell";
            packageId = "once_cell";
          }
          {
            name = "owo-colors";
            packageId = "owo-colors";
          }
          {
            name = "tracing-core";
            packageId = "tracing-core 0.1.22 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "tracing-error";
            packageId = "tracing-error";
          }
        ];

      };
      "concat-idents" = rec {
        crateName = "concat-idents";
        version = "1.1.3";
        edition = "2018";
        sha256 = "0bqdl6vml2ksyz6hc4xlpw3iqaagxs7xn0xinwa51ms80a390vsb";
        procMacro = true;
        authors = [
          "Dzenan Jupic <info@dzenanjupic.de>"
        ];
        dependencies = [
          {
            name = "quote";
            packageId = "quote";
          }
          {
            name = "syn";
            packageId = "syn";
            features = [ "full" "visit-mut" ];
          }
        ];

      };
      "concurrent-queue" = rec {
        crateName = "concurrent-queue";
        version = "1.2.2";
        edition = "2018";
        sha256 = "18w6hblcjjk9d0my3657ra1zdj79gwfjmzvc0b3985g01dahgv9h";
        authors = [
          "Stjepan Glavina <stjepang@gmail.com>"
        ];
        dependencies = [
          {
            name = "cache-padded";
            packageId = "cache-padded";
          }
        ];

      };
      "config" = rec {
        crateName = "config";
        version = "0.11.0";
        edition = "2015";
        sha256 = "0sdkxv77m65frsn3bx0r3v7asxar3gy3hmghcfk6h4rbijars6qv";
        authors = [
          "Ryan Leckey <leckey.ryan@gmail.com>"
        ];
        dependencies = [
          {
            name = "lazy_static";
            packageId = "lazy_static 1.4.0";
          }
          {
            name = "nom";
            packageId = "nom 5.1.2";
          }
          {
            name = "rust-ini";
            packageId = "rust-ini";
            optional = true;
          }
          {
            name = "serde";
            packageId = "serde 1.0.136";
          }
          {
            name = "serde-hjson";
            packageId = "serde-hjson";
            optional = true;
            usesDefaultFeatures = false;
          }
          {
            name = "serde_json";
            packageId = "serde_json";
            optional = true;
          }
          {
            name = "toml";
            packageId = "toml";
            optional = true;
          }
          {
            name = "yaml-rust";
            packageId = "yaml-rust";
            optional = true;
          }
        ];
        features = {
          "default" = [ "toml" "json" "yaml" "hjson" "ini" ];
          "hjson" = [ "serde-hjson" ];
          "ini" = [ "rust-ini" ];
          "json" = [ "serde_json" ];
          "yaml" = [ "yaml-rust" ];
        };
        resolvedDefaultFeatures = [ "default" "hjson" "ini" "json" "rust-ini" "serde-hjson" "serde_json" "toml" "yaml" "yaml-rust" ];
      };
      "constant_time_eq" = rec {
        crateName = "constant_time_eq";
        version = "0.1.5";
        edition = "2015";
        sha256 = "1g3vp04qzmk6cpzrd19yci6a95m7ap6wy7wkwgiy2pjklklrfl14";
        authors = [
          "Cesar Eduardo Barros <cesarb@cesarb.eti.br>"
        ];

      };
      "core-foundation" = rec {
        crateName = "core-foundation";
        version = "0.9.2";
        edition = "2015";
        sha256 = "1cs7dya58xf4px4b1953040fpz5lm3qhf7fzv0jf94xva42y3238";
        authors = [
          "The Servo Project Developers"
        ];
        dependencies = [
          {
            name = "core-foundation-sys";
            packageId = "core-foundation-sys";
          }
          {
            name = "libc";
            packageId = "libc";
          }
        ];
        features = {
          "mac_os_10_7_support" = [ "core-foundation-sys/mac_os_10_7_support" ];
          "mac_os_10_8_features" = [ "core-foundation-sys/mac_os_10_8_features" ];
          "with-chrono" = [ "chrono" ];
          "with-uuid" = [ "uuid" ];
        };
      };
      "core-foundation-sys" = rec {
        crateName = "core-foundation-sys";
        version = "0.8.3";
        edition = "2015";
        sha256 = "1p5r2wckarkpkyc4z83q08dwpvcafrb1h6fxfa3qnikh8szww9sq";
        authors = [
          "The Servo Project Developers"
        ];
        features = {
        };
      };
      "cpufeatures" = rec {
        crateName = "cpufeatures";
        version = "0.2.1";
        edition = "2018";
        sha256 = "0sgllzsvs8hinylaiigmd9c908gd8wclxnqz8dinpxbdyql981cm";
        authors = [
          "RustCrypto Developers"
        ];
        dependencies = [
          {
            name = "libc";
            packageId = "libc";
            target = { target, features }: (stdenv.hostPlatform.config == "aarch64-apple-darwin");
          }
          {
            name = "libc";
            packageId = "libc";
            target = { target, features }: ((target."arch" == "aarch64") && (target."os" == "linux"));
          }
        ];

      };
      "cranelift-bforest" = rec {
        crateName = "cranelift-bforest";
        version = "0.76.0";
        edition = "2018";
        sha256 = "0cvk0qwy6n5fwiq9nb39wp2323kf9z7qab7saizj81bmjrkylsvy";
        authors = [
          "The Cranelift Project Developers"
        ];
        dependencies = [
          {
            name = "cranelift-entity";
            packageId = "cranelift-entity";
            usesDefaultFeatures = false;
          }
        ];

      };
      "cranelift-codegen" = rec {
        crateName = "cranelift-codegen";
        version = "0.76.0";
        edition = "2018";
        sha256 = "0x0xkgizj2g8sjjma4rb5bsravk7i2my6ag4v9dxsavms8sl06a8";
        authors = [
          "The Cranelift Project Developers"
        ];
        dependencies = [
          {
            name = "cranelift-bforest";
            packageId = "cranelift-bforest";
          }
          {
            name = "cranelift-codegen-shared";
            packageId = "cranelift-codegen-shared";
          }
          {
            name = "cranelift-entity";
            packageId = "cranelift-entity";
          }
          {
            name = "gimli";
            packageId = "gimli 0.25.0";
            optional = true;
            usesDefaultFeatures = false;
            features = [ "write" ];
          }
          {
            name = "log";
            packageId = "log 0.4.14";
            usesDefaultFeatures = false;
          }
          {
            name = "regalloc";
            packageId = "regalloc";
          }
          {
            name = "smallvec";
            packageId = "smallvec 1.8.0";
          }
          {
            name = "target-lexicon";
            packageId = "target-lexicon";
          }
        ];
        buildDependencies = [
          {
            name = "cranelift-codegen-meta";
            packageId = "cranelift-codegen-meta";
          }
        ];
        features = {
          "all-arch" = [ "x86" "arm64" "riscv" "s390x" ];
          "core" = [ "hashbrown" ];
          "default" = [ "std" "unwind" ];
          "enable-peepmatic" = [ "peepmatic-runtime" "peepmatic-traits" "serde" ];
          "enable-serde" = [ "serde" "regalloc/enable-serde" "cranelift-entity/enable-serde" "cranelift-codegen-shared/enable-serde" ];
          "rebuild-peephole-optimizers" = [ "peepmatic" "peepmatic-traits" "wast" ];
          "regalloc-snapshot" = [ "bincode" "regalloc/enable-serde" ];
          "souper-harvest" = [ "souper-ir" "souper-ir/stringify" ];
          "unwind" = [ "gimli" ];
        };
        resolvedDefaultFeatures = [ "arm64" "gimli" "std" "unwind" "x86" ];
      };
      "cranelift-codegen-meta" = rec {
        crateName = "cranelift-codegen-meta";
        version = "0.76.0";
        edition = "2018";
        sha256 = "0psm7iih6knh500m68qsbj4lv98n8rv176afppb2qkxbzhignvlp";
        authors = [
          "The Cranelift Project Developers"
        ];
        dependencies = [
          {
            name = "cranelift-codegen-shared";
            packageId = "cranelift-codegen-shared";
          }
          {
            name = "cranelift-entity";
            packageId = "cranelift-entity";
          }
        ];

      };
      "cranelift-codegen-shared" = rec {
        crateName = "cranelift-codegen-shared";
        version = "0.76.0";
        edition = "2018";
        sha256 = "1p255cmz93bdysw4f0jj5lbwidb5mr2mn69lwi94ckg0cvzbbawx";
        authors = [
          "The Cranelift Project Developers"
        ];
        features = {
          "enable-serde" = [ "serde" ];
        };
      };
      "cranelift-entity" = rec {
        crateName = "cranelift-entity";
        version = "0.76.0";
        edition = "2018";
        sha256 = "16a7979nnd07swbdvqv407r6dgw0xvxa9jpg174933jb9lz76a9k";
        authors = [
          "The Cranelift Project Developers"
        ];
        features = {
          "enable-serde" = [ "serde" ];
        };
      };
      "cranelift-frontend" = rec {
        crateName = "cranelift-frontend";
        version = "0.76.0";
        edition = "2018";
        sha256 = "08gr4srcr7rf9c82isb9in638yqph7aw6ds8z5rvflg6sg0gr6i7";
        authors = [
          "The Cranelift Project Developers"
        ];
        dependencies = [
          {
            name = "cranelift-codegen";
            packageId = "cranelift-codegen";
            usesDefaultFeatures = false;
          }
          {
            name = "log";
            packageId = "log 0.4.14";
            usesDefaultFeatures = false;
          }
          {
            name = "smallvec";
            packageId = "smallvec 1.8.0";
          }
          {
            name = "target-lexicon";
            packageId = "target-lexicon";
          }
        ];
        features = {
          "core" = [ "hashbrown" "cranelift-codegen/core" ];
          "default" = [ "std" ];
          "std" = [ "cranelift-codegen/std" ];
        };
        resolvedDefaultFeatures = [ "std" ];
      };
      "crc32fast" = rec {
        crateName = "crc32fast";
        version = "1.3.1";
        edition = "2015";
        sha256 = "1qv0krk4ggxzz68x199xm9wg3bw4dgiff8971dznz1r91qqrq852";
        authors = [
          "Sam Rijs <srijs@airpost.net>"
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        dependencies = [
          {
            name = "cfg-if";
            packageId = "cfg-if 1.0.0";
          }
        ];
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "crossbeam-channel 0.3.9" = rec {
        crateName = "crossbeam-channel";
        version = "0.3.9";
        edition = "2015";
        sha256 = "1ylyzb1m9qbvd1nd3vy38x9073wdmcy295ncjs7wf7ap476pzv68";
        authors = [
          "The Crossbeam Project Developers"
        ];
        dependencies = [
          {
            name = "crossbeam-utils";
            packageId = "crossbeam-utils 0.6.6";
          }
        ];

      };
      "crossbeam-channel 0.5.2" = rec {
        crateName = "crossbeam-channel";
        version = "0.5.2";
        edition = "2018";
        sha256 = "1yhbpb72mrhcywq2j8nscr48glr5w33f7rmcb8ph9vmi7yyahkp5";
        dependencies = [
          {
            name = "cfg-if";
            packageId = "cfg-if 1.0.0";
          }
          {
            name = "crossbeam-utils";
            packageId = "crossbeam-utils 0.8.6";
            optional = true;
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "default" = [ "std" ];
          "std" = [ "crossbeam-utils/std" ];
        };
        resolvedDefaultFeatures = [ "crossbeam-utils" "default" "std" ];
      };
      "crossbeam-deque" = rec {
        crateName = "crossbeam-deque";
        version = "0.8.1";
        edition = "2018";
        sha256 = "07nypn86id2lf912ahiww1jvqp0zbk2xa25ra7vzplph375c0mb4";
        authors = [
          "The Crossbeam Project Developers"
        ];
        dependencies = [
          {
            name = "cfg-if";
            packageId = "cfg-if 1.0.0";
          }
          {
            name = "crossbeam-epoch";
            packageId = "crossbeam-epoch";
            optional = true;
            usesDefaultFeatures = false;
          }
          {
            name = "crossbeam-utils";
            packageId = "crossbeam-utils 0.8.6";
            optional = true;
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "default" = [ "std" ];
          "std" = [ "crossbeam-epoch/std" "crossbeam-utils/std" ];
        };
        resolvedDefaultFeatures = [ "crossbeam-epoch" "crossbeam-utils" "default" "std" ];
      };
      "crossbeam-epoch" = rec {
        crateName = "crossbeam-epoch";
        version = "0.9.6";
        edition = "2018";
        sha256 = "0ql7gx9yfdyyzdvrf089fddkrq4wbfzw9wvd1dfsd2cvvxq2l94p";
        dependencies = [
          {
            name = "cfg-if";
            packageId = "cfg-if 1.0.0";
          }
          {
            name = "crossbeam-utils";
            packageId = "crossbeam-utils 0.8.6";
            usesDefaultFeatures = false;
          }
          {
            name = "lazy_static";
            packageId = "lazy_static 1.4.0";
            optional = true;
          }
          {
            name = "memoffset";
            packageId = "memoffset";
          }
          {
            name = "scopeguard";
            packageId = "scopeguard";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "default" = [ "std" ];
          "loom" = [ "loom-crate" "crossbeam-utils/loom" ];
          "nightly" = [ "crossbeam-utils/nightly" "const_fn" ];
          "std" = [ "alloc" "crossbeam-utils/std" "lazy_static" ];
        };
        resolvedDefaultFeatures = [ "alloc" "lazy_static" "std" ];
      };
      "crossbeam-utils 0.6.6" = rec {
        crateName = "crossbeam-utils";
        version = "0.6.6";
        edition = "2015";
        sha256 = "1rk0r9n04bmq4a3g2q5qhvvlmrmx780gc6h9lmc94mwndslkz5q4";
        authors = [
          "The Crossbeam Project Developers"
        ];
        dependencies = [
          {
            name = "cfg-if";
            packageId = "cfg-if 0.1.10";
          }
          {
            name = "lazy_static";
            packageId = "lazy_static 1.4.0";
            optional = true;
          }
        ];
        features = {
          "default" = [ "std" ];
          "std" = [ "lazy_static" ];
        };
        resolvedDefaultFeatures = [ "default" "lazy_static" "std" ];
      };
      "crossbeam-utils 0.7.2" = rec {
        crateName = "crossbeam-utils";
        version = "0.7.2";
        edition = "2015";
        sha256 = "1a31wbrda1320gj2a6az1lin2d34xfc3xf88da4c17qy5lxcgiy3";
        authors = [
          "The Crossbeam Project Developers"
        ];
        dependencies = [
          {
            name = "cfg-if";
            packageId = "cfg-if 0.1.10";
          }
          {
            name = "lazy_static";
            packageId = "lazy_static 1.4.0";
            optional = true;
          }
        ];
        buildDependencies = [
          {
            name = "autocfg";
            packageId = "autocfg 1.0.1";
          }
        ];
        features = {
          "default" = [ "std" ];
          "std" = [ "lazy_static" ];
        };
        resolvedDefaultFeatures = [ "default" "lazy_static" "std" ];
      };
      "crossbeam-utils 0.8.6" = rec {
        crateName = "crossbeam-utils";
        version = "0.8.6";
        edition = "2018";
        sha256 = "0841rd6wgj7nrrhwp7kyclh4x0k9q4zc7cfd9bk4gy9lvczf1jng";
        dependencies = [
          {
            name = "cfg-if";
            packageId = "cfg-if 1.0.0";
          }
          {
            name = "lazy_static";
            packageId = "lazy_static 1.4.0";
            optional = true;
          }
        ];
        features = {
          "default" = [ "std" ];
          "std" = [ "lazy_static" ];
        };
        resolvedDefaultFeatures = [ "default" "lazy_static" "std" ];
      };
      "crunchy" = rec {
        crateName = "crunchy";
        version = "0.2.2";
        edition = "2015";
        sha256 = "1dx9mypwd5mpfbbajm78xcrg5lirqk7934ik980mmaffg3hdm0bs";
        authors = [
          "Vurich <jackefransham@hotmail.co.uk>"
        ];
        features = {
          "default" = [ "limit_128" ];
        };
        resolvedDefaultFeatures = [ "default" "limit_128" "std" ];
      };
      "crypto-common" = rec {
        crateName = "crypto-common";
        version = "0.1.3";
        edition = "2018";
        sha256 = "1s1wpm88qlrp079mzh3dlxm9vbqs4ch016yp9pzhcdjygfi2r5ap";
        authors = [
          "RustCrypto Developers"
        ];
        dependencies = [
          {
            name = "generic-array";
            packageId = "generic-array 0.14.5";
            features = [ "more_lengths" ];
          }
          {
            name = "typenum";
            packageId = "typenum";
          }
        ];
        features = {
        };
        resolvedDefaultFeatures = [ "std" ];
      };
      "crypto-mac 0.7.0" = rec {
        crateName = "crypto-mac";
        version = "0.7.0";
        edition = "2015";
        sha256 = "1rbrq6qy9dl0pj4ym2zy33miaaa8vpzdss60p9bdb58xy46l0d24";
        authors = [
          "RustCrypto Developers"
        ];
        dependencies = [
          {
            name = "generic-array";
            packageId = "generic-array 0.12.4";
          }
          {
            name = "subtle";
            packageId = "subtle 1.0.0";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "dev" = [ "blobby" ];
        };
      };
      "crypto-mac 0.8.0" = rec {
        crateName = "crypto-mac";
        version = "0.8.0";
        edition = "2018";
        sha256 = "1axfs4zmy74rn9666p92j7nmcv11zdp2d51yrppc2dv26cqa715m";
        authors = [
          "RustCrypto Developers"
        ];
        dependencies = [
          {
            name = "generic-array";
            packageId = "generic-array 0.14.5";
          }
          {
            name = "subtle";
            packageId = "subtle 2.4.1";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "dev" = [ "blobby" ];
        };
        resolvedDefaultFeatures = [ "std" ];
      };
      "ct-codecs" = rec {
        crateName = "ct-codecs";
        version = "1.1.1";
        edition = "2018";
        sha256 = "1pvmrkk95jadmhhd5mn88mq2dfnq0yng8mk3pfd5l6dq0i2fpdzk";
        authors = [
          "Frank Denis <github@pureftpd.org>"
        ];
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "ct-logs" = rec {
        crateName = "ct-logs";
        version = "0.8.0";
        edition = "2018";
        sha256 = "1j5as2h789c2gazq3drl5i58xk8zzx6sxd1wdr19x3d6dwc1da61";
        authors = [
          "Joseph Birr-Pixton <jpixton@gmail.com>"
        ];
        dependencies = [
          {
            name = "sct";
            packageId = "sct";
          }
        ];

      };
      "ctor" = rec {
        crateName = "ctor";
        version = "0.1.21";
        edition = "2018";
        sha256 = "1am0a8m1gkaa0fii3w3s5wsymjljvg4sv5c50bscssl2kf5a9h6c";
        procMacro = true;
        authors = [
          "Matt Mastracci <matthew@mastracci.com>"
        ];
        dependencies = [
          {
            name = "quote";
            packageId = "quote";
          }
          {
            name = "syn";
            packageId = "syn";
            usesDefaultFeatures = false;
            features = [ "full" "parsing" "printing" "proc-macro" ];
          }
        ];

      };
      "ctr" = rec {
        crateName = "ctr";
        version = "0.8.0";
        edition = "2018";
        sha256 = "1sk1aykwhkny92cnvl6s75dx3fyvfzw5xkd6xz3y7w5anhgvk6q4";
        authors = [
          "RustCrypto Developers"
        ];
        dependencies = [
          {
            name = "cipher";
            packageId = "cipher";
          }
        ];
        devDependencies = [
          {
            name = "cipher";
            packageId = "cipher";
            features = [ "dev" ];
          }
        ];

      };
      "cty" = rec {
        crateName = "cty";
        version = "0.2.2";
        edition = "2015";
        sha256 = "0d8z0pbr87wgzqqb2jk5pvj0afzc6d3rb772ach6fijhg6yglrdk";
        authors = [
          "Jorge Aparicio <jorge@japaric.io>"
        ];

      };
      "cuckoofilter" = rec {
        crateName = "cuckoofilter";
        version = "0.5.0";
        edition = "2018";
        sha256 = "067fkr9dc118rqddr72xdldq05d31yyipvvyrmj9yrrik52ah45q";
        authors = [
          "Seif Lotfy <seif.lotfy@gmail.com>"
          "Seif Lotfy <seif@axiom.co>"
          "Florian Jacob <accounts+git@florianjacob.de>"
          "The cuckoofilter contributors"
        ];
        dependencies = [
          {
            name = "byteorder";
            packageId = "byteorder";
          }
          {
            name = "fnv";
            packageId = "fnv";
          }
          {
            name = "rand";
            packageId = "rand 0.7.3";
          }
        ];
        features = {
          "dev" = [ "clippy" ];
          "serde_support" = [ "serde" "serde_derive" "serde_bytes" ];
        };
        resolvedDefaultFeatures = [ "default" ];
      };
      "curve25519-dalek" = rec {
        crateName = "curve25519-dalek";
        version = "3.2.0";
        edition = "2015";
        sha256 = "0q8v97275cy6v4ly6y2qwv9a8phnpjg9sy8kv7r6mgdjfacxz7qb";
        authors = [
          "Isis Lovecruft <isis@patternsinthevoid.net>"
          "Henry de Valence <hdevalence@hdevalence.ca>"
        ];
        dependencies = [
          {
            name = "byteorder";
            packageId = "byteorder";
            usesDefaultFeatures = false;
            features = [ "i128" ];
          }
          {
            name = "digest";
            packageId = "digest 0.9.0";
            usesDefaultFeatures = false;
          }
          {
            name = "rand_core";
            packageId = "rand_core 0.5.1";
            usesDefaultFeatures = false;
          }
          {
            name = "subtle";
            packageId = "subtle 2.4.1";
            usesDefaultFeatures = false;
          }
          {
            name = "zeroize";
            packageId = "zeroize";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "alloc" = [ "zeroize/alloc" ];
          "avx2_backend" = [ "simd_backend" ];
          "default" = [ "std" "u64_backend" ];
          "fiat_u32_backend" = [ "fiat-crypto" ];
          "fiat_u64_backend" = [ "fiat-crypto" ];
          "nightly" = [ "subtle/nightly" ];
          "simd_backend" = [ "nightly" "u64_backend" "packed_simd" ];
          "std" = [ "alloc" "subtle/std" "rand_core/std" ];
        };
        resolvedDefaultFeatures = [ "alloc" "default" "std" "u64_backend" ];
      };
      "curve25519-dalek-ng" = rec {
        crateName = "curve25519-dalek-ng";
        version = "4.1.1";
        edition = "2015";
        sha256 = "1j6y6dsqdfp26ifyygibsrm1a8f9f7870i4053xlczil95r9nd8w";
        authors = [
          "Isis Lovecruft <isis@patternsinthevoid.net>"
          "Henry de Valence <hdevalence@hdevalence.ca>"
        ];
        dependencies = [
          {
            name = "byteorder";
            packageId = "byteorder";
            usesDefaultFeatures = false;
            features = [ "i128" ];
          }
          {
            name = "digest";
            packageId = "digest 0.9.0";
            usesDefaultFeatures = false;
          }
          {
            name = "rand_core";
            packageId = "rand_core 0.6.3";
            usesDefaultFeatures = false;
          }
          {
            name = "subtle-ng";
            packageId = "subtle-ng";
            rename = "subtle";
            usesDefaultFeatures = false;
          }
          {
            name = "zeroize";
            packageId = "zeroize";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "alloc" = [ "zeroize/alloc" ];
          "avx2_backend" = [ "simd_backend" ];
          "default" = [ "std" "u64_backend" ];
          "nightly" = [ "subtle/nightly" ];
          "simd_backend" = [ "nightly" "u64_backend" "packed_simd" ];
          "std" = [ "alloc" "subtle/std" "rand_core/std" ];
        };
        resolvedDefaultFeatures = [ "alloc" "u64_backend" ];
      };
      "darling 0.12.4" = rec {
        crateName = "darling";
        version = "0.12.4";
        edition = "2015";
        sha256 = "0g4bkxpwl6i5jav5qqzny39yd5a1fdlh5l0mj020njza6ksl6b2z";
        authors = [
          "Ted Driggs <ted.driggs@outlook.com>"
        ];
        dependencies = [
          {
            name = "darling_core";
            packageId = "darling_core 0.12.4";
          }
          {
            name = "darling_macro";
            packageId = "darling_macro 0.12.4";
          }
        ];
        features = {
          "default" = [ "suggestions" ];
          "diagnostics" = [ "darling_core/diagnostics" ];
          "suggestions" = [ "darling_core/suggestions" ];
        };
        resolvedDefaultFeatures = [ "default" "suggestions" ];
      };
      "darling 0.13.1" = rec {
        crateName = "darling";
        version = "0.13.1";
        edition = "2018";
        sha256 = "1x7pgzjswg28798zd5gk5g6nifhcaqq0apqmclydi39zd2w21myh";
        authors = [
          "Ted Driggs <ted.driggs@outlook.com>"
        ];
        dependencies = [
          {
            name = "darling_core";
            packageId = "darling_core 0.13.1";
          }
          {
            name = "darling_macro";
            packageId = "darling_macro 0.13.1";
          }
        ];
        features = {
          "default" = [ "suggestions" ];
          "diagnostics" = [ "darling_core/diagnostics" ];
          "suggestions" = [ "darling_core/suggestions" ];
        };
        resolvedDefaultFeatures = [ "default" "suggestions" ];
      };
      "darling_core 0.12.4" = rec {
        crateName = "darling_core";
        version = "0.12.4";
        edition = "2015";
        sha256 = "0dpscl87s75h6yhrmzdsapx86lc4y16m554xg4hiq2l3hrdlb4cf";
        authors = [
          "Ted Driggs <ted.driggs@outlook.com>"
        ];
        dependencies = [
          {
            name = "fnv";
            packageId = "fnv";
          }
          {
            name = "ident_case";
            packageId = "ident_case";
          }
          {
            name = "proc-macro2";
            packageId = "proc-macro2";
          }
          {
            name = "quote";
            packageId = "quote";
          }
          {
            name = "strsim";
            packageId = "strsim 0.10.0";
            optional = true;
          }
          {
            name = "syn";
            packageId = "syn";
            features = [ "full" "extra-traits" ];
          }
        ];
        features = {
          "suggestions" = [ "strsim" ];
        };
        resolvedDefaultFeatures = [ "strsim" "suggestions" ];
      };
      "darling_core 0.13.1" = rec {
        crateName = "darling_core";
        version = "0.13.1";
        edition = "2018";
        sha256 = "0933k2avb6xk9j4ryr0bvp3pww5j8i0nrqvsnkgd3vic3lj0yd3s";
        authors = [
          "Ted Driggs <ted.driggs@outlook.com>"
        ];
        dependencies = [
          {
            name = "fnv";
            packageId = "fnv";
          }
          {
            name = "ident_case";
            packageId = "ident_case";
          }
          {
            name = "proc-macro2";
            packageId = "proc-macro2";
          }
          {
            name = "quote";
            packageId = "quote";
          }
          {
            name = "strsim";
            packageId = "strsim 0.10.0";
            optional = true;
          }
          {
            name = "syn";
            packageId = "syn";
            features = [ "full" "extra-traits" ];
          }
        ];
        features = {
          "suggestions" = [ "strsim" ];
        };
        resolvedDefaultFeatures = [ "strsim" "suggestions" ];
      };
      "darling_macro 0.12.4" = rec {
        crateName = "darling_macro";
        version = "0.12.4";
        edition = "2015";
        sha256 = "0nn9mxl7gs827rx5s6lbjvvghipxjdg2qpdjyxk7yym3vvqard99";
        procMacro = true;
        authors = [
          "Ted Driggs <ted.driggs@outlook.com>"
        ];
        dependencies = [
          {
            name = "darling_core";
            packageId = "darling_core 0.12.4";
          }
          {
            name = "quote";
            packageId = "quote";
          }
          {
            name = "syn";
            packageId = "syn";
          }
        ];

      };
      "darling_macro 0.13.1" = rec {
        crateName = "darling_macro";
        version = "0.13.1";
        edition = "2018";
        sha256 = "0jzljnd0y7idi5lb7lhvymh3nkhaf32ksx0d38hv7zjjfcxipi3j";
        procMacro = true;
        authors = [
          "Ted Driggs <ted.driggs@outlook.com>"
        ];
        dependencies = [
          {
            name = "darling_core";
            packageId = "darling_core 0.13.1";
          }
          {
            name = "quote";
            packageId = "quote";
          }
          {
            name = "syn";
            packageId = "syn";
          }
        ];

      };
      "data-encoding" = rec {
        crateName = "data-encoding";
        version = "2.3.2";
        edition = "2018";
        sha256 = "0mvd8bjq5mq50fcf931cff57vwmbsvs1kpxynkzrshli98y3kqiy";
        authors = [
          "Julien Cretin <git@ia0.eu>"
        ];
        features = {
          "default" = [ "std" ];
          "std" = [ "alloc" ];
        };
        resolvedDefaultFeatures = [ "alloc" "default" "std" ];
      };
      "derivative" = rec {
        crateName = "derivative";
        version = "2.2.0";
        edition = "2015";
        sha256 = "02vpb81wisk2zh1d5f44szzxamzinqgq2k8ydrfjj2wwkrgdvhzw";
        procMacro = true;
        authors = [
          "mcarton <cartonmartin+git@gmail.com>"
        ];
        dependencies = [
          {
            name = "proc-macro2";
            packageId = "proc-macro2";
          }
          {
            name = "quote";
            packageId = "quote";
          }
          {
            name = "syn";
            packageId = "syn";
            features = [ "visit" "extra-traits" ];
          }
        ];
        features = {
        };
        resolvedDefaultFeatures = [ "use_core" ];
      };
      "derive_builder" = rec {
        crateName = "derive_builder";
        version = "0.10.2";
        edition = "2015";
        sha256 = "0c2v6vi0lih3fwwgwx92pspcmkrjz8wxfqwhmr01060ipvg04cni";
        authors = [
          "Colin Kiegel <kiegel@gmx.de>"
          "Pascal Hertleif <killercup@gmail.com>"
          "Jan-Erik Rediger <janerik@fnordig.de>"
          "Ted Driggs <ted.driggs@outlook.com>"
        ];
        dependencies = [
          {
            name = "derive_builder_macro";
            packageId = "derive_builder_macro";
          }
        ];
        features = {
          "clippy" = [ "derive_builder_macro/clippy" ];
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "derive_builder_core" = rec {
        crateName = "derive_builder_core";
        version = "0.10.2";
        edition = "2015";
        sha256 = "1r9ngcrfcvqv5l5p86bzg9v863bjf5nlmippin1fv1v1iy2idrk6";
        authors = [
          "Colin Kiegel <kiegel@gmx.de>"
          "Pascal Hertleif <killercup@gmail.com>"
          "Jan-Erik Rediger <janerik@fnordig.de>"
          "Ted Driggs <ted.driggs@outlook.com>"
        ];
        dependencies = [
          {
            name = "darling";
            packageId = "darling 0.12.4";
          }
          {
            name = "proc-macro2";
            packageId = "proc-macro2";
          }
          {
            name = "quote";
            packageId = "quote";
          }
          {
            name = "syn";
            packageId = "syn";
            features = [ "full" "extra-traits" ];
          }
        ];
        features = {
        };
      };
      "derive_builder_macro" = rec {
        crateName = "derive_builder_macro";
        version = "0.10.2";
        edition = "2015";
        sha256 = "0wwdm4cgd4vlvabj5xsjjr4vvkqhnd3fi9wp3v5mlb09jp74maaq";
        procMacro = true;
        authors = [
          "Colin Kiegel <kiegel@gmx.de>"
          "Pascal Hertleif <killercup@gmail.com>"
          "Jan-Erik Rediger <janerik@fnordig.de>"
          "Ted Driggs <ted.driggs@outlook.com>"
        ];
        dependencies = [
          {
            name = "derive_builder_core";
            packageId = "derive_builder_core";
          }
          {
            name = "syn";
            packageId = "syn";
            features = [ "full" "extra-traits" ];
          }
        ];
        features = {
          "clippy" = [ "derive_builder_core/clippy" ];
        };
      };
      "derive_more" = rec {
        crateName = "derive_more";
        version = "0.99.17";
        edition = "2018";
        sha256 = "0883jr0gdf9mi8rn7qbz1p0z7hqzfd275pil2gwm66bw1b9i1f2g";
        procMacro = true;
        authors = [
          "Jelte Fennema <github-tech@jeltef.nl>"
        ];
        dependencies = [
          {
            name = "proc-macro2";
            packageId = "proc-macro2";
          }
          {
            name = "quote";
            packageId = "quote";
          }
          {
            name = "syn";
            packageId = "syn";
          }
        ];
        features = {
          "default" = [ "add_assign" "add" "as_mut" "as_ref" "constructor" "deref" "deref_mut" "display" "error" "from" "from_str" "index" "index_mut" "into" "into_iterator" "iterator" "mul_assign" "mul" "not" "sum" "try_into" "is_variant" "unwrap" ];
          "display" = [ "syn/extra-traits" ];
          "error" = [ "syn/extra-traits" ];
          "from" = [ "syn/extra-traits" ];
          "generate-parsing-rs" = [ "peg" ];
          "into" = [ "syn/extra-traits" ];
          "is_variant" = [ "convert_case" ];
          "mul" = [ "syn/extra-traits" ];
          "mul_assign" = [ "syn/extra-traits" ];
          "not" = [ "syn/extra-traits" ];
          "testing-helpers" = [ "rustc_version" ];
          "try_into" = [ "syn/extra-traits" ];
          "unwrap" = [ "convert_case" "rustc_version" ];
        };
        resolvedDefaultFeatures = [ "display" "from" ];
      };
      "diff" = rec {
        crateName = "diff";
        version = "0.1.12";
        edition = "2015";
        sha256 = "16b40bhsa2qgvgvxs983l625pkxyp6m0mzmpwg2605cvj53yl98f";
        authors = [
          "Utkarsh Kukreti <utkarshkukreti@gmail.com>"
        ];

      };
      "difflib" = rec {
        crateName = "difflib";
        version = "0.4.0";
        edition = "2015";
        sha256 = "1s7byq4d7jgf2hcp2lcqxi2piqwl8xqlharfbi8kf90n8csy7131";
        authors = [
          "Dima Kudosh <dimakudosh@gmail.com>"
        ];

      };
      "digest 0.10.3" = rec {
        crateName = "digest";
        version = "0.10.3";
        edition = "2018";
        sha256 = "01nmj9cci5qdm4q4wlmz104rzr68d5m823kdzd95bypslq68dyzj";
        authors = [
          "RustCrypto Developers"
        ];
        dependencies = [
          {
            name = "block-buffer";
            packageId = "block-buffer 0.10.0";
            optional = true;
          }
          {
            name = "crypto-common";
            packageId = "crypto-common";
          }
          {
            name = "subtle";
            packageId = "subtle 2.4.1";
            optional = true;
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "core-api" = [ "block-buffer" ];
          "default" = [ "core-api" ];
          "dev" = [ "blobby" ];
          "mac" = [ "subtle" ];
          "rand_core" = [ "crypto-common/rand_core" ];
          "std" = [ "alloc" "crypto-common/std" ];
        };
        resolvedDefaultFeatures = [ "alloc" "block-buffer" "core-api" "default" "mac" "std" "subtle" ];
      };
      "digest 0.8.1" = rec {
        crateName = "digest";
        version = "0.8.1";
        edition = "2015";
        sha256 = "1madjl27f3kj5ql7kwgvb9c8b7yb7bv7yfgx7rqzj4i3fp4cil7k";
        authors = [
          "RustCrypto Developers"
        ];
        dependencies = [
          {
            name = "generic-array";
            packageId = "generic-array 0.12.4";
          }
        ];
        features = {
          "dev" = [ "blobby" ];
        };
        resolvedDefaultFeatures = [ "std" ];
      };
      "digest 0.9.0" = rec {
        crateName = "digest";
        version = "0.9.0";
        edition = "2018";
        sha256 = "0rmhvk33rgvd6ll71z8sng91a52rw14p0drjn1da0mqa138n1pfk";
        authors = [
          "RustCrypto Developers"
        ];
        dependencies = [
          {
            name = "generic-array";
            packageId = "generic-array 0.14.5";
          }
        ];
        features = {
          "dev" = [ "blobby" ];
          "std" = [ "alloc" ];
        };
        resolvedDefaultFeatures = [ "alloc" "std" ];
      };
      "directories" = rec {
        crateName = "directories";
        version = "4.0.1";
        edition = "2015";
        sha256 = "045jbj5y2f1fmjs9rfcw95y0vjydb2rqqhz1sdnqhdmxv96ms77m";
        authors = [
          "Simon Ochsenreither <simon@ochsenreither.de>"
        ];
        dependencies = [
          {
            name = "dirs-sys";
            packageId = "dirs-sys";
          }
        ];

      };
      "dirs-sys" = rec {
        crateName = "dirs-sys";
        version = "0.3.6";
        edition = "2015";
        sha256 = "102pbpcrfhvhfyfnyvmvvwpl6mfvynh170f6ima6fyinxls6bn03";
        authors = [
          "Simon Ochsenreither <simon@ochsenreither.de>"
        ];
        dependencies = [
          {
            name = "libc";
            packageId = "libc";
            target = { target, features }: (target."unix" or false);
          }
          {
            name = "redox_users";
            packageId = "redox_users";
            usesDefaultFeatures = false;
            target = { target, features }: (target."os" == "redox");
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.9";
            target = { target, features }: (target."windows" or false);
            features = [ "knownfolders" "objbase" "shlobj" "winbase" "winerror" ];
          }
        ];

      };
      "dns-parser" = rec {
        crateName = "dns-parser";
        version = "0.8.0";
        edition = "2015";
        sha256 = "1spv0psvxc31qg9xnqf0gmjclyiim7vp23r2b1gzf1ix8zlkply4";
        authors = [
          "Paul Colomiets <paul@colomiets.name>"
        ];
        dependencies = [
          {
            name = "byteorder";
            packageId = "byteorder";
          }
          {
            name = "quick-error";
            packageId = "quick-error 1.2.3";
          }
        ];
        features = {
          "with-serde" = [ "serde" "serde_derive" ];
        };
      };
      "doc-comment" = rec {
        crateName = "doc-comment";
        version = "0.3.3";
        edition = "2015";
        sha256 = "043sprsf3wl926zmck1bm7gw0jq50mb76lkpk49vasfr6ax1p97y";
        libName = "doc_comment";
        authors = [
          "Guillaume Gomez <guillaume1.gomez@gmail.com>"
        ];
        features = {
        };
      };
      "dtoa" = rec {
        crateName = "dtoa";
        version = "0.4.8";
        edition = "2015";
        sha256 = "1c5j0wz118dhrczx6spc5za7dnbfxablr4adyahg9aknrsc9i2an";
        authors = [
          "David Tolnay <dtolnay@gmail.com>"
        ];

      };
      "dynasm" = rec {
        crateName = "dynasm";
        version = "1.2.1";
        edition = "2018";
        sha256 = "0g68s1ax9pvabsckszhc82d9qx6cwr6q3gxxpg83dlqbccg81ca7";
        procMacro = true;
        authors = [
          "Alexander Stocko <as@coder.gg>"
          "CensoredUsername <cens.username@gmail.com>"
        ];
        dependencies = [
          {
            name = "bitflags";
            packageId = "bitflags";
          }
          {
            name = "byteorder";
            packageId = "byteorder";
          }
          {
            name = "lazy_static";
            packageId = "lazy_static 1.4.0";
          }
          {
            name = "proc-macro-error";
            packageId = "proc-macro-error";
          }
          {
            name = "proc-macro2";
            packageId = "proc-macro2";
          }
          {
            name = "quote";
            packageId = "quote";
          }
          {
            name = "syn";
            packageId = "syn";
            features = [ "full" "extra-traits" ];
          }
        ];
        features = {
        };
        resolvedDefaultFeatures = [ "default" ];
      };
      "dynasmrt" = rec {
        crateName = "dynasmrt";
        version = "1.2.1";
        edition = "2018";
        sha256 = "0qchn2g010f1a4p54niwqgpd46i0g155zyn1zxnqya5djgy8lhhx";
        authors = [
          "Alexander Stocko <as@coder.gg>"
          "CensoredUsername <cens.username@gmail.com>"
        ];
        dependencies = [
          {
            name = "byteorder";
            packageId = "byteorder";
          }
          {
            name = "dynasm";
            packageId = "dynasm";
          }
          {
            name = "memmap2";
            packageId = "memmap2";
          }
        ];

      };
      "ed25519" = rec {
        crateName = "ed25519";
        version = "1.3.0";
        edition = "2018";
        sha256 = "05l8say9mpch3nl7cjwkq8slrb1g0vnr7rrdxdkl6igi76g0dqbl";
        authors = [
          "RustCrypto Developers"
        ];
        dependencies = [
          {
            name = "serde";
            packageId = "serde 1.0.136";
            optional = true;
            usesDefaultFeatures = false;
          }
          {
            name = "signature";
            packageId = "signature";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "alloc" = [ "pkcs8/alloc" ];
          "default" = [ "std" ];
          "pem" = [ "pkcs8/pem" ];
          "serde_bytes" = [ "serde" "serde_bytes_crate" "std" ];
          "std" = [ "signature/std" ];
        };
        resolvedDefaultFeatures = [ "serde" "std" ];
      };
      "ed25519-consensus" = rec {
        crateName = "ed25519-consensus";
        version = "1.2.0";
        edition = "2018";
        sha256 = "0xbj1bbjp5f0wadlqf601k5ng9kh2xd1l9b26ds73m0i6jjif8jl";
        authors = [
          "Henry de Valence <hdevalence@hdevalence.ca>"
        ];
        dependencies = [
          {
            name = "curve25519-dalek-ng";
            packageId = "curve25519-dalek-ng";
            rename = "curve25519-dalek";
            usesDefaultFeatures = false;
            features = [ "u64_backend" "alloc" ];
          }
          {
            name = "hex";
            packageId = "hex";
            usesDefaultFeatures = false;
            features = [ "alloc" ];
          }
          {
            name = "rand_core";
            packageId = "rand_core 0.6.3";
            usesDefaultFeatures = false;
          }
          {
            name = "serde";
            packageId = "serde 1.0.136";
            optional = true;
            features = [ "derive" ];
          }
          {
            name = "sha2";
            packageId = "sha2 0.9.9";
            usesDefaultFeatures = false;
          }
          {
            name = "thiserror";
            packageId = "thiserror";
            optional = true;
          }
          {
            name = "zeroize";
            packageId = "zeroize";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "default" = [ "serde" "std" ];
          "std" = [ "thiserror" ];
        };
        resolvedDefaultFeatures = [ "default" "serde" "std" "thiserror" ];
      };
      "ed25519-dalek" = rec {
        crateName = "ed25519-dalek";
        version = "1.0.1";
        edition = "2018";
        sha256 = "17bsriciv93nkm39z22w7mr0h2a3hnbmgf378v4c895gvkkblqn7";
        authors = [
          "isis lovecruft <isis@patternsinthevoid.net>"
        ];
        dependencies = [
          {
            name = "curve25519-dalek";
            packageId = "curve25519-dalek";
            usesDefaultFeatures = false;
          }
          {
            name = "ed25519";
            packageId = "ed25519";
            usesDefaultFeatures = false;
          }
          {
            name = "merlin";
            packageId = "merlin";
            optional = true;
            usesDefaultFeatures = false;
          }
          {
            name = "rand";
            packageId = "rand 0.7.3";
            optional = true;
            usesDefaultFeatures = false;
          }
          {
            name = "serde";
            packageId = "serde 1.0.136";
            rename = "serde_crate";
            optional = true;
            usesDefaultFeatures = false;
          }
          {
            name = "serde_bytes";
            packageId = "serde_bytes";
            optional = true;
          }
          {
            name = "sha2";
            packageId = "sha2 0.9.9";
            usesDefaultFeatures = false;
          }
          {
            name = "zeroize";
            packageId = "zeroize";
            usesDefaultFeatures = false;
            features = [ "zeroize_derive" ];
          }
        ];
        devDependencies = [
          {
            name = "rand";
            packageId = "rand 0.7.3";
          }
          {
            name = "serde";
            packageId = "serde 1.0.136";
            features = [ "derive" ];
          }
        ];
        features = {
          "alloc" = [ "curve25519-dalek/alloc" "rand/alloc" "zeroize/alloc" ];
          "asm" = [ "sha2/asm" ];
          "batch" = [ "merlin" "rand" ];
          "batch_deterministic" = [ "merlin" "rand" "rand_core" ];
          "default" = [ "std" "rand" "u64_backend" ];
          "nightly" = [ "curve25519-dalek/nightly" ];
          "serde" = [ "serde_crate" "serde_bytes" "ed25519/serde" ];
          "simd_backend" = [ "curve25519-dalek/simd_backend" ];
          "std" = [ "curve25519-dalek/std" "ed25519/std" "serde_crate/std" "sha2/std" "rand/std" ];
          "u32_backend" = [ "curve25519-dalek/u32_backend" ];
          "u64_backend" = [ "curve25519-dalek/u64_backend" ];
        };
        resolvedDefaultFeatures = [ "batch" "default" "merlin" "rand" "serde" "serde_bytes" "serde_crate" "std" "u64_backend" ];
      };
      "either" = rec {
        crateName = "either";
        version = "1.6.1";
        edition = "2015";
        sha256 = "0mwl9vngqf5jvrhmhn9x60kr5hivxyjxbmby2pybncxfqhf4z3g7";
        authors = [
          "bluss"
        ];
        features = {
          "default" = [ "use_std" ];
        };
        resolvedDefaultFeatures = [ "default" "use_std" ];
      };
      "embed-resource" = rec {
        crateName = "embed-resource";
        version = "1.6.5";
        edition = "2015";
        crateBin = [];
        sha256 = "03bqikrzmn3q0ac8sxk66nl84h485mnmbw191wq2p5gw76r5wl45";
        authors = [
          "nabijaczleweli <nabijaczleweli@gmail.com>"
          "Cat Plus Plus <piotrlegnica@piotrl.pl>"
          "Liigo <liigo@qq.com>"
          "azyobuzin <azyobuzin@users.sourceforge.jp>"
          "Peter Atashian <retep998@gmail.com>"
          "pravic <ehysta@gmail.com>"
          "Gabriel Majeri <gabriel.majeri6@gmail.com>"
          "SonnyX"
          "Johan Andersson <repi@repi.se>"
          "Jordan Poles <jpdev.noreply@gmail.com>"
          "MSxDOS <melcodos@gmail.com>"
          "Jim McGrath <jimmc2@gmail.com>"
          "roblabla <unfiltered@roblab.la>"
          "Jasper Bekkers <jasper@traverseresearch.nl>"
          "Richard Markiewicz <rmarkiewicz@devolutions.net>"
        ];
        dependencies = [
          {
            name = "cc";
            packageId = "cc";
            target = { target, features }: ((target."os" == "windows") && (target."env" == "msvc"));
          }
          {
            name = "cc";
            packageId = "cc";
            target = { target, features }: (!(target."os" == "windows"));
          }
          {
            name = "vswhom";
            packageId = "vswhom";
            target = { target, features }: ((target."os" == "windows") && (target."env" == "msvc"));
          }
          {
            name = "winreg";
            packageId = "winreg 0.10.1";
            usesDefaultFeatures = false;
            target = { target, features }: ((target."os" == "windows") && (target."env" == "msvc"));
          }
        ];

      };
      "encoding_rs" = rec {
        crateName = "encoding_rs";
        version = "0.8.30";
        edition = "2018";
        sha256 = "1pqirqhlj8mbaln0pv4dk65yr22clpx509ci6gdgs3r5pf5dr5kq";
        authors = [
          "Henri Sivonen <hsivonen@hsivonen.fi>"
        ];
        dependencies = [
          {
            name = "cfg-if";
            packageId = "cfg-if 1.0.0";
          }
        ];
        features = {
          "default" = [ "alloc" ];
          "fast-legacy-encode" = [ "fast-hangul-encode" "fast-hanja-encode" "fast-kanji-encode" "fast-gb-hanzi-encode" "fast-big5-hanzi-encode" ];
          "simd-accel" = [ "packed_simd" "packed_simd/into_bits" ];
        };
        resolvedDefaultFeatures = [ "alloc" "default" ];
      };
      "enum-as-inner" = rec {
        crateName = "enum-as-inner";
        version = "0.3.3";
        edition = "2018";
        sha256 = "15gmpgywijda93lkq7hf2y53h66sqkhzabzbxich288xm6b00pvw";
        procMacro = true;
        authors = [
          "Benjamin Fry <benjaminfry@me.com>"
        ];
        dependencies = [
          {
            name = "heck";
            packageId = "heck";
          }
          {
            name = "proc-macro2";
            packageId = "proc-macro2";
          }
          {
            name = "quote";
            packageId = "quote";
          }
          {
            name = "syn";
            packageId = "syn";
          }
        ];

      };
      "enum-iterator" = rec {
        crateName = "enum-iterator";
        version = "0.7.0";
        edition = "2018";
        sha256 = "1rldnx6avpz39i1bwb65d4gs303p40syyfc4zqwlx7mpxp2wbsjf";
        authors = [
          "Stephane Raux <stephaneyfx@gmail.com>"
        ];
        dependencies = [
          {
            name = "enum-iterator-derive";
            packageId = "enum-iterator-derive";
          }
        ];

      };
      "enum-iterator-derive" = rec {
        crateName = "enum-iterator-derive";
        version = "0.7.0";
        edition = "2018";
        sha256 = "0ndihb41kmi6pxc2bs097abxliw2pgnnw412lhdqfymjc1vw6d61";
        procMacro = true;
        authors = [
          "Stephane Raux <stephaneyfx@gmail.com>"
        ];
        dependencies = [
          {
            name = "proc-macro2";
            packageId = "proc-macro2";
          }
          {
            name = "quote";
            packageId = "quote";
          }
          {
            name = "syn";
            packageId = "syn";
          }
        ];

      };
      "enumset" = rec {
        crateName = "enumset";
        version = "1.0.8";
        edition = "2018";
        sha256 = "0b2vdggbsnvvw09czxaazbqcpa378fycf7fs3afz5dbgkb0x45k2";
        authors = [
          "Alissa Rao <lymia@lymiahugs.com>"
        ];
        dependencies = [
          {
            name = "enumset_derive";
            packageId = "enumset_derive";
          }
        ];
        features = {
          "serde" = [ "serde2" "enumset_derive/serde" ];
        };
      };
      "enumset_derive" = rec {
        crateName = "enumset_derive";
        version = "0.5.5";
        edition = "2018";
        sha256 = "1m7ccz9fcxsx3s1drj77psk62xfgjia0hp9lal3qhpb5ls514lb4";
        procMacro = true;
        authors = [
          "Alissa Rao <lymia@lymiahugs.com>"
        ];
        dependencies = [
          {
            name = "darling";
            packageId = "darling 0.13.1";
          }
          {
            name = "proc-macro2";
            packageId = "proc-macro2";
          }
          {
            name = "quote";
            packageId = "quote";
          }
          {
            name = "syn";
            packageId = "syn";
          }
        ];
        features = {
        };
      };
      "env_logger" = rec {
        crateName = "env_logger";
        version = "0.8.4";
        edition = "2018";
        sha256 = "1qzw8g11dbdfi7ixm44ldykwcqsxqkh8vx5cgpd88zmclgz8g4d1";
        authors = [
          "The Rust Project Developers"
        ];
        dependencies = [
          {
            name = "log";
            packageId = "log 0.4.14";
            features = [ "std" ];
          }
        ];
        features = {
          "default" = [ "termcolor" "atty" "humantime" "regex" ];
        };
      };
      "error-chain" = rec {
        crateName = "error-chain";
        version = "0.12.4";
        edition = "2015";
        sha256 = "1z6y5isg0il93jp287sv7pn10i4wrkik2cpyk376wl61rawhcbrd";
        authors = [
          "Brian Anderson <banderson@mozilla.com>"
          "Paul Colomiets <paul@colomiets.name>"
          "Colin Kiegel <kiegel@gmx.de>"
          "Yamakaky <yamakaky@yamaworld.fr>"
          "Andrew Gauger <andygauge@gmail.com>"
        ];
        dependencies = [
          {
            name = "backtrace";
            packageId = "backtrace";
            optional = true;
          }
        ];
        buildDependencies = [
          {
            name = "version_check";
            packageId = "version_check 0.9.4";
          }
        ];
        features = {
          "default" = [ "backtrace" "example_generated" ];
        };
        resolvedDefaultFeatures = [ "backtrace" "default" "example_generated" ];
      };
      "escargot" = rec {
        crateName = "escargot";
        version = "0.5.7";
        edition = "2018";
        crateBin = [];
        sha256 = "19h1yvg9x7lvyb7p75ypyb94sacns5dkxwc4fa56mcksgnhlnn7m";
        authors = [
          "Ed Page <eopage@gmail.com>"
        ];
        dependencies = [
          {
            name = "log";
            packageId = "log 0.4.14";
          }
          {
            name = "once_cell";
            packageId = "once_cell";
          }
          {
            name = "serde";
            packageId = "serde 1.0.136";
            features = [ "derive" ];
          }
          {
            name = "serde_json";
            packageId = "serde_json";
          }
        ];
        features = {
        };
      };
      "event-listener" = rec {
        crateName = "event-listener";
        version = "2.5.2";
        edition = "2018";
        sha256 = "0wgbyhw4piqrrln6s61y3sc06wd3liwzzz18hazji3wk2ya31wvp";
        authors = [
          "Stjepan Glavina <stjepang@gmail.com>"
        ];

      };
      "eyre" = rec {
        crateName = "eyre";
        version = "0.6.6";
        edition = "2018";
        sha256 = "1f0fbmrcykp84av1yb1d4cqj28jwf0zg1z49a1cgw8vrcf7ms8mw";
        authors = [
          "David Tolnay <dtolnay@gmail.com>"
          "Jane Lusby <jlusby42@gmail.com>"
        ];
        dependencies = [
          {
            name = "indenter";
            packageId = "indenter";
          }
          {
            name = "once_cell";
            packageId = "once_cell";
          }
        ];
        features = {
          "default" = [ "track-caller" ];
        };
        resolvedDefaultFeatures = [ "default" "track-caller" ];
      };
      "fake-simd" = rec {
        crateName = "fake-simd";
        version = "0.1.2";
        edition = "2015";
        sha256 = "1vfylvk4va2ivqx85603lyqqp0zk52cgbs4n5nfbbbqx577qm2p8";
        authors = [
          "The Rust-Crypto Project Developers"
        ];

      };
      "fallible-iterator" = rec {
        crateName = "fallible-iterator";
        version = "0.2.0";
        edition = "2018";
        sha256 = "1xq759lsr8gqss7hva42azn3whgrbrs2sd9xpn92c5ickxm1fhs4";
        authors = [
          "Steven Fackler <sfackler@gmail.com>"
        ];
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "std" ];
      };
      "fastrand" = rec {
        crateName = "fastrand";
        version = "1.7.0";
        edition = "2018";
        sha256 = "1pvci54f2cm69ybc308z213xdybgqpvf2pcvq1kch69mwp7g1z63";
        authors = [
          "Stjepan Glavina <stjepang@gmail.com>"
        ];
        dependencies = [
          {
            name = "instant";
            packageId = "instant";
            target = { target, features }: (target."arch" == "wasm32");
          }
        ];
        devDependencies = [
          {
            name = "instant";
            packageId = "instant";
            target = {target, features}: (target."arch" == "wasm32");
            features = [ "wasm-bindgen" ];
          }
        ];

      };
      "ferveo" = rec {
        crateName = "ferveo";
        version = "0.1.1";
        edition = "2018";
        crateBin = [];
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/anoma/ferveo";
          rev = "8363c33d1cf79f93ce9fa89d4b5fe998a5a78c26";
          sha256 = "1b9594l8iiryjharsd8nl189qr3xajy4r5n0nwkmrsdg87sxhq9q";
        };
        authors = [
          "Heliax AG <hello@heliax.dev>"
        ];
        dependencies = [
          {
            name = "anyhow";
            packageId = "anyhow";
          }
          {
            name = "ark-bls12-381";
            packageId = "ark-bls12-381";
          }
          {
            name = "ark-ec";
            packageId = "ark-ec";
          }
          {
            name = "ark-ed-on-bls12-381";
            packageId = "ark-ed-on-bls12-381";
          }
          {
            name = "ark-ff";
            packageId = "ark-ff";
          }
          {
            name = "ark-poly";
            packageId = "ark-poly";
          }
          {
            name = "ark-serialize";
            packageId = "ark-serialize";
          }
          {
            name = "ark-std";
            packageId = "ark-std";
          }
          {
            name = "bincode";
            packageId = "bincode";
          }
          {
            name = "blake2";
            packageId = "blake2 0.10.4";
          }
          {
            name = "blake2b_simd";
            packageId = "blake2b_simd";
          }
          {
            name = "borsh";
            packageId = "borsh";
          }
          {
            name = "digest";
            packageId = "digest 0.10.3";
            features = [ "alloc" ];
          }
          {
            name = "ed25519-dalek";
            packageId = "ed25519-dalek";
            features = [ "serde" "batch" ];
          }
          {
            name = "either";
            packageId = "either";
          }
          {
            name = "ferveo-common";
            packageId = "ferveo-common";
          }
          {
            name = "group-threshold-cryptography";
            packageId = "group-threshold-cryptography";
          }
          {
            name = "hex";
            packageId = "hex";
          }
          {
            name = "itertools";
            packageId = "itertools 0.10.3";
          }
          {
            name = "measure_time";
            packageId = "measure_time";
          }
          {
            name = "miracl_core";
            packageId = "miracl_core";
          }
          {
            name = "num";
            packageId = "num";
          }
          {
            name = "rand";
            packageId = "rand 0.7.3";
            rename = "rand_old";
          }
          {
            name = "rand";
            packageId = "rand 0.8.4";
          }
          {
            name = "serde";
            packageId = "serde 1.0.136";
            features = [ "derive" ];
          }
          {
            name = "serde_bytes";
            packageId = "serde_bytes";
          }
          {
            name = "serde_json";
            packageId = "serde_json";
          }
          {
            name = "subproductdomain";
            packageId = "subproductdomain";
          }
          {
            name = "subtle";
            packageId = "subtle 2.4.1";
          }
          {
            name = "zeroize";
            packageId = "zeroize";
            usesDefaultFeatures = false;
            features = [ "zeroize_derive" ];
          }
        ];

      };
      "ferveo-common" = rec {
        crateName = "ferveo-common";
        version = "0.1.0";
        edition = "2018";
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/anoma/ferveo";
          rev = "8363c33d1cf79f93ce9fa89d4b5fe998a5a78c26";
          sha256 = "1b9594l8iiryjharsd8nl189qr3xajy4r5n0nwkmrsdg87sxhq9q";
        };
        authors = [
          "Heliax AG <hello@heliax.dev>"
        ];
        dependencies = [
          {
            name = "anyhow";
            packageId = "anyhow";
          }
          {
            name = "ark-ec";
            packageId = "ark-ec";
          }
          {
            name = "ark-serialize";
            packageId = "ark-serialize";
            features = [ "derive" ];
          }
          {
            name = "ark-std";
            packageId = "ark-std";
          }
          {
            name = "serde";
            packageId = "serde 1.0.136";
            features = [ "derive" ];
          }
          {
            name = "serde_bytes";
            packageId = "serde_bytes";
          }
        ];

      };
      "file-lock" = rec {
        crateName = "file-lock";
        version = "2.0.2";
        edition = "2015";
        sha256 = "1yi43lsqdgglmplzkpzhpjbi4h6bpca8fx0lqk73r6nldyg6m9nd";
        authors = [
          "Alfie John <alfie@alfie.wtf>"
          "Sebastian Thiel <byronimo@gmail.com>"
          "Jacob Turner <jacob.turner870@gmail.com>"
        ];
        dependencies = [
          {
            name = "libc";
            packageId = "libc";
          }
          {
            name = "mktemp";
            packageId = "mktemp";
          }
          {
            name = "nix";
            packageId = "nix 0.23.1";
          }
        ];
        buildDependencies = [
          {
            name = "cc";
            packageId = "cc";
          }
        ];

      };
      "filetime" = rec {
        crateName = "filetime";
        version = "0.2.15";
        edition = "2018";
        sha256 = "165w8nrc4f7jqhf9f1c86s1vw9wh2v43h2l5h93dil6rv21wyp4p";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        dependencies = [
          {
            name = "cfg-if";
            packageId = "cfg-if 1.0.0";
          }
          {
            name = "libc";
            packageId = "libc";
            target = { target, features }: (target."unix" or false);
          }
          {
            name = "redox_syscall";
            packageId = "redox_syscall 0.2.10";
            target = { target, features }: (target."os" == "redox");
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.9";
            target = { target, features }: (target."windows" or false);
            features = [ "fileapi" "minwindef" "winbase" ];
          }
        ];

      };
      "fixedbitset 0.2.0" = rec {
        crateName = "fixedbitset";
        version = "0.2.0";
        edition = "2015";
        sha256 = "0kg03p777wc0dajd9pvlcnsyrwa8dhqwf0sd9r4dw0p82rs39arp";
        authors = [
          "bluss"
        ];
        features = {
          "default" = [ "std" ];
        };
      };
      "fixedbitset 0.4.1" = rec {
        crateName = "fixedbitset";
        version = "0.4.1";
        edition = "2015";
        sha256 = "0gh5qp6h5ivgbn80klx10lgp1jg0qmvmp58p0cr4qg0bw8lb17r7";
        authors = [
          "bluss"
        ];
        features = {
          "default" = [ "std" ];
        };
      };
      "flate2" = rec {
        crateName = "flate2";
        version = "1.0.22";
        edition = "2018";
        sha256 = "0gy5iwfqylb2f0dd9n7r8w2xwbzlrqlsairvyj2w9jf1jzl8hs8y";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
          "Josh Triplett <josh@joshtriplett.org>"
        ];
        dependencies = [
          {
            name = "cfg-if";
            packageId = "cfg-if 1.0.0";
          }
          {
            name = "crc32fast";
            packageId = "crc32fast";
          }
          {
            name = "libc";
            packageId = "libc";
          }
          {
            name = "libz-sys";
            packageId = "libz-sys";
            optional = true;
            usesDefaultFeatures = false;
          }
          {
            name = "miniz_oxide";
            packageId = "miniz_oxide";
            optional = true;
            usesDefaultFeatures = false;
          }
          {
            name = "miniz_oxide";
            packageId = "miniz_oxide";
            usesDefaultFeatures = false;
            target = { target, features }: ((target."arch" == "wasm32") && (!(target."os" == "emscripten")));
          }
        ];
        features = {
          "cloudflare_zlib" = [ "any_zlib" "cloudflare-zlib-sys" ];
          "default" = [ "rust_backend" ];
          "rust_backend" = [ "miniz_oxide" ];
          "tokio" = [ "tokio-io" "futures" ];
          "zlib" = [ "any_zlib" "libz-sys" ];
          "zlib-ng-compat" = [ "zlib" "libz-sys/zlib-ng" ];
        };
        resolvedDefaultFeatures = [ "any_zlib" "default" "libz-sys" "miniz_oxide" "rust_backend" "zlib" ];
      };
      "flex-error" = rec {
        crateName = "flex-error";
        version = "0.4.4";
        edition = "2018";
        sha256 = "0ywxqij98lb1bd04xp5vs02y352g8cbc3zywl1zm04fyr69dh1n6";
        authors = [
          "Informal Systems <hello@informal.systems>"
        ];
        dependencies = [
          {
            name = "eyre";
            packageId = "eyre";
            optional = true;
          }
          {
            name = "paste";
            packageId = "paste";
          }
        ];
        features = {
          "anyhow_tracer" = [ "anyhow" "std" ];
          "default" = [ "full" ];
          "eyre_tracer" = [ "eyre" "std" ];
          "full" = [ "std" "eyre_tracer" "anyhow_tracer" ];
        };
        resolvedDefaultFeatures = [ "eyre" "eyre_tracer" "std" ];
      };
      "fnv" = rec {
        crateName = "fnv";
        version = "1.0.7";
        edition = "2015";
        sha256 = "1hc2mcqha06aibcaza94vbi81j6pr9a1bbxrxjfhc91zin8yr7iz";
        libPath = "lib.rs";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "foreign-types" = rec {
        crateName = "foreign-types";
        version = "0.3.2";
        edition = "2015";
        sha256 = "1cgk0vyd7r45cj769jym4a6s7vwshvd0z4bqrb92q1fwibmkkwzn";
        authors = [
          "Steven Fackler <sfackler@gmail.com>"
        ];
        dependencies = [
          {
            name = "foreign-types-shared";
            packageId = "foreign-types-shared";
          }
        ];

      };
      "foreign-types-shared" = rec {
        crateName = "foreign-types-shared";
        version = "0.1.1";
        edition = "2015";
        sha256 = "0jxgzd04ra4imjv8jgkmdq59kj8fsz6w4zxsbmlai34h26225c00";
        authors = [
          "Steven Fackler <sfackler@gmail.com>"
        ];

      };
      "form_urlencoded" = rec {
        crateName = "form_urlencoded";
        version = "1.0.1";
        edition = "2018";
        sha256 = "1491fmakavcmsjbm3q6iy0bhmn9l422jasdhzx5hkljgza3mmhjz";
        authors = [
          "The rust-url developers"
        ];
        dependencies = [
          {
            name = "matches";
            packageId = "matches";
          }
          {
            name = "percent-encoding";
            packageId = "percent-encoding 2.1.0";
          }
        ];

      };
      "fs_extra" = rec {
        crateName = "fs_extra";
        version = "1.2.0";
        edition = "2015";
        sha256 = "151k6dr35mhq5d8pc8krhw55ajhkyiv0pm14s7zzlc5bc9fp28i0";
        authors = [
          "Denis Kurilenko <webdesus@gmail.com>"
        ];

      };
      "fsevent" = rec {
        crateName = "fsevent";
        version = "0.4.0";
        edition = "2015";
        sha256 = "1djxnc2fmv265xqf1iyfz56smh13v9r1p0w9125wjg6k3fyx3dss";
        authors = [
          "Pierre Baillet <pierre@baillet.name>"
        ];
        dependencies = [
          {
            name = "bitflags";
            packageId = "bitflags";
          }
          {
            name = "fsevent-sys";
            packageId = "fsevent-sys";
          }
        ];

      };
      "fsevent-sys" = rec {
        crateName = "fsevent-sys";
        version = "2.0.1";
        edition = "2015";
        sha256 = "18246vxk7rqn52m0sfrhivxq802i34p2wqqx5zsa0pamjj5086zl";
        authors = [
          "Pierre Baillet <pierre@baillet.name>"
        ];
        dependencies = [
          {
            name = "libc";
            packageId = "libc";
          }
        ];

      };
      "fuchsia-cprng" = rec {
        crateName = "fuchsia-cprng";
        version = "0.1.1";
        edition = "2018";
        sha256 = "1fnkqrbz7ixxzsb04bsz9p0zzazanma8znfdqjvh39n14vapfvx0";
        authors = [
          "Erick Tryzelaar <etryzelaar@google.com>"
        ];

      };
      "fuchsia-zircon" = rec {
        crateName = "fuchsia-zircon";
        version = "0.3.3";
        edition = "2015";
        sha256 = "10jxc5ks1x06gpd0xg51kcjrxr35nj6qhx2zlc5n7bmskv3675rf";
        authors = [
          "Raph Levien <raph@google.com>"
        ];
        dependencies = [
          {
            name = "bitflags";
            packageId = "bitflags";
          }
          {
            name = "fuchsia-zircon-sys";
            packageId = "fuchsia-zircon-sys";
          }
        ];

      };
      "fuchsia-zircon-sys" = rec {
        crateName = "fuchsia-zircon-sys";
        version = "0.3.3";
        edition = "2015";
        sha256 = "19zp2085qsyq2bh1gvcxq1lb8w6v6jj9kbdkhpdjrl95fypakjix";
        authors = [
          "Raph Levien <raph@google.com>"
        ];

      };
      "futures 0.1.31" = rec {
        crateName = "futures";
        version = "0.1.31";
        edition = "2015";
        sha256 = "0y46qbmhi37dqkch8dlfq5aninqpzqgrr98awkb3rn4fxww1lirs";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        features = {
          "default" = [ "use_std" "with-deprecated" ];
        };
        resolvedDefaultFeatures = [ "default" "use_std" "with-deprecated" ];
      };
      "futures 0.3.19" = rec {
        crateName = "futures";
        version = "0.3.19";
        edition = "2018";
        sha256 = "1d1mj2qr499g2fhkidk9qvjv1s1anav4ny87z5wlxcrbzrbhfmi8";
        dependencies = [
          {
            name = "futures-channel";
            packageId = "futures-channel";
            usesDefaultFeatures = false;
            features = [ "sink" ];
          }
          {
            name = "futures-core";
            packageId = "futures-core";
            usesDefaultFeatures = false;
          }
          {
            name = "futures-executor";
            packageId = "futures-executor";
            optional = true;
            usesDefaultFeatures = false;
          }
          {
            name = "futures-io";
            packageId = "futures-io";
            usesDefaultFeatures = false;
          }
          {
            name = "futures-sink";
            packageId = "futures-sink";
            usesDefaultFeatures = false;
          }
          {
            name = "futures-task";
            packageId = "futures-task";
            usesDefaultFeatures = false;
          }
          {
            name = "futures-util";
            packageId = "futures-util";
            usesDefaultFeatures = false;
            features = [ "sink" ];
          }
        ];
        features = {
          "alloc" = [ "futures-core/alloc" "futures-task/alloc" "futures-sink/alloc" "futures-channel/alloc" "futures-util/alloc" ];
          "async-await" = [ "futures-util/async-await" "futures-util/async-await-macro" ];
          "bilock" = [ "futures-util/bilock" ];
          "compat" = [ "std" "futures-util/compat" ];
          "default" = [ "std" "async-await" "executor" ];
          "executor" = [ "std" "futures-executor/std" ];
          "io-compat" = [ "compat" "futures-util/io-compat" ];
          "std" = [ "alloc" "futures-core/std" "futures-task/std" "futures-io/std" "futures-sink/std" "futures-util/std" "futures-util/io" "futures-util/channel" ];
          "thread-pool" = [ "executor" "futures-executor/thread-pool" ];
          "unstable" = [ "futures-core/unstable" "futures-task/unstable" "futures-channel/unstable" "futures-io/unstable" "futures-util/unstable" ];
          "write-all-vectored" = [ "futures-util/write-all-vectored" ];
        };
        resolvedDefaultFeatures = [ "alloc" "async-await" "bilock" "default" "executor" "futures-executor" "std" "thread-pool" "unstable" ];
      };
      "futures-channel" = rec {
        crateName = "futures-channel";
        version = "0.3.19";
        edition = "2018";
        sha256 = "02vzdkc1n25nliwa2758pni7fyn1ch2msrzw18v5ycw8cl5xlgds";
        dependencies = [
          {
            name = "futures-core";
            packageId = "futures-core";
            usesDefaultFeatures = false;
          }
          {
            name = "futures-sink";
            packageId = "futures-sink";
            optional = true;
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "alloc" = [ "futures-core/alloc" ];
          "default" = [ "std" ];
          "sink" = [ "futures-sink" ];
          "std" = [ "alloc" "futures-core/std" ];
        };
        resolvedDefaultFeatures = [ "alloc" "default" "futures-sink" "sink" "std" "unstable" ];
      };
      "futures-core" = rec {
        crateName = "futures-core";
        version = "0.3.19";
        edition = "2018";
        sha256 = "1mw34nxzggvr2jvk4ljygy077wy32lrdxkyw1j0mj9dqc42gzj6h";
        features = {
          "default" = [ "std" ];
          "std" = [ "alloc" ];
        };
        resolvedDefaultFeatures = [ "alloc" "default" "std" "unstable" ];
      };
      "futures-executor" = rec {
        crateName = "futures-executor";
        version = "0.3.19";
        edition = "2018";
        sha256 = "0alxxnjbi6jjsjkj6mkmvizmwprfi99ldkmqhmfbj3xibgzx5mi9";
        dependencies = [
          {
            name = "futures-core";
            packageId = "futures-core";
            usesDefaultFeatures = false;
          }
          {
            name = "futures-task";
            packageId = "futures-task";
            usesDefaultFeatures = false;
          }
          {
            name = "futures-util";
            packageId = "futures-util";
            usesDefaultFeatures = false;
          }
          {
            name = "num_cpus";
            packageId = "num_cpus";
            optional = true;
          }
        ];
        features = {
          "default" = [ "std" ];
          "std" = [ "futures-core/std" "futures-task/std" "futures-util/std" ];
          "thread-pool" = [ "std" "num_cpus" ];
        };
        resolvedDefaultFeatures = [ "num_cpus" "std" "thread-pool" ];
      };
      "futures-io" = rec {
        crateName = "futures-io";
        version = "0.3.19";
        edition = "2018";
        sha256 = "1ckir41haa2hs9znrwavgh33hv3l23jmywqg73xwdam1ym5d7ydi";
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" "unstable" ];
      };
      "futures-lite" = rec {
        crateName = "futures-lite";
        version = "1.12.0";
        edition = "2018";
        sha256 = "0j5zzjcq1ib2kf1mm3apqf9g2ly1jjw1d1d4v9vjqi9rrnd4i53n";
        authors = [
          "Stjepan Glavina <stjepang@gmail.com>"
          "Contributors to futures-rs"
        ];
        dependencies = [
          {
            name = "fastrand";
            packageId = "fastrand";
            optional = true;
          }
          {
            name = "futures-core";
            packageId = "futures-core";
            usesDefaultFeatures = false;
          }
          {
            name = "futures-io";
            packageId = "futures-io";
            optional = true;
          }
          {
            name = "memchr";
            packageId = "memchr";
            optional = true;
          }
          {
            name = "parking";
            packageId = "parking";
            optional = true;
          }
          {
            name = "pin-project-lite";
            packageId = "pin-project-lite 0.2.8";
          }
          {
            name = "waker-fn";
            packageId = "waker-fn";
            optional = true;
          }
        ];
        features = {
          "default" = [ "std" ];
          "std" = [ "alloc" "fastrand" "futures-io" "parking" "memchr" "waker-fn" ];
        };
        resolvedDefaultFeatures = [ "alloc" "default" "fastrand" "futures-io" "memchr" "parking" "std" "waker-fn" ];
      };
      "futures-macro" = rec {
        crateName = "futures-macro";
        version = "0.3.19";
        edition = "2018";
        sha256 = "0g5xp1xmyfibyscynig2m5gvp5smgg7xvcwr0p3yzc7zvxx99gbd";
        procMacro = true;
        dependencies = [
          {
            name = "proc-macro2";
            packageId = "proc-macro2";
          }
          {
            name = "quote";
            packageId = "quote";
          }
          {
            name = "syn";
            packageId = "syn";
            features = [ "full" ];
          }
        ];

      };
      "futures-rustls" = rec {
        crateName = "futures-rustls";
        version = "0.21.1";
        edition = "2018";
        sha256 = "12vsjg1fvq9syidzhgp576bkqjmhmnh8xx749vxi3iqpg7h8f4rs";
        authors = [
          "quininer kel <quininer@live.com>"
        ];
        dependencies = [
          {
            name = "futures-io";
            packageId = "futures-io";
          }
          {
            name = "rustls";
            packageId = "rustls";
          }
          {
            name = "webpki";
            packageId = "webpki";
          }
        ];
        features = {
          "dangerous_configuration" = [ "rustls/dangerous_configuration" ];
        };
      };
      "futures-sink" = rec {
        crateName = "futures-sink";
        version = "0.3.19";
        edition = "2018";
        sha256 = "026m2x353l7x7apa3hdx26ma7kwgxgbghl0393v4zmv8rfn5n1g3";
        features = {
          "default" = [ "std" ];
          "std" = [ "alloc" ];
        };
        resolvedDefaultFeatures = [ "alloc" "default" "std" ];
      };
      "futures-task" = rec {
        crateName = "futures-task";
        version = "0.3.19";
        edition = "2018";
        sha256 = "0wmd3b70sgp1dr3q24439hkm7zj9m1lcafmqvzj7q5ihbi4cdrvf";
        features = {
          "default" = [ "std" ];
          "std" = [ "alloc" ];
        };
        resolvedDefaultFeatures = [ "alloc" "std" "unstable" ];
      };
      "futures-timer" = rec {
        crateName = "futures-timer";
        version = "3.0.2";
        edition = "2018";
        sha256 = "0b5v7lk9838ix6jdcrainsyrh7xrf24pwm61dp13907qkn806jz6";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        features = {
          "wasm-bindgen" = [ "gloo-timers" "send_wrapper" ];
        };
      };
      "futures-util" = rec {
        crateName = "futures-util";
        version = "0.3.19";
        edition = "2018";
        sha256 = "0r3i29hhfhv69qjdxh3j4ffxji4hl0yc1gmim1viy9vsni0czdfr";
        dependencies = [
          {
            name = "futures-channel";
            packageId = "futures-channel";
            optional = true;
            usesDefaultFeatures = false;
            features = [ "std" ];
          }
          {
            name = "futures-core";
            packageId = "futures-core";
            usesDefaultFeatures = false;
          }
          {
            name = "futures-io";
            packageId = "futures-io";
            optional = true;
            usesDefaultFeatures = false;
            features = [ "std" ];
          }
          {
            name = "futures-macro";
            packageId = "futures-macro";
            optional = true;
            usesDefaultFeatures = false;
          }
          {
            name = "futures-sink";
            packageId = "futures-sink";
            optional = true;
            usesDefaultFeatures = false;
          }
          {
            name = "futures-task";
            packageId = "futures-task";
            usesDefaultFeatures = false;
          }
          {
            name = "memchr";
            packageId = "memchr";
            optional = true;
          }
          {
            name = "pin-project-lite";
            packageId = "pin-project-lite 0.2.8";
          }
          {
            name = "pin-utils";
            packageId = "pin-utils";
          }
          {
            name = "slab";
            packageId = "slab";
            optional = true;
          }
        ];
        features = {
          "alloc" = [ "futures-core/alloc" "futures-task/alloc" ];
          "async-await-macro" = [ "async-await" "futures-macro" ];
          "channel" = [ "std" "futures-channel" ];
          "compat" = [ "std" "futures_01" ];
          "default" = [ "std" "async-await" "async-await-macro" ];
          "io" = [ "std" "futures-io" "memchr" ];
          "io-compat" = [ "io" "compat" "tokio-io" ];
          "sink" = [ "futures-sink" ];
          "std" = [ "alloc" "futures-core/std" "futures-task/std" "slab" ];
          "unstable" = [ "futures-core/unstable" "futures-task/unstable" ];
          "write-all-vectored" = [ "io" ];
        };
        resolvedDefaultFeatures = [ "alloc" "async-await" "async-await-macro" "bilock" "channel" "default" "futures-channel" "futures-io" "futures-macro" "futures-sink" "io" "memchr" "sink" "slab" "std" "unstable" ];
      };
      "generic-array 0.12.4" = rec {
        crateName = "generic-array";
        version = "0.12.4";
        edition = "2015";
        sha256 = "1gfpay78vijl9vrwl1k9v7fbvbhkhcmnrk4kfg9l6x24y4s9zpzz";
        libName = "generic_array";
        authors = [
          "Bartłomiej Kamiński <fizyk20@gmail.com>"
          "Aaron Trent <novacrazy@gmail.com>"
        ];
        dependencies = [
          {
            name = "typenum";
            packageId = "typenum";
          }
        ];

      };
      "generic-array 0.14.5" = rec {
        crateName = "generic-array";
        version = "0.14.5";
        edition = "2015";
        sha256 = "00qqhls43bzvyb7s26iw6knvsz3mckbxl3rhaahvypzhqwzd6j7x";
        libName = "generic_array";
        authors = [
          "Bartłomiej Kamiński <fizyk20@gmail.com>"
          "Aaron Trent <novacrazy@gmail.com>"
        ];
        dependencies = [
          {
            name = "typenum";
            packageId = "typenum";
          }
        ];
        buildDependencies = [
          {
            name = "version_check";
            packageId = "version_check 0.9.4";
          }
        ];
        features = {
        };
        resolvedDefaultFeatures = [ "more_lengths" ];
      };
      "getrandom 0.1.16" = rec {
        crateName = "getrandom";
        version = "0.1.16";
        edition = "2018";
        sha256 = "1kjzmz60qx9mn615ks1akjbf36n3lkv27zfwbcam0fzmj56wphwg";
        authors = [
          "The Rand Project Developers"
        ];
        dependencies = [
          {
            name = "cfg-if";
            packageId = "cfg-if 1.0.0";
          }
          {
            name = "libc";
            packageId = "libc";
            usesDefaultFeatures = false;
            target = { target, features }: (target."unix" or false);
          }
          {
            name = "wasi";
            packageId = "wasi 0.9.0+wasi-snapshot-preview1";
            target = { target, features }: (target."os" == "wasi");
          }
        ];
        features = {
          "rustc-dep-of-std" = [ "compiler_builtins" "core" ];
          "test-in-browser" = [ "wasm-bindgen" ];
          "wasm-bindgen" = [ "bindgen" "js-sys" ];
        };
        resolvedDefaultFeatures = [ "std" ];
      };
      "getrandom 0.2.4" = rec {
        crateName = "getrandom";
        version = "0.2.4";
        edition = "2018";
        sha256 = "0k0bdr1dyf4n9fvnkx4fmwxhv4hgnyf55gj86v4m69fln743g3a1";
        authors = [
          "The Rand Project Developers"
        ];
        dependencies = [
          {
            name = "cfg-if";
            packageId = "cfg-if 1.0.0";
          }
          {
            name = "js-sys";
            packageId = "js-sys";
            optional = true;
            target = { target, features }: ((target."arch" == "wasm32") && (target."os" == "unknown"));
          }
          {
            name = "libc";
            packageId = "libc";
            usesDefaultFeatures = false;
            target = { target, features }: (target."unix" or false);
          }
          {
            name = "wasi";
            packageId = "wasi 0.10.0+wasi-snapshot-preview1";
            target = { target, features }: (target."os" == "wasi");
          }
          {
            name = "wasm-bindgen";
            packageId = "wasm-bindgen";
            optional = true;
            usesDefaultFeatures = false;
            target = { target, features }: ((target."arch" == "wasm32") && (target."os" == "unknown"));
          }
        ];
        features = {
          "js" = [ "wasm-bindgen" "js-sys" ];
          "rustc-dep-of-std" = [ "compiler_builtins" "core" "libc/rustc-dep-of-std" "wasi/rustc-dep-of-std" ];
        };
        resolvedDefaultFeatures = [ "js" "js-sys" "std" "wasm-bindgen" ];
      };
      "ghash" = rec {
        crateName = "ghash";
        version = "0.4.4";
        edition = "2018";
        sha256 = "169wvrc2k9lw776x3pmqp76kc0w5717wz01bfg9rz0ypaqbcr0qm";
        authors = [
          "RustCrypto Developers"
        ];
        dependencies = [
          {
            name = "opaque-debug";
            packageId = "opaque-debug 0.3.0";
          }
          {
            name = "polyval";
            packageId = "polyval";
          }
        ];
        features = {
          "armv8" = [ "polyval/armv8" ];
          "force-soft" = [ "polyval/force-soft" ];
          "std" = [ "polyval/std" ];
        };
      };
      "gimli 0.25.0" = rec {
        crateName = "gimli";
        version = "0.25.0";
        edition = "2018";
        sha256 = "1rwgmjp94ivk872xd2s9lfb7wpz6rj1s9bzqnhnkn6l4jw21x87h";
        dependencies = [
          {
            name = "fallible-iterator";
            packageId = "fallible-iterator";
            optional = true;
            usesDefaultFeatures = false;
          }
          {
            name = "indexmap";
            packageId = "indexmap";
            optional = true;
          }
          {
            name = "stable_deref_trait";
            packageId = "stable_deref_trait";
            optional = true;
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "default" = [ "read" "write" "std" "fallible-iterator" "endian-reader" ];
          "endian-reader" = [ "stable_deref_trait" ];
          "rustc-dep-of-std" = [ "core" "alloc" "compiler_builtins" ];
          "std" = [ "fallible-iterator/std" "stable_deref_trait/std" ];
          "write" = [ "indexmap" ];
        };
        resolvedDefaultFeatures = [ "default" "endian-reader" "fallible-iterator" "indexmap" "read" "stable_deref_trait" "std" "write" ];
      };
      "gimli 0.26.1" = rec {
        crateName = "gimli";
        version = "0.26.1";
        edition = "2018";
        sha256 = "1m0vi36ypv4gx9gzcw6y456yqnlypizhwlcqrmg6vkwd0lnkgk3q";
        features = {
          "default" = [ "read" "write" "std" "fallible-iterator" "endian-reader" ];
          "endian-reader" = [ "read" "stable_deref_trait" ];
          "read" = [ "read-core" ];
          "rustc-dep-of-std" = [ "core" "alloc" "compiler_builtins" ];
          "std" = [ "fallible-iterator/std" "stable_deref_trait/std" ];
          "write" = [ "indexmap" ];
        };
        resolvedDefaultFeatures = [ "read" "read-core" ];
      };
      "git2" = rec {
        crateName = "git2";
        version = "0.13.25";
        edition = "2018";
        sha256 = "1mppxyjzi69m879mwpin4d9jljanwaijlx3f5w3fdh143g62k4pj";
        authors = [
          "Josh Triplett <josh@joshtriplett.org>"
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        dependencies = [
          {
            name = "bitflags";
            packageId = "bitflags";
          }
          {
            name = "libc";
            packageId = "libc";
          }
          {
            name = "libgit2-sys";
            packageId = "libgit2-sys";
          }
          {
            name = "log";
            packageId = "log 0.4.14";
          }
          {
            name = "openssl-probe";
            packageId = "openssl-probe";
            optional = true;
            target = { target, features }: ((target."unix" or false) && (!(target."os" == "macos")));
          }
          {
            name = "openssl-sys";
            packageId = "openssl-sys";
            optional = true;
            target = { target, features }: ((target."unix" or false) && (!(target."os" == "macos")));
          }
          {
            name = "url";
            packageId = "url 2.2.2";
          }
        ];
        features = {
          "default" = [ "ssh" "https" "ssh_key_from_memory" ];
          "https" = [ "libgit2-sys/https" "openssl-sys" "openssl-probe" ];
          "ssh" = [ "libgit2-sys/ssh" ];
          "ssh_key_from_memory" = [ "libgit2-sys/ssh_key_from_memory" ];
          "vendored-libgit2" = [ "libgit2-sys/vendored" ];
          "vendored-openssl" = [ "openssl-sys/vendored" "libgit2-sys/vendored-openssl" ];
          "zlib-ng-compat" = [ "libgit2-sys/zlib-ng-compat" ];
        };
        resolvedDefaultFeatures = [ "default" "https" "openssl-probe" "openssl-sys" "ssh" "ssh_key_from_memory" ];
      };
      "glob" = rec {
        crateName = "glob";
        version = "0.3.0";
        edition = "2015";
        sha256 = "0x25wfr7vg3mzxc9x05dcphvd3nwlcmbnxrvwcvrrdwplcrrk4cv";
        authors = [
          "The Rust Project Developers"
        ];

      };
      "globset" = rec {
        crateName = "globset";
        version = "0.4.8";
        edition = "2018";
        sha256 = "1gdzphnjjc0wdaawsq3n1nnypv9ja4prhca2n66hcahay2gksihh";
        authors = [
          "Andrew Gallant <jamslam@gmail.com>"
        ];
        dependencies = [
          {
            name = "aho-corasick";
            packageId = "aho-corasick";
          }
          {
            name = "bstr";
            packageId = "bstr";
            usesDefaultFeatures = false;
            features = [ "std" ];
          }
          {
            name = "fnv";
            packageId = "fnv";
          }
          {
            name = "log";
            packageId = "log 0.4.14";
          }
          {
            name = "regex";
            packageId = "regex";
            usesDefaultFeatures = false;
            features = [ "perf" "std" ];
          }
        ];
        features = {
          "serde1" = [ "serde" ];
        };
      };
      "gloo-timers" = rec {
        crateName = "gloo-timers";
        version = "0.2.3";
        edition = "2018";
        sha256 = "03jr3zk0dazyyi1djkswn1gim5kx1chv2kv23l7p3zjwx7saf4jd";
        authors = [
          "Rust and WebAssembly Working Group"
        ];
        dependencies = [
          {
            name = "futures-channel";
            packageId = "futures-channel";
            optional = true;
          }
          {
            name = "futures-core";
            packageId = "futures-core";
            optional = true;
          }
          {
            name = "js-sys";
            packageId = "js-sys";
          }
          {
            name = "wasm-bindgen";
            packageId = "wasm-bindgen";
          }
        ];
        features = {
          "futures" = [ "futures-core" "futures-channel" ];
        };
        resolvedDefaultFeatures = [ "default" "futures" "futures-channel" "futures-core" ];
      };
      "good_lp" = rec {
        crateName = "good_lp";
        version = "1.3.1";
        edition = "2018";
        sha256 = "0657b714l50x0g3yya3wh5wd836cwclpar6qc9w7lpmciz5z9r66";
        authors = [
          "Ophir LOJKINE <contact@ophir.dev>"
        ];
        dependencies = [
          {
            name = "fnv";
            packageId = "fnv";
          }
          {
            name = "minilp";
            packageId = "minilp";
            optional = true;
          }
        ];
        features = {
          "default" = [ "coin_cbc" ];
        };
        resolvedDefaultFeatures = [ "minilp" ];
      };
      "group-threshold-cryptography" = rec {
        crateName = "group-threshold-cryptography";
        version = "0.1.0";
        edition = "2018";
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/anoma/ferveo";
          rev = "8363c33d1cf79f93ce9fa89d4b5fe998a5a78c26";
          sha256 = "1b9594l8iiryjharsd8nl189qr3xajy4r5n0nwkmrsdg87sxhq9q";
        };
        authors = [
          "Heliax AG <hello@heliax.dev>"
        ];
        dependencies = [
          {
            name = "anyhow";
            packageId = "anyhow";
          }
          {
            name = "ark-bls12-381";
            packageId = "ark-bls12-381";
          }
          {
            name = "ark-ec";
            packageId = "ark-ec";
          }
          {
            name = "ark-ff";
            packageId = "ark-ff";
          }
          {
            name = "ark-poly";
            packageId = "ark-poly";
          }
          {
            name = "ark-serialize";
            packageId = "ark-serialize";
          }
          {
            name = "ark-std";
            packageId = "ark-std";
          }
          {
            name = "blake2b_simd";
            packageId = "blake2b_simd";
          }
          {
            name = "chacha20";
            packageId = "chacha20 0.8.1";
          }
          {
            name = "hex";
            packageId = "hex";
          }
          {
            name = "itertools";
            packageId = "itertools 0.10.3";
          }
          {
            name = "miracl_core";
            packageId = "miracl_core";
          }
          {
            name = "rand";
            packageId = "rand 0.8.4";
          }
          {
            name = "rand_core";
            packageId = "rand_core 0.6.3";
          }
          {
            name = "rayon";
            packageId = "rayon";
          }
          {
            name = "subproductdomain";
            packageId = "subproductdomain";
          }
          {
            name = "thiserror";
            packageId = "thiserror";
          }
        ];

      };
      "gumdrop" = rec {
        crateName = "gumdrop";
        version = "0.8.0";
        edition = "2018";
        sha256 = "02waas37nr8y669lnm1ifp6bkx79v3bd0bd4s9qcyy04aifiyms6";
        authors = [
          "Murarth <murarth@gmail.com>"
        ];
        dependencies = [
          {
            name = "gumdrop_derive";
            packageId = "gumdrop_derive";
          }
        ];
        features = {
          "default_expr" = [ "gumdrop_derive/default_expr" ];
        };
      };
      "gumdrop_derive" = rec {
        crateName = "gumdrop_derive";
        version = "0.8.0";
        edition = "2018";
        sha256 = "01cdc7w5wf1g9i04ykcssczjmmnl6jky47a648sp710df5yg0pli";
        procMacro = true;
        authors = [
          "Murarth <murarth@gmail.com>"
        ];
        dependencies = [
          {
            name = "proc-macro2";
            packageId = "proc-macro2";
          }
          {
            name = "quote";
            packageId = "quote";
          }
          {
            name = "syn";
            packageId = "syn";
          }
        ];
        features = {
          "default_expr" = [ "syn/full" ];
        };
        resolvedDefaultFeatures = [ "default" ];
      };
      "h2" = rec {
        crateName = "h2";
        version = "0.3.11";
        edition = "2018";
        sha256 = "13pzhasjizgv0v21yvrx3majd4xpipc1z1vyvwvbmcn7vlbzgwfr";
        authors = [
          "Carl Lerche <me@carllerche.com>"
          "Sean McArthur <sean@seanmonstar.com>"
        ];
        dependencies = [
          {
            name = "bytes";
            packageId = "bytes 1.1.0";
          }
          {
            name = "fnv";
            packageId = "fnv";
          }
          {
            name = "futures-core";
            packageId = "futures-core";
            usesDefaultFeatures = false;
          }
          {
            name = "futures-sink";
            packageId = "futures-sink";
            usesDefaultFeatures = false;
          }
          {
            name = "futures-util";
            packageId = "futures-util";
            usesDefaultFeatures = false;
          }
          {
            name = "http";
            packageId = "http";
          }
          {
            name = "indexmap";
            packageId = "indexmap";
            features = [ "std" ];
          }
          {
            name = "slab";
            packageId = "slab";
          }
          {
            name = "tokio";
            packageId = "tokio";
            features = [ "io-util" ];
          }
          {
            name = "tokio-util";
            packageId = "tokio-util";
            features = [ "codec" ];
          }
          {
            name = "tracing";
            packageId = "tracing 0.1.31";
            usesDefaultFeatures = false;
            features = [ "std" ];
          }
        ];
        devDependencies = [
          {
            name = "tokio";
            packageId = "tokio";
            features = [ "rt-multi-thread" "macros" "sync" "net" ];
          }
        ];
        features = {
        };
      };
      "hashbrown" = rec {
        crateName = "hashbrown";
        version = "0.11.2";
        edition = "2018";
        sha256 = "0vkjsf5nzs7qcia5ya79j9sq2p1caz4crrncr1675wwyj3ag0pmb";
        authors = [
          "Amanieu d'Antras <amanieu@gmail.com>"
        ];
        dependencies = [
          {
            name = "ahash";
            packageId = "ahash";
            optional = true;
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "ahash-compile-time-rng" = [ "ahash/compile-time-rng" ];
          "default" = [ "ahash" "inline-more" ];
          "rustc-dep-of-std" = [ "nightly" "core" "compiler_builtins" "alloc" "rustc-internal-api" ];
        };
        resolvedDefaultFeatures = [ "ahash" "default" "inline-more" "raw" ];
      };
      "hdrhistogram" = rec {
        crateName = "hdrhistogram";
        version = "6.3.4";
        edition = "2018";
        sha256 = "17dqk0rp8kimcd8wr542i8cny91fkclw7a2xzszar95wrpmk3lq8";
        authors = [
          "Jon Gjengset <jon@thesquareplanet.com>"
          "Marshall Pierce <marshall@mpierce.org>"
        ];
        dependencies = [
          {
            name = "base64";
            packageId = "base64 0.10.1";
            optional = true;
          }
          {
            name = "byteorder";
            packageId = "byteorder";
          }
          {
            name = "crossbeam-channel";
            packageId = "crossbeam-channel 0.3.9";
            optional = true;
          }
          {
            name = "flate2";
            packageId = "flate2";
            optional = true;
          }
          {
            name = "nom";
            packageId = "nom 4.2.3";
            optional = true;
          }
          {
            name = "num-traits";
            packageId = "num-traits 0.2.14";
          }
        ];
        features = {
          "default" = [ "serialization" "sync" ];
          "serialization" = [ "flate2" "nom" "base64" ];
          "sync" = [ "crossbeam-channel" ];
        };
        resolvedDefaultFeatures = [ "base64" "crossbeam-channel" "default" "flate2" "nom" "serialization" "sync" ];
      };
      "headers" = rec {
        crateName = "headers";
        version = "0.3.6";
        edition = "2015";
        sha256 = "12fbx4xzb3b410ganx1dinh43k1mwlrvc1dxbxps2z508xs68k68";
        authors = [
          "Sean McArthur <sean@seanmonstar.com>"
        ];
        dependencies = [
          {
            name = "base64";
            packageId = "base64 0.13.0";
          }
          {
            name = "bitflags";
            packageId = "bitflags";
          }
          {
            name = "bytes";
            packageId = "bytes 1.1.0";
          }
          {
            name = "headers-core";
            packageId = "headers-core";
          }
          {
            name = "http";
            packageId = "http";
          }
          {
            name = "httpdate";
            packageId = "httpdate";
          }
          {
            name = "mime";
            packageId = "mime 0.3.16";
          }
          {
            name = "sha-1";
            packageId = "sha-1 0.9.8";
          }
        ];
        features = {
        };
      };
      "headers-core" = rec {
        crateName = "headers-core";
        version = "0.2.0";
        edition = "2015";
        sha256 = "0ab469xfpd411mc3dhmjhmzrhqikzyj8a17jn5bkj9zfpy0n9xp7";
        authors = [
          "Sean McArthur <sean@seanmonstar.com>"
        ];
        dependencies = [
          {
            name = "http";
            packageId = "http";
          }
        ];

      };
      "heck" = rec {
        crateName = "heck";
        version = "0.3.3";
        edition = "2018";
        sha256 = "0b0kkr790p66lvzn9nsmfjvydrbmh9z5gb664jchwgw64vxiwqkd";
        authors = [
          "Without Boats <woboats@gmail.com>"
        ];
        dependencies = [
          {
            name = "unicode-segmentation";
            packageId = "unicode-segmentation";
          }
        ];

      };
      "hermit-abi" = rec {
        crateName = "hermit-abi";
        version = "0.1.19";
        edition = "2018";
        sha256 = "0cxcm8093nf5fyn114w8vxbrbcyvv91d4015rdnlgfll7cs6gd32";
        authors = [
          "Stefan Lankes"
        ];
        dependencies = [
          {
            name = "libc";
            packageId = "libc";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "rustc-dep-of-std" = [ "core" "compiler_builtins/rustc-dep-of-std" "libc/rustc-dep-of-std" ];
        };
        resolvedDefaultFeatures = [ "default" ];
      };
      "hex" = rec {
        crateName = "hex";
        version = "0.4.3";
        edition = "2018";
        sha256 = "0w1a4davm1lgzpamwnba907aysmlrnygbqmfis2mqjx5m552a93z";
        authors = [
          "KokaKiwi <kokakiwi@kokakiwi.net>"
        ];
        features = {
          "default" = [ "std" ];
          "std" = [ "alloc" ];
        };
        resolvedDefaultFeatures = [ "alloc" "default" "std" ];
      };
      "hex_fmt" = rec {
        crateName = "hex_fmt";
        version = "0.3.0";
        edition = "2018";
        sha256 = "0vrkzxd1wb4piij68fhmhycj01ky6nsn73piy37dk97h7xwn0zxh";
        authors = [
          "Andreas Fackler <AndreasFackler@gmx.de>"
        ];

      };
      "hmac" = rec {
        crateName = "hmac";
        version = "0.7.1";
        edition = "2015";
        sha256 = "15cnwpssp2n1kdm9x7abir67f2hp3q6rdfj1mcck3hm4rmj5xjsx";
        authors = [
          "RustCrypto Developers"
        ];
        dependencies = [
          {
            name = "crypto-mac";
            packageId = "crypto-mac 0.7.0";
          }
          {
            name = "digest";
            packageId = "digest 0.8.1";
          }
        ];
        devDependencies = [
          {
            name = "crypto-mac";
            packageId = "crypto-mac 0.7.0";
            features = [ "dev" ];
          }
        ];

      };
      "hmac-drbg" = rec {
        crateName = "hmac-drbg";
        version = "0.2.0";
        edition = "2018";
        sha256 = "0yqskpca1jmxsfzl9xc0wylkxdhk0i9xv35lh5jhzwck2i2p1rf6";
        authors = [
          "Wei Tang <hi@that.world>"
        ];
        dependencies = [
          {
            name = "digest";
            packageId = "digest 0.8.1";
          }
          {
            name = "generic-array";
            packageId = "generic-array 0.12.4";
          }
          {
            name = "hmac";
            packageId = "hmac";
          }
        ];

      };
      "hostname" = rec {
        crateName = "hostname";
        version = "0.3.1";
        edition = "2015";
        sha256 = "0rz8yf70cvzl3nry71m4bz9w6x4j9kdz3qng6pnwhk2h20z1qwrw";
        authors = [
          "fengcen <fengcen.love@gmail.com>"
          "svartalf <self@svartalf.info>"
        ];
        dependencies = [
          {
            name = "libc";
            packageId = "libc";
            target = { target, features }: ((target."unix" or false) || (target."os" == "redox"));
          }
          {
            name = "match_cfg";
            packageId = "match_cfg";
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.9";
            target = { target, features }: (target."os" == "windows");
            features = [ "sysinfoapi" ];
          }
        ];
        features = {
        };
        resolvedDefaultFeatures = [ "default" ];
      };
      "http" = rec {
        crateName = "http";
        version = "0.2.6";
        edition = "2018";
        sha256 = "00zxqk6m9qksxmlajmhnhgryw6xmqn9riimwx87nz1l4cmscdx1i";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
          "Carl Lerche <me@carllerche.com>"
          "Sean McArthur <sean@seanmonstar.com>"
        ];
        dependencies = [
          {
            name = "bytes";
            packageId = "bytes 1.1.0";
          }
          {
            name = "fnv";
            packageId = "fnv";
          }
          {
            name = "itoa";
            packageId = "itoa 1.0.1";
          }
        ];

      };
      "http-body" = rec {
        crateName = "http-body";
        version = "0.4.4";
        edition = "2018";
        sha256 = "1imjszmk34603m7chfnhd3rq263bxbdlaxhlbzd06wv7354zix0z";
        authors = [
          "Carl Lerche <me@carllerche.com>"
          "Lucio Franco <luciofranco14@gmail.com>"
          "Sean McArthur <sean@seanmonstar.com>"
        ];
        dependencies = [
          {
            name = "bytes";
            packageId = "bytes 1.1.0";
          }
          {
            name = "http";
            packageId = "http";
          }
          {
            name = "pin-project-lite";
            packageId = "pin-project-lite 0.2.8";
          }
        ];

      };
      "httparse" = rec {
        crateName = "httparse";
        version = "1.5.1";
        edition = "2015";
        sha256 = "00smbrgb9vyzbbj3j5d66iarjl5x2wpfwkmhcy5nizylw7dlzndc";
        authors = [
          "Sean McArthur <sean@seanmonstar.com>"
        ];
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "httpdate" = rec {
        crateName = "httpdate";
        version = "1.0.2";
        edition = "2018";
        sha256 = "08bln7b1ibdw26gl8h4dr6rlybvlkyhlha309xbh9ghxh9nf78f4";
        authors = [
          "Pyfisch <pyfisch@posteo.org>"
        ];

      };
      "hyper 0.10.16" = rec {
        crateName = "hyper";
        version = "0.10.16";
        edition = "2015";
        sha256 = "0wwjh9p3mzvg3fss2lqz5r7ddcgl1fh9w6my2j69d6k0lbcm41ha";
        authors = [
          "Sean McArthur <sean.monstar@gmail.com>"
          "Jonathan Reem <jonathan.reem@gmail.com>"
        ];
        dependencies = [
          {
            name = "base64";
            packageId = "base64 0.9.3";
          }
          {
            name = "httparse";
            packageId = "httparse";
          }
          {
            name = "language-tags";
            packageId = "language-tags";
          }
          {
            name = "log";
            packageId = "log 0.3.9";
          }
          {
            name = "mime";
            packageId = "mime 0.2.6";
          }
          {
            name = "num_cpus";
            packageId = "num_cpus";
          }
          {
            name = "time";
            packageId = "time 0.1.44";
          }
          {
            name = "traitobject";
            packageId = "traitobject";
          }
          {
            name = "typeable";
            packageId = "typeable";
          }
          {
            name = "unicase";
            packageId = "unicase";
          }
          {
            name = "url";
            packageId = "url 1.7.2";
          }
        ];
        features = {
        };
      };
      "hyper 0.14.16" = rec {
        crateName = "hyper";
        version = "0.14.16";
        edition = "2018";
        sha256 = "0mbghfyp4ghhcllmf3kfx9098rgg6168w155jc1jz2n9pmi3xv5p";type = [ "lib" "staticlib" "cdylib" ];
        authors = [
          "Sean McArthur <sean@seanmonstar.com>"
        ];
        dependencies = [
          {
            name = "bytes";
            packageId = "bytes 1.1.0";
          }
          {
            name = "futures-channel";
            packageId = "futures-channel";
          }
          {
            name = "futures-core";
            packageId = "futures-core";
            usesDefaultFeatures = false;
          }
          {
            name = "futures-util";
            packageId = "futures-util";
            usesDefaultFeatures = false;
          }
          {
            name = "h2";
            packageId = "h2";
            optional = true;
          }
          {
            name = "http";
            packageId = "http";
          }
          {
            name = "http-body";
            packageId = "http-body";
          }
          {
            name = "httparse";
            packageId = "httparse";
          }
          {
            name = "httpdate";
            packageId = "httpdate";
          }
          {
            name = "itoa";
            packageId = "itoa 0.4.8";
          }
          {
            name = "pin-project-lite";
            packageId = "pin-project-lite 0.2.8";
          }
          {
            name = "socket2";
            packageId = "socket2 0.4.2";
            optional = true;
          }
          {
            name = "tokio";
            packageId = "tokio";
            features = [ "sync" ];
          }
          {
            name = "tower-service";
            packageId = "tower-service";
          }
          {
            name = "tracing";
            packageId = "tracing 0.1.31";
            usesDefaultFeatures = false;
            features = [ "std" ];
          }
          {
            name = "want";
            packageId = "want";
          }
        ];
        devDependencies = [
          {
            name = "futures-util";
            packageId = "futures-util";
            usesDefaultFeatures = false;
            features = [ "alloc" ];
          }
          {
            name = "tokio";
            packageId = "tokio";
            features = [ "fs" "macros" "io-std" "io-util" "rt" "rt-multi-thread" "sync" "time" "test-util" ];
          }
        ];
        features = {
          "ffi" = [ "libc" ];
          "full" = [ "client" "http1" "http2" "server" "stream" "runtime" ];
          "http2" = [ "h2" ];
          "runtime" = [ "tcp" "tokio/rt" "tokio/time" ];
          "tcp" = [ "socket2" "tokio/net" "tokio/rt" "tokio/time" ];
        };
        resolvedDefaultFeatures = [ "client" "default" "full" "h2" "http1" "http2" "runtime" "server" "socket2" "stream" "tcp" ];
      };
      "hyper-proxy" = rec {
        crateName = "hyper-proxy";
        version = "0.9.1";
        edition = "2018";
        sha256 = "1k3mpq6d4rhz58dam1757sav14j32n39q8x37wjgpz943f4mm0fa";
        authors = [
          "Johann Tuffe <tafia973@gmail.com>"
        ];
        dependencies = [
          {
            name = "bytes";
            packageId = "bytes 1.1.0";
          }
          {
            name = "futures";
            packageId = "futures 0.3.19";
          }
          {
            name = "headers";
            packageId = "headers";
          }
          {
            name = "http";
            packageId = "http";
          }
          {
            name = "hyper";
            packageId = "hyper 0.14.16";
            features = [ "client" ];
          }
          {
            name = "hyper-rustls";
            packageId = "hyper-rustls";
            optional = true;
          }
          {
            name = "rustls-native-certs";
            packageId = "rustls-native-certs";
            optional = true;
          }
          {
            name = "tokio";
            packageId = "tokio";
            features = [ "io-std" "io-util" ];
          }
          {
            name = "tokio-rustls";
            packageId = "tokio-rustls";
            optional = true;
          }
          {
            name = "tower-service";
            packageId = "tower-service";
          }
          {
            name = "webpki";
            packageId = "webpki";
            optional = true;
          }
        ];
        devDependencies = [
          {
            name = "hyper";
            packageId = "hyper 0.14.16";
            features = [ "client" "http1" "tcp" ];
          }
          {
            name = "tokio";
            packageId = "tokio";
            features = [ "full" ];
          }
        ];
        features = {
          "default" = [ "tls" ];
          "openssl-tls" = [ "openssl" "tokio-openssl" ];
          "rustls" = [ "rustls-base" "rustls-native-certs" "hyper-rustls/native-tokio" ];
          "rustls-base" = [ "tokio-rustls" "hyper-rustls" "webpki" ];
          "rustls-webpki" = [ "rustls-base" "webpki-roots" "hyper-rustls/webpki-tokio" ];
          "tls" = [ "tokio-native-tls" "hyper-tls" "native-tls" ];
        };
        resolvedDefaultFeatures = [ "hyper-rustls" "rustls" "rustls-base" "rustls-native-certs" "tokio-rustls" "webpki" ];
      };
      "hyper-rustls" = rec {
        crateName = "hyper-rustls";
        version = "0.22.1";
        edition = "2018";
        sha256 = "0r2szp06nzqx6gblcw69kwx8afjp218fc083kfpw0i3d66bpm7sz";
        authors = [
          "Joseph Birr-Pixton <jpixton@gmail.com>"
        ];
        dependencies = [
          {
            name = "ct-logs";
            packageId = "ct-logs";
            optional = true;
          }
          {
            name = "futures-util";
            packageId = "futures-util";
          }
          {
            name = "hyper";
            packageId = "hyper 0.14.16";
            usesDefaultFeatures = false;
            features = [ "client" "http1" ];
          }
          {
            name = "log";
            packageId = "log 0.4.14";
          }
          {
            name = "rustls";
            packageId = "rustls";
          }
          {
            name = "rustls-native-certs";
            packageId = "rustls-native-certs";
            optional = true;
          }
          {
            name = "tokio";
            packageId = "tokio";
          }
          {
            name = "tokio-rustls";
            packageId = "tokio-rustls";
          }
          {
            name = "webpki";
            packageId = "webpki";
          }
          {
            name = "webpki-roots";
            packageId = "webpki-roots";
            optional = true;
          }
        ];
        devDependencies = [
          {
            name = "hyper";
            packageId = "hyper 0.14.16";
            features = [ "full" ];
          }
          {
            name = "tokio";
            packageId = "tokio";
            features = [ "io-std" "macros" "net" "rt-multi-thread" ];
          }
        ];
        features = {
          "default" = [ "native-tokio" ];
          "native-tokio" = [ "tokio-runtime" "rustls-native-certs" ];
          "tokio-runtime" = [ "hyper/runtime" "ct-logs" ];
          "webpki-tokio" = [ "tokio-runtime" "webpki-roots" ];
        };
        resolvedDefaultFeatures = [ "ct-logs" "default" "native-tokio" "rustls-native-certs" "tokio-runtime" "webpki-roots" ];
      };
      "hyper-timeout" = rec {
        crateName = "hyper-timeout";
        version = "0.4.1";
        edition = "2018";
        sha256 = "1c8k3g8k2yh1gxvsx9p7amkimgxhl9kafwpj7jyf8ywc5r45ifdv";
        authors = [
          "Herman J. Radtke III <herman@hermanradtke.com>"
        ];
        dependencies = [
          {
            name = "hyper";
            packageId = "hyper 0.14.16";
            features = [ "client" ];
          }
          {
            name = "pin-project-lite";
            packageId = "pin-project-lite 0.2.8";
          }
          {
            name = "tokio";
            packageId = "tokio";
          }
          {
            name = "tokio-io-timeout";
            packageId = "tokio-io-timeout";
          }
        ];
        devDependencies = [
          {
            name = "hyper";
            packageId = "hyper 0.14.16";
            features = [ "client" "http1" "tcp" ];
          }
          {
            name = "tokio";
            packageId = "tokio";
            features = [ "io-std" "io-util" "macros" ];
          }
        ];

      };
      "hyper-tls" = rec {
        crateName = "hyper-tls";
        version = "0.5.0";
        edition = "2018";
        sha256 = "01crgy13102iagakf6q4mb75dprzr7ps1gj0l5hxm1cvm7gks66n";
        authors = [
          "Sean McArthur <sean@seanmonstar.com>"
        ];
        dependencies = [
          {
            name = "bytes";
            packageId = "bytes 1.1.0";
          }
          {
            name = "hyper";
            packageId = "hyper 0.14.16";
            usesDefaultFeatures = false;
            features = [ "tcp" "client" ];
          }
          {
            name = "native-tls";
            packageId = "native-tls";
          }
          {
            name = "tokio";
            packageId = "tokio";
          }
          {
            name = "tokio-native-tls";
            packageId = "tokio-native-tls";
          }
        ];
        devDependencies = [
          {
            name = "hyper";
            packageId = "hyper 0.14.16";
            usesDefaultFeatures = false;
            features = [ "http1" ];
          }
          {
            name = "tokio";
            packageId = "tokio";
            features = [ "io-std" "macros" "io-util" ];
          }
        ];
        features = {
          "vendored" = [ "native-tls/vendored" ];
        };
      };
      "ibc" = rec {
        crateName = "ibc";
        version = "0.12.0";
        edition = "2021";
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/heliaxdev/ibc-rs";
          rev = "e14560ecfc3f275a63b5702e038cbabd2797b2b6";
          sha256 = "0z9i4airc5x40723nh92y7gjs04hvkmqrj1ggnvq4g5gxq8rbrjx";
        };
        authors = [
          "Informal Systems <hello@informal.systems>"
        ];
        dependencies = [
          {
            name = "bytes";
            packageId = "bytes 1.1.0";
            usesDefaultFeatures = false;
          }
          {
            name = "derive_more";
            packageId = "derive_more";
            usesDefaultFeatures = false;
            features = [ "from" "display" ];
          }
          {
            name = "flex-error";
            packageId = "flex-error";
            usesDefaultFeatures = false;
          }
          {
            name = "ibc-proto";
            packageId = "ibc-proto";
            usesDefaultFeatures = false;
          }
          {
            name = "ics23";
            packageId = "ics23";
            usesDefaultFeatures = false;
          }
          {
            name = "num-traits";
            packageId = "num-traits 0.2.14";
            usesDefaultFeatures = false;
          }
          {
            name = "prost";
            packageId = "prost 0.9.0";
            usesDefaultFeatures = false;
          }
          {
            name = "prost-types";
            packageId = "prost-types 0.9.0";
            usesDefaultFeatures = false;
          }
          {
            name = "safe-regex";
            packageId = "safe-regex";
            usesDefaultFeatures = false;
          }
          {
            name = "serde";
            packageId = "serde 1.0.136";
            usesDefaultFeatures = false;
          }
          {
            name = "serde_derive";
            packageId = "serde_derive";
            usesDefaultFeatures = false;
          }
          {
            name = "serde_json";
            packageId = "serde_json";
            usesDefaultFeatures = false;
          }
          {
            name = "sha2";
            packageId = "sha2 0.10.2";
            usesDefaultFeatures = false;
          }
          {
            name = "subtle-encoding";
            packageId = "subtle-encoding";
            usesDefaultFeatures = false;
          }
          {
            name = "tendermint";
            packageId = "tendermint";
            usesDefaultFeatures = false;
          }
          {
            name = "tendermint-light-client-verifier";
            packageId = "tendermint-light-client-verifier";
            usesDefaultFeatures = false;
          }
          {
            name = "tendermint-proto";
            packageId = "tendermint-proto";
            usesDefaultFeatures = false;
          }
          {
            name = "tendermint-testgen";
            packageId = "tendermint-testgen";
            optional = true;
            usesDefaultFeatures = false;
          }
          {
            name = "time";
            packageId = "time 0.3.7";
            usesDefaultFeatures = false;
          }
          {
            name = "tracing";
            packageId = "tracing 0.1.31";
            usesDefaultFeatures = false;
          }
        ];
        devDependencies = [
          {
            name = "sha2";
            packageId = "sha2 0.10.2";
          }
          {
            name = "tendermint-testgen";
            packageId = "tendermint-testgen";
          }
        ];
        features = {
          "clock" = [ "tendermint/clock" "time/std" ];
          "default" = [ "std" ];
          "mocks" = [ "tendermint-testgen" "clock" "std" ];
          "std" = [ "flex-error/std" "flex-error/eyre_tracer" "ibc-proto/std" "clock" ];
        };
        resolvedDefaultFeatures = [ "clock" "mocks" "std" "tendermint-testgen" ];
      };
      "ibc-proto" = rec {
        crateName = "ibc-proto";
        version = "0.16.0";
        edition = "2021";
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/heliaxdev/ibc-rs";
          rev = "e14560ecfc3f275a63b5702e038cbabd2797b2b6";
          sha256 = "0z9i4airc5x40723nh92y7gjs04hvkmqrj1ggnvq4g5gxq8rbrjx";
        };
        libName = "ibc_proto";
        authors = [
          "Informal Systems <hello@informal.systems>"
        ];
        dependencies = [
          {
            name = "bytes";
            packageId = "bytes 1.1.0";
            usesDefaultFeatures = false;
          }
          {
            name = "prost";
            packageId = "prost 0.9.0";
            usesDefaultFeatures = false;
          }
          {
            name = "prost-types";
            packageId = "prost-types 0.9.0";
            usesDefaultFeatures = false;
          }
          {
            name = "serde";
            packageId = "serde 1.0.136";
            usesDefaultFeatures = false;
          }
          {
            name = "tendermint-proto";
            packageId = "tendermint-proto";
            usesDefaultFeatures = false;
          }
          {
            name = "tonic";
            packageId = "tonic";
            optional = true;
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "default" = [ "std" ];
          "std" = [ "tonic" "tonic/codegen" "tonic/transport" "tonic/prost" ];
        };
        resolvedDefaultFeatures = [ "std" "tonic" ];
      };
      "ics23" = rec {
        crateName = "ics23";
        version = "0.6.7";
        edition = "2018";
        sha256 = "0cx2g8pfnxsvcgh2wg4ls5wkzi3hrvy1sfsbvwxlb826iisy85ff";
        authors = [
          "Ethan Frey <ethanfrey@users.noreply.github.com>"
        ];
        dependencies = [
          {
            name = "anyhow";
            packageId = "anyhow";
            usesDefaultFeatures = false;
          }
          {
            name = "bytes";
            packageId = "bytes 1.1.0";
            usesDefaultFeatures = false;
          }
          {
            name = "hex";
            packageId = "hex";
            usesDefaultFeatures = false;
            features = [ "alloc" ];
          }
          {
            name = "prost";
            packageId = "prost 0.9.0";
            usesDefaultFeatures = false;
            features = [ "prost-derive" ];
          }
          {
            name = "ripemd160";
            packageId = "ripemd160";
            usesDefaultFeatures = false;
          }
          {
            name = "sha2";
            packageId = "sha2 0.9.9";
            usesDefaultFeatures = false;
          }
          {
            name = "sha3";
            packageId = "sha3";
            usesDefaultFeatures = false;
          }
          {
            name = "sp-std";
            packageId = "sp-std";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "default" = [ "std" ];
          "std" = [ "prost/std" "bytes/std" "hex/std" "sha2/std" "sha3/std" "ripemd160/std" "anyhow/std" "sp-std/std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "ident_case" = rec {
        crateName = "ident_case";
        version = "1.0.1";
        edition = "2015";
        sha256 = "0fac21q6pwns8gh1hz3nbq15j8fi441ncl6w4vlnd1cmc55kiq5r";
        authors = [
          "Ted Driggs <ted.driggs@outlook.com>"
        ];

      };
      "idna 0.1.5" = rec {
        crateName = "idna";
        version = "0.1.5";
        edition = "2015";
        sha256 = "0kl4gs5kaydn4v07c6ka33spm9qdh2np0x7iw7g5zd8z1c7rxw1q";
        authors = [
          "The rust-url developers"
        ];
        dependencies = [
          {
            name = "matches";
            packageId = "matches";
          }
          {
            name = "unicode-bidi";
            packageId = "unicode-bidi";
          }
          {
            name = "unicode-normalization";
            packageId = "unicode-normalization";
          }
        ];

      };
      "idna 0.2.3" = rec {
        crateName = "idna";
        version = "0.2.3";
        edition = "2018";
        sha256 = "1y7ca2w5qp9msgl57n03zqp78gq1bk2crqzg6kv7a542mdphm2j1";
        authors = [
          "The rust-url developers"
        ];
        dependencies = [
          {
            name = "matches";
            packageId = "matches";
          }
          {
            name = "unicode-bidi";
            packageId = "unicode-bidi";
          }
          {
            name = "unicode-normalization";
            packageId = "unicode-normalization";
          }
        ];

      };
      "if-addrs" = rec {
        crateName = "if-addrs";
        version = "0.6.7";
        edition = "2018";
        sha256 = "1pkkkwm9znn07xq9s6glf8lxzn2rdxvy8kwkw6czrw64ywhy8wr2";
        authors = [
          "MaidSafe Developers <dev@maidsafe.net>"
          "Messense Lv <messense@icloud.com>"
        ];
        dependencies = [
          {
            name = "if-addrs-sys";
            packageId = "if-addrs-sys";
            target = { target, features }: (target."os" == "android");
          }
          {
            name = "libc";
            packageId = "libc";
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.9";
            target = { target, features }: (target."os" == "windows");
            features = [ "minwindef" "winerror" "ws2def" "ws2ipdef" ];
          }
        ];

      };
      "if-addrs-sys" = rec {
        crateName = "if-addrs-sys";
        version = "0.3.2";
        edition = "2018";
        sha256 = "1skrzs79rafv185064p44r0k1va9ig4bfnpbwlvyhxh4g3fvjx6y";
        libPath = "lib.rs";
        authors = [
          "MaidSafe Developers <dev@maidsafe.net>"
          "Messense Lv <messense@icloud.com>"
        ];
        dependencies = [
          {
            name = "libc";
            packageId = "libc";
          }
        ];
        buildDependencies = [
          {
            name = "cc";
            packageId = "cc";
          }
        ];

      };
      "if-watch" = rec {
        crateName = "if-watch";
        version = "0.2.2";
        edition = "2018";
        sha256 = "0y8ix7pfvvdxzcbhk125qbs6lb2c1g5vjkxjkh240cmdggvbg2mf";
        authors = [
          "David Craven <david@craven.ch>"
          "Parity Technologies Limited <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "async-io";
            packageId = "async-io";
            target = { target, features }: (!(target."windows" or false));
          }
          {
            name = "futures";
            packageId = "futures 0.3.19";
            usesDefaultFeatures = false;
            target = { target, features }: (target."windows" or false);
          }
          {
            name = "futures-lite";
            packageId = "futures-lite";
          }
          {
            name = "if-addrs";
            packageId = "if-addrs";
            target = { target, features }: (!(target."os" == "linux"));
          }
          {
            name = "ipnet";
            packageId = "ipnet";
          }
          {
            name = "libc";
            packageId = "libc";
          }
          {
            name = "log";
            packageId = "log 0.4.14";
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.9";
            target = { target, features }: (target."windows" or false);
            features = [ "netioapi" "ntdef" "winerror" "ws2def" ];
          }
        ];

      };
      "indenter" = rec {
        crateName = "indenter";
        version = "0.3.3";
        edition = "2018";
        sha256 = "10y6i6y4ls7xsfsc1r3p5j2hhbxhaqnk5zzk8aj52b14v05ba8yf";
        authors = [
          "Jane Lusby <jlusby@yaah.dev>"
        ];
        features = {
        };
        resolvedDefaultFeatures = [ "default" ];
      };
      "indexmap" = rec {
        crateName = "indexmap";
        version = "1.8.0";
        edition = "2018";
        sha256 = "08s2rdps98z4qggzad2cf58nx012lnznn0b5q02a9arcf93n4ai8";
        authors = [
          "bluss"
          "Josh Stone <cuviper@gmail.com>"
        ];
        dependencies = [
          {
            name = "hashbrown";
            packageId = "hashbrown";
            usesDefaultFeatures = false;
            features = [ "raw" ];
          }
          {
            name = "serde";
            packageId = "serde 1.0.136";
            optional = true;
            usesDefaultFeatures = false;
          }
        ];
        buildDependencies = [
          {
            name = "autocfg";
            packageId = "autocfg 1.0.1";
          }
        ];
        features = {
          "serde-1" = [ "serde" ];
        };
        resolvedDefaultFeatures = [ "serde" "serde-1" "std" ];
      };
      "inotify" = rec {
        crateName = "inotify";
        version = "0.7.1";
        edition = "2015";
        sha256 = "0byhq4x4b2rlbkmfrab5dni39wiq2ls1hv1nhggp7rla5inwc5j8";
        authors = [
          "Hanno Braun <mail@hannobraun.de>"
          "Félix Saparelli <me@passcod.name>"
          "Cristian Kubis <cristian.kubis@tsunix.de>"
          "Frank Denis <github@pureftpd.org>"
        ];
        dependencies = [
          {
            name = "bitflags";
            packageId = "bitflags";
          }
          {
            name = "inotify-sys";
            packageId = "inotify-sys";
          }
          {
            name = "libc";
            packageId = "libc";
          }
        ];
        features = {
          "default" = [ "stream" ];
          "stream" = [ "futures" "mio" "tokio" "tokio-io" "tokio-reactor" ];
        };
      };
      "inotify-sys" = rec {
        crateName = "inotify-sys";
        version = "0.1.5";
        edition = "2015";
        sha256 = "1syhjgvkram88my04kv03s0zwa66mdwa5v7ddja3pzwvx2sh4p70";
        authors = [
          "Hanno Braun <hb@hannobraun.de>"
        ];
        dependencies = [
          {
            name = "libc";
            packageId = "libc";
          }
        ];

      };
      "input_buffer" = rec {
        crateName = "input_buffer";
        version = "0.4.0";
        edition = "2015";
        sha256 = "04yl6pdjawq5grl946hn3imfs2cx0r0vrc0jvdyim3s4bybnfygr";
        authors = [
          "Alexey Galakhov <agalakhov@snapview.de>"
        ];
        dependencies = [
          {
            name = "bytes";
            packageId = "bytes 1.1.0";
          }
        ];

      };
      "instant" = rec {
        crateName = "instant";
        version = "0.1.12";
        edition = "2018";
        sha256 = "0b2bx5qdlwayriidhrag8vhy10kdfimfhmb3jnjmsz2h9j1bwnvs";
        authors = [
          "sebcrozet <developer@crozet.re>"
        ];
        dependencies = [
          {
            name = "cfg-if";
            packageId = "cfg-if 1.0.0";
          }
        ];
        features = {
          "wasm-bindgen" = [ "js-sys" "wasm-bindgen_rs" "web-sys" ];
        };
      };
      "integer-encoding" = rec {
        crateName = "integer-encoding";
        version = "3.0.2";
        edition = "2018";
        sha256 = "1f0mk7d694g2sz4my5zh7i5w4kijx5y16x6dip7fv0pazx013hch";
        authors = [
          "Lewin Bormann <lbo@spheniscida.de>"
        ];
        features = {
          "futures_async" = [ "futures-util" "async-trait" ];
          "tokio_async" = [ "tokio" "async-trait" ];
        };
      };
      "iovec" = rec {
        crateName = "iovec";
        version = "0.1.4";
        edition = "2015";
        sha256 = "0ph73qygwx8i0mblrf110cj59l00gkmsgrpzz1rm85syz5pymcxj";
        authors = [
          "Carl Lerche <me@carllerche.com>"
        ];
        dependencies = [
          {
            name = "libc";
            packageId = "libc";
            target = { target, features }: (target."unix" or false);
          }
        ];

      };
      "ipconfig" = rec {
        crateName = "ipconfig";
        version = "0.2.2";
        edition = "2018";
        sha256 = "1mzsagc6bk3i3fpggqlq8am5rxn4hgs297rsaya90w79xj5g3qpp";
        authors = [
          "Liran Ringel <liranringel@gmail.com>"
        ];
        dependencies = [
          {
            name = "socket2";
            packageId = "socket2 0.3.19";
            target = { target, features }: (target."windows" or false);
          }
          {
            name = "widestring";
            packageId = "widestring";
            target = { target, features }: (target."windows" or false);
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.9";
            target = { target, features }: (target."windows" or false);
          }
          {
            name = "winreg";
            packageId = "winreg 0.6.2";
            target = { target, features }: (target."windows" or false);
          }
        ];

      };
      "ipnet" = rec {
        crateName = "ipnet";
        version = "2.3.1";
        edition = "2015";
        sha256 = "1ad32j3kkbb0bgf5whzfkdw6843ywr48245dhk7c9gny5r7xdwk8";
        authors = [
          "Kris Price <kris@krisprice.nz>"
        ];

      };
      "itertools 0.10.3" = rec {
        crateName = "itertools";
        version = "0.10.3";
        edition = "2018";
        sha256 = "1qy55fqbaisr9qgbn7cvdvqlfqbh1f4ddf99zwan56z7l6gx3ad9";
        authors = [
          "bluss"
        ];
        dependencies = [
          {
            name = "either";
            packageId = "either";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "default" = [ "use_std" ];
          "use_std" = [ "use_alloc" ];
        };
        resolvedDefaultFeatures = [ "default" "use_alloc" "use_std" ];
      };
      "itertools 0.9.0" = rec {
        crateName = "itertools";
        version = "0.9.0";
        edition = "2018";
        sha256 = "0jyml7ygr7kijkcjdl3fk5f34y5h5jsavclim7l13zjiavw1hkr8";
        authors = [
          "bluss"
        ];
        dependencies = [
          {
            name = "either";
            packageId = "either";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "default" = [ "use_std" ];
        };
        resolvedDefaultFeatures = [ "default" "use_std" ];
      };
      "itoa 0.4.8" = rec {
        crateName = "itoa";
        version = "0.4.8";
        edition = "2015";
        sha256 = "1m1dairwyx8kfxi7ab3b5jc71z1vigh9w4shnhiajji9avzr26dp";
        authors = [
          "David Tolnay <dtolnay@gmail.com>"
        ];
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "itoa 1.0.1" = rec {
        crateName = "itoa";
        version = "1.0.1";
        edition = "2018";
        sha256 = "0d8wr2qf5b25a04xf10rz9r0pdbjdgb0zaw3xvf8k2sqcz1qzaqs";
        authors = [
          "David Tolnay <dtolnay@gmail.com>"
        ];

      };
      "jobserver" = rec {
        crateName = "jobserver";
        version = "0.1.24";
        edition = "2018";
        sha256 = "1yn1vxbbqv7dqir6qbfcj8h8ddjf89m5mhvm36h13xx7k5raf9dg";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        dependencies = [
          {
            name = "libc";
            packageId = "libc";
            target = { target, features }: (target."unix" or false);
          }
        ];

      };
      "js-sys" = rec {
        crateName = "js-sys";
        version = "0.3.56";
        edition = "2018";
        sha256 = "010g8jkj5avy3xd77i3cprjzzpfa6z9z2ay0fkllqmpx617c53x3";
        authors = [
          "The wasm-bindgen Developers"
        ];
        dependencies = [
          {
            name = "wasm-bindgen";
            packageId = "wasm-bindgen";
          }
        ];

      };
      "jsonpath_lib" = rec {
        crateName = "jsonpath_lib";
        version = "0.3.0";
        edition = "2015";
        sha256 = "0kvp4fargixqlwjvpb3w6f1lvmiysnmj7an5h75wqc42ss8k39pa";type = [ "cdylib" "rlib" ];
        authors = [
          "Changseok Han <freestrings@gmail.com>"
        ];
        dependencies = [
          {
            name = "log";
            packageId = "log 0.4.14";
          }
          {
            name = "serde";
            packageId = "serde 1.0.136";
            features = [ "derive" ];
          }
          {
            name = "serde_json";
            packageId = "serde_json";
            features = [ "preserve_order" ];
          }
        ];

      };
      "keccak" = rec {
        crateName = "keccak";
        version = "0.1.0";
        edition = "2015";
        sha256 = "19ybbvxrdk9yy65rk7f5ad0hcxszkjwph68yzkj3954lnir1bhk7";
        authors = [
          "RustCrypto Developers"
        ];
        features = {
        };
      };
      "kernel32-sys" = rec {
        crateName = "kernel32-sys";
        version = "0.2.2";
        edition = "2015";
        sha256 = "1389av0601a9yz8dvx5zha9vmkd6ik7ax0idpb032d28555n41vm";
        libName = "kernel32";
        authors = [
          "Peter Atashian <retep998@gmail.com>"
        ];
        dependencies = [
          {
            name = "winapi";
            packageId = "winapi 0.2.8";
          }
        ];
        buildDependencies = [
          {
            name = "winapi-build";
            packageId = "winapi-build";
          }
        ];

      };
      "kv-log-macro" = rec {
        crateName = "kv-log-macro";
        version = "1.0.7";
        edition = "2018";
        sha256 = "0zwp4bxkkp87rl7xy2dain77z977rvcry1gmr5bssdbn541v7s0d";
        authors = [
          "Yoshua Wuyts <yoshuawuyts@gmail.com>"
        ];
        dependencies = [
          {
            name = "log";
            packageId = "log 0.4.14";
            features = [ "kv_unstable" ];
          }
        ];

      };
      "language-tags" = rec {
        crateName = "language-tags";
        version = "0.2.2";
        edition = "2015";
        sha256 = "16hrjdpa827carq5x4b8zhas24d8kg4s16m6nmmn1kb7cr5qh7d9";
        authors = [
          "Pyfisch <pyfisch@gmail.com>"
        ];
        features = {
          "heap_size" = [ "heapsize" "heapsize_plugin" ];
        };
      };
      "lazy_static 0.2.11" = rec {
        crateName = "lazy_static";
        version = "0.2.11";
        edition = "2015";
        sha256 = "0wxy8vak7jsx6r8gx475pjqpx11p2bfq4wvw6idmqi31mp3k7w3n";
        authors = [
          "Marvin Löbel <loebel.marvin@gmail.com>"
        ];
        features = {
          "compiletest" = [ "compiletest_rs" ];
          "spin_no_std" = [ "nightly" "spin" ];
        };
      };
      "lazy_static 1.4.0" = rec {
        crateName = "lazy_static";
        version = "1.4.0";
        edition = "2015";
        sha256 = "0in6ikhw8mgl33wjv6q6xfrb5b9jr16q8ygjy803fay4zcisvaz2";
        authors = [
          "Marvin Löbel <loebel.marvin@gmail.com>"
        ];
        features = {
          "spin_no_std" = [ "spin" ];
        };
      };
      "lazycell" = rec {
        crateName = "lazycell";
        version = "1.3.0";
        edition = "2015";
        sha256 = "0m8gw7dn30i0zjjpjdyf6pc16c34nl71lpv461mix50x3p70h3c3";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
          "Nikita Pekin <contact@nikitapek.in>"
        ];
        features = {
          "nightly-testing" = [ "clippy" "nightly" ];
        };
      };
      "leb128" = rec {
        crateName = "leb128";
        version = "0.2.5";
        edition = "2018";
        crateBin = [];
        sha256 = "0rxxjdn76sjbrb08s4bi7m4x47zg68f71jzgx8ww7j0cnivjckl8";
        authors = [
          "Nick Fitzgerald <fitzgen@gmail.com>"
          "Philip Craig <philipjcraig@gmail.com>"
        ];
        features = {
        };
      };
      "lexical-core" = rec {
        crateName = "lexical-core";
        version = "0.7.6";
        edition = "2018";
        sha256 = "1zjzab1fnaw4kj6ixyrskp4dyz761gdcab07m4bkvlk1l4mcc1v6";
        authors = [
          "Alex Huszagh <ahuszagh@gmail.com>"
        ];
        dependencies = [
          {
            name = "arrayvec";
            packageId = "arrayvec 0.5.2";
            optional = true;
            usesDefaultFeatures = false;
            features = [ "array-sizes-33-128" ];
          }
          {
            name = "bitflags";
            packageId = "bitflags";
          }
          {
            name = "cfg-if";
            packageId = "cfg-if 1.0.0";
          }
          {
            name = "ryu";
            packageId = "ryu";
            optional = true;
          }
          {
            name = "static_assertions";
            packageId = "static_assertions";
            optional = true;
          }
        ];
        features = {
          "correct" = [ "arrayvec" "static_assertions" "table" ];
          "default" = [ "correct" "ryu" "std" ];
          "format" = [ "static_assertions" ];
          "grisu3" = [ "dtoa" ];
          "property_tests" = [ "quickcheck" "proptest" ];
        };
        resolvedDefaultFeatures = [ "arrayvec" "correct" "default" "ryu" "static_assertions" "std" "table" ];
      };
      "libc" = rec {
        crateName = "libc";
        version = "0.2.112";
        edition = "2015";
        sha256 = "09bik7pcck869kfr5i9hjhnck0mzpd9v0ijxbqnh8fja6rzx20qv";
        authors = [
          "The Rust Project Developers"
        ];
        features = {
          "default" = [ "std" ];
          "rustc-dep-of-std" = [ "align" "rustc-std-workspace-core" ];
          "use_std" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "align" "default" "extra_traits" "std" ];
      };
      "libgit2-sys" = rec {
        crateName = "libgit2-sys";
        version = "0.12.26+1.3.0";
        edition = "2018";
        sha256 = "153l8nvz9p8vyd5840xi6fwblvhpn3c33jwdwsznyq4f4jcwiq8r";
        libName = "libgit2_sys";
        libPath = "lib.rs";
        authors = [
          "Josh Triplett <josh@joshtriplett.org>"
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        dependencies = [
          {
            name = "libc";
            packageId = "libc";
          }
          {
            name = "libssh2-sys";
            packageId = "libssh2-sys";
            optional = true;
          }
          {
            name = "libz-sys";
            packageId = "libz-sys";
            usesDefaultFeatures = false;
            features = [ "libc" ];
          }
          {
            name = "openssl-sys";
            packageId = "openssl-sys";
            optional = true;
            target = { target, features }: (target."unix" or false);
          }
        ];
        buildDependencies = [
          {
            name = "cc";
            packageId = "cc";
            features = [ "parallel" ];
          }
          {
            name = "pkg-config";
            packageId = "pkg-config";
          }
        ];
        features = {
          "https" = [ "openssl-sys" ];
          "ssh" = [ "libssh2-sys" ];
          "vendored-openssl" = [ "openssl-sys/vendored" ];
          "zlib-ng-compat" = [ "libz-sys/zlib-ng" "libssh2-sys/zlib-ng-compat" ];
        };
        resolvedDefaultFeatures = [ "https" "libssh2-sys" "openssl-sys" "ssh" "ssh_key_from_memory" ];
      };
      "libloading" = rec {
        crateName = "libloading";
        version = "0.7.3";
        edition = "2015";
        sha256 = "1pfdmf0scimadifda0wyg9swalr2pahwd5fjmvvfjxd7z41hzg7g";
        authors = [
          "Simonas Kazlauskas <libloading@kazlauskas.me>"
        ];
        dependencies = [
          {
            name = "cfg-if";
            packageId = "cfg-if 1.0.0";
            target = { target, features }: (target."unix" or false);
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.9";
            target = { target, features }: (target."windows" or false);
            features = [ "errhandlingapi" "libloaderapi" ];
          }
        ];

      };
      "libp2p" = rec {
        crateName = "libp2p";
        version = "0.38.0";
        edition = "2018";
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/heliaxdev/rust-libp2p.git";
          rev = "1abe349c231eb307d3dbe03f3ffffc6cf5e9084d";
          sha256 = "03qa49kbx0ylnc1qp2swr0ffy7nli954nbfqkm346s3iysj0mdgw";
        };
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "atomic";
            packageId = "atomic";
          }
          {
            name = "bytes";
            packageId = "bytes 1.1.0";
          }
          {
            name = "futures";
            packageId = "futures 0.3.19";
          }
          {
            name = "lazy_static";
            packageId = "lazy_static 1.4.0";
          }
          {
            name = "libp2p-core";
            packageId = "libp2p-core";
            usesDefaultFeatures = false;
          }
          {
            name = "libp2p-deflate";
            packageId = "libp2p-deflate";
            optional = true;
            target = { target, features }: (!((target."os" == "emscripten") || (target."os" == "wasi") || (target."os" == "unknown")));
          }
          {
            name = "libp2p-dns";
            packageId = "libp2p-dns";
            optional = true;
            usesDefaultFeatures = false;
            target = { target, features }: (!((target."os" == "emscripten") || (target."os" == "wasi") || (target."os" == "unknown")));
          }
          {
            name = "libp2p-floodsub";
            packageId = "libp2p-floodsub";
            optional = true;
          }
          {
            name = "libp2p-gossipsub";
            packageId = "libp2p-gossipsub";
            optional = true;
          }
          {
            name = "libp2p-identify";
            packageId = "libp2p-identify";
            optional = true;
          }
          {
            name = "libp2p-kad";
            packageId = "libp2p-kad";
            optional = true;
          }
          {
            name = "libp2p-mdns";
            packageId = "libp2p-mdns";
            optional = true;
            target = { target, features }: (!((target."os" == "emscripten") || (target."os" == "wasi") || (target."os" == "unknown")));
          }
          {
            name = "libp2p-mplex";
            packageId = "libp2p-mplex";
            optional = true;
          }
          {
            name = "libp2p-noise";
            packageId = "libp2p-noise";
            optional = true;
          }
          {
            name = "libp2p-ping";
            packageId = "libp2p-ping";
            optional = true;
          }
          {
            name = "libp2p-plaintext";
            packageId = "libp2p-plaintext";
            optional = true;
          }
          {
            name = "libp2p-pnet";
            packageId = "libp2p-pnet";
            optional = true;
          }
          {
            name = "libp2p-relay";
            packageId = "libp2p-relay";
            optional = true;
          }
          {
            name = "libp2p-request-response";
            packageId = "libp2p-request-response";
            optional = true;
          }
          {
            name = "libp2p-swarm";
            packageId = "libp2p-swarm";
          }
          {
            name = "libp2p-swarm-derive";
            packageId = "libp2p-swarm-derive";
          }
          {
            name = "libp2p-tcp";
            packageId = "libp2p-tcp";
            optional = true;
            usesDefaultFeatures = false;
            target = { target, features }: (!((target."os" == "emscripten") || (target."os" == "wasi") || (target."os" == "unknown")));
          }
          {
            name = "libp2p-uds";
            packageId = "libp2p-uds";
            optional = true;
          }
          {
            name = "libp2p-wasm-ext";
            packageId = "libp2p-wasm-ext";
            optional = true;
            usesDefaultFeatures = false;
          }
          {
            name = "libp2p-websocket";
            packageId = "libp2p-websocket";
            optional = true;
            target = { target, features }: (!((target."os" == "emscripten") || (target."os" == "wasi") || (target."os" == "unknown")));
          }
          {
            name = "libp2p-yamux";
            packageId = "libp2p-yamux";
            optional = true;
          }
          {
            name = "parity-multiaddr";
            packageId = "parity-multiaddr";
            rename = "multiaddr";
          }
          {
            name = "parking_lot";
            packageId = "parking_lot 0.11.2";
          }
          {
            name = "pin-project";
            packageId = "pin-project 1.0.10";
          }
          {
            name = "smallvec";
            packageId = "smallvec 1.8.0";
          }
          {
            name = "wasm-timer";
            packageId = "wasm-timer";
          }
        ];
        features = {
          "default" = [ "deflate" "dns-async-std" "floodsub" "identify" "kad" "gossipsub" "mdns" "mplex" "noise" "ping" "plaintext" "pnet" "relay" "request-response" "secp256k1" "tcp-async-io" "uds" "wasm-ext" "websocket" "yamux" ];
          "deflate" = [ "libp2p-deflate" ];
          "dns-async-std" = [ "libp2p-dns" "libp2p-dns/async-std" ];
          "dns-tokio" = [ "libp2p-dns" "libp2p-dns/tokio" ];
          "floodsub" = [ "libp2p-floodsub" ];
          "gossipsub" = [ "libp2p-gossipsub" ];
          "identify" = [ "libp2p-identify" ];
          "kad" = [ "libp2p-kad" ];
          "mdns" = [ "libp2p-mdns" ];
          "mplex" = [ "libp2p-mplex" ];
          "noise" = [ "libp2p-noise" ];
          "ping" = [ "libp2p-ping" ];
          "plaintext" = [ "libp2p-plaintext" ];
          "pnet" = [ "libp2p-pnet" ];
          "relay" = [ "libp2p-relay" ];
          "request-response" = [ "libp2p-request-response" ];
          "secp256k1" = [ "libp2p-core/secp256k1" ];
          "tcp-async-io" = [ "libp2p-tcp" "libp2p-tcp/async-io" ];
          "tcp-tokio" = [ "libp2p-tcp" "libp2p-tcp/tokio" ];
          "uds" = [ "libp2p-uds" ];
          "wasm-ext" = [ "libp2p-wasm-ext" ];
          "wasm-ext-websocket" = [ "wasm-ext" "libp2p-wasm-ext/websocket" ];
          "websocket" = [ "libp2p-websocket" ];
          "yamux" = [ "libp2p-yamux" ];
        };
        resolvedDefaultFeatures = [ "default" "deflate" "dns-async-std" "floodsub" "gossipsub" "identify" "kad" "libp2p-deflate" "libp2p-dns" "libp2p-floodsub" "libp2p-gossipsub" "libp2p-identify" "libp2p-kad" "libp2p-mdns" "libp2p-mplex" "libp2p-noise" "libp2p-ping" "libp2p-plaintext" "libp2p-pnet" "libp2p-relay" "libp2p-request-response" "libp2p-tcp" "libp2p-uds" "libp2p-wasm-ext" "libp2p-websocket" "libp2p-yamux" "mdns" "mplex" "noise" "ping" "plaintext" "pnet" "relay" "request-response" "secp256k1" "tcp-async-io" "uds" "wasm-ext" "websocket" "yamux" ];
      };
      "libp2p-core" = rec {
        crateName = "libp2p-core";
        version = "0.28.3";
        edition = "2018";
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/heliaxdev/rust-libp2p.git";
          rev = "1abe349c231eb307d3dbe03f3ffffc6cf5e9084d";
          sha256 = "03qa49kbx0ylnc1qp2swr0ffy7nli954nbfqkm346s3iysj0mdgw";
        };
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "asn1_der";
            packageId = "asn1_der";
          }
          {
            name = "bs58";
            packageId = "bs58";
          }
          {
            name = "ed25519-dalek";
            packageId = "ed25519-dalek";
          }
          {
            name = "either";
            packageId = "either";
          }
          {
            name = "fnv";
            packageId = "fnv";
          }
          {
            name = "futures";
            packageId = "futures 0.3.19";
            features = [ "executor" "thread-pool" ];
          }
          {
            name = "futures-timer";
            packageId = "futures-timer";
          }
          {
            name = "lazy_static";
            packageId = "lazy_static 1.4.0";
          }
          {
            name = "libsecp256k1";
            packageId = "libsecp256k1";
            optional = true;
          }
          {
            name = "log";
            packageId = "log 0.4.14";
          }
          {
            name = "multihash";
            packageId = "multihash";
            usesDefaultFeatures = false;
            features = [ "std" "multihash-impl" "identity" "sha2" ];
          }
          {
            name = "multistream-select";
            packageId = "multistream-select";
          }
          {
            name = "parity-multiaddr";
            packageId = "parity-multiaddr";
            rename = "multiaddr";
          }
          {
            name = "parking_lot";
            packageId = "parking_lot 0.11.2";
          }
          {
            name = "pin-project";
            packageId = "pin-project 1.0.10";
          }
          {
            name = "prost";
            packageId = "prost 0.7.0";
          }
          {
            name = "rand";
            packageId = "rand 0.7.3";
          }
          {
            name = "ring";
            packageId = "ring";
            usesDefaultFeatures = false;
            target = { target, features }: (!(target."arch" == "wasm32"));
            features = [ "alloc" "std" ];
          }
          {
            name = "rw-stream-sink";
            packageId = "rw-stream-sink";
          }
          {
            name = "sha2";
            packageId = "sha2 0.9.9";
          }
          {
            name = "smallvec";
            packageId = "smallvec 1.8.0";
          }
          {
            name = "thiserror";
            packageId = "thiserror";
          }
          {
            name = "unsigned-varint";
            packageId = "unsigned-varint 0.7.1";
          }
          {
            name = "void";
            packageId = "void";
          }
          {
            name = "zeroize";
            packageId = "zeroize";
          }
        ];
        buildDependencies = [
          {
            name = "prost-build";
            packageId = "prost-build 0.7.0";
          }
        ];
        devDependencies = [
          {
            name = "multihash";
            packageId = "multihash";
            usesDefaultFeatures = false;
            features = [ "arb" ];
          }
        ];
        features = {
          "default" = [ "secp256k1" ];
          "secp256k1" = [ "libsecp256k1" ];
        };
        resolvedDefaultFeatures = [ "default" "libsecp256k1" "secp256k1" ];
      };
      "libp2p-deflate" = rec {
        crateName = "libp2p-deflate";
        version = "0.28.0";
        edition = "2018";
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/heliaxdev/rust-libp2p.git";
          rev = "1abe349c231eb307d3dbe03f3ffffc6cf5e9084d";
          sha256 = "03qa49kbx0ylnc1qp2swr0ffy7nli954nbfqkm346s3iysj0mdgw";
        };
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "flate2";
            packageId = "flate2";
          }
          {
            name = "futures";
            packageId = "futures 0.3.19";
          }
          {
            name = "libp2p-core";
            packageId = "libp2p-core";
          }
        ];

      };
      "libp2p-dns" = rec {
        crateName = "libp2p-dns";
        version = "0.28.1";
        edition = "2018";
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/heliaxdev/rust-libp2p.git";
          rev = "1abe349c231eb307d3dbe03f3ffffc6cf5e9084d";
          sha256 = "03qa49kbx0ylnc1qp2swr0ffy7nli954nbfqkm346s3iysj0mdgw";
        };
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "async-std-resolver";
            packageId = "async-std-resolver";
            optional = true;
          }
          {
            name = "futures";
            packageId = "futures 0.3.19";
          }
          {
            name = "libp2p-core";
            packageId = "libp2p-core";
          }
          {
            name = "log";
            packageId = "log 0.4.14";
          }
          {
            name = "smallvec";
            packageId = "smallvec 1.8.0";
          }
          {
            name = "trust-dns-resolver";
            packageId = "trust-dns-resolver";
            usesDefaultFeatures = false;
            features = [ "system-config" ];
          }
        ];
        features = {
          "async-std" = [ "async-std-resolver" ];
          "default" = [ "async-std" ];
          "tokio" = [ "trust-dns-resolver/tokio-runtime" ];
          "tokio-dns-over-https-rustls" = [ "tokio" "trust-dns-resolver/dns-over-https-rustls" ];
          "tokio-dns-over-rustls" = [ "tokio" "trust-dns-resolver/dns-over-rustls" ];
        };
        resolvedDefaultFeatures = [ "async-std" "async-std-resolver" ];
      };
      "libp2p-floodsub" = rec {
        crateName = "libp2p-floodsub";
        version = "0.29.0";
        edition = "2018";
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/heliaxdev/rust-libp2p.git";
          rev = "1abe349c231eb307d3dbe03f3ffffc6cf5e9084d";
          sha256 = "03qa49kbx0ylnc1qp2swr0ffy7nli954nbfqkm346s3iysj0mdgw";
        };
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "cuckoofilter";
            packageId = "cuckoofilter";
          }
          {
            name = "fnv";
            packageId = "fnv";
          }
          {
            name = "futures";
            packageId = "futures 0.3.19";
          }
          {
            name = "libp2p-core";
            packageId = "libp2p-core";
          }
          {
            name = "libp2p-swarm";
            packageId = "libp2p-swarm";
          }
          {
            name = "log";
            packageId = "log 0.4.14";
          }
          {
            name = "prost";
            packageId = "prost 0.7.0";
          }
          {
            name = "rand";
            packageId = "rand 0.7.3";
          }
          {
            name = "smallvec";
            packageId = "smallvec 1.8.0";
          }
        ];
        buildDependencies = [
          {
            name = "prost-build";
            packageId = "prost-build 0.7.0";
          }
        ];

      };
      "libp2p-gossipsub" = rec {
        crateName = "libp2p-gossipsub";
        version = "0.31.0";
        edition = "2018";
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/heliaxdev/rust-libp2p.git";
          rev = "1abe349c231eb307d3dbe03f3ffffc6cf5e9084d";
          sha256 = "03qa49kbx0ylnc1qp2swr0ffy7nli954nbfqkm346s3iysj0mdgw";
        };
        authors = [
          "Age Manning <Age@AgeManning.com>"
        ];
        dependencies = [
          {
            name = "asynchronous-codec";
            packageId = "asynchronous-codec";
          }
          {
            name = "base64";
            packageId = "base64 0.13.0";
          }
          {
            name = "byteorder";
            packageId = "byteorder";
          }
          {
            name = "bytes";
            packageId = "bytes 1.1.0";
          }
          {
            name = "fnv";
            packageId = "fnv";
          }
          {
            name = "futures";
            packageId = "futures 0.3.19";
          }
          {
            name = "hex_fmt";
            packageId = "hex_fmt";
          }
          {
            name = "libp2p-core";
            packageId = "libp2p-core";
          }
          {
            name = "libp2p-swarm";
            packageId = "libp2p-swarm";
          }
          {
            name = "log";
            packageId = "log 0.4.14";
          }
          {
            name = "prost";
            packageId = "prost 0.7.0";
          }
          {
            name = "rand";
            packageId = "rand 0.7.3";
          }
          {
            name = "regex";
            packageId = "regex";
          }
          {
            name = "sha2";
            packageId = "sha2 0.9.9";
          }
          {
            name = "smallvec";
            packageId = "smallvec 1.8.0";
          }
          {
            name = "unsigned-varint";
            packageId = "unsigned-varint 0.7.1";
            features = [ "asynchronous_codec" ];
          }
          {
            name = "wasm-timer";
            packageId = "wasm-timer";
          }
        ];
        buildDependencies = [
          {
            name = "prost-build";
            packageId = "prost-build 0.7.0";
          }
        ];

      };
      "libp2p-identify" = rec {
        crateName = "libp2p-identify";
        version = "0.29.0";
        edition = "2018";
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/heliaxdev/rust-libp2p.git";
          rev = "1abe349c231eb307d3dbe03f3ffffc6cf5e9084d";
          sha256 = "03qa49kbx0ylnc1qp2swr0ffy7nli954nbfqkm346s3iysj0mdgw";
        };
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "futures";
            packageId = "futures 0.3.19";
          }
          {
            name = "libp2p-core";
            packageId = "libp2p-core";
          }
          {
            name = "libp2p-swarm";
            packageId = "libp2p-swarm";
          }
          {
            name = "log";
            packageId = "log 0.4.14";
          }
          {
            name = "prost";
            packageId = "prost 0.7.0";
          }
          {
            name = "smallvec";
            packageId = "smallvec 1.8.0";
          }
          {
            name = "wasm-timer";
            packageId = "wasm-timer";
          }
        ];
        buildDependencies = [
          {
            name = "prost-build";
            packageId = "prost-build 0.7.0";
          }
        ];

      };
      "libp2p-kad" = rec {
        crateName = "libp2p-kad";
        version = "0.30.0";
        edition = "2018";
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/heliaxdev/rust-libp2p.git";
          rev = "1abe349c231eb307d3dbe03f3ffffc6cf5e9084d";
          sha256 = "03qa49kbx0ylnc1qp2swr0ffy7nli954nbfqkm346s3iysj0mdgw";
        };
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "arrayvec";
            packageId = "arrayvec 0.5.2";
          }
          {
            name = "asynchronous-codec";
            packageId = "asynchronous-codec";
          }
          {
            name = "bytes";
            packageId = "bytes 1.1.0";
          }
          {
            name = "either";
            packageId = "either";
          }
          {
            name = "fnv";
            packageId = "fnv";
          }
          {
            name = "futures";
            packageId = "futures 0.3.19";
          }
          {
            name = "libp2p-core";
            packageId = "libp2p-core";
          }
          {
            name = "libp2p-swarm";
            packageId = "libp2p-swarm";
          }
          {
            name = "log";
            packageId = "log 0.4.14";
          }
          {
            name = "prost";
            packageId = "prost 0.7.0";
          }
          {
            name = "rand";
            packageId = "rand 0.7.3";
          }
          {
            name = "sha2";
            packageId = "sha2 0.9.9";
          }
          {
            name = "smallvec";
            packageId = "smallvec 1.8.0";
          }
          {
            name = "uint";
            packageId = "uint";
          }
          {
            name = "unsigned-varint";
            packageId = "unsigned-varint 0.7.1";
            features = [ "asynchronous_codec" ];
          }
          {
            name = "void";
            packageId = "void";
          }
          {
            name = "wasm-timer";
            packageId = "wasm-timer";
          }
        ];
        buildDependencies = [
          {
            name = "prost-build";
            packageId = "prost-build 0.7.0";
          }
        ];

      };
      "libp2p-mdns" = rec {
        crateName = "libp2p-mdns";
        version = "0.30.2";
        edition = "2018";
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/heliaxdev/rust-libp2p.git";
          rev = "1abe349c231eb307d3dbe03f3ffffc6cf5e9084d";
          sha256 = "03qa49kbx0ylnc1qp2swr0ffy7nli954nbfqkm346s3iysj0mdgw";
        };
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "async-io";
            packageId = "async-io";
          }
          {
            name = "data-encoding";
            packageId = "data-encoding";
          }
          {
            name = "dns-parser";
            packageId = "dns-parser";
          }
          {
            name = "futures";
            packageId = "futures 0.3.19";
          }
          {
            name = "if-watch";
            packageId = "if-watch";
          }
          {
            name = "lazy_static";
            packageId = "lazy_static 1.4.0";
          }
          {
            name = "libp2p-core";
            packageId = "libp2p-core";
          }
          {
            name = "libp2p-swarm";
            packageId = "libp2p-swarm";
          }
          {
            name = "log";
            packageId = "log 0.4.14";
          }
          {
            name = "rand";
            packageId = "rand 0.8.4";
          }
          {
            name = "smallvec";
            packageId = "smallvec 1.8.0";
          }
          {
            name = "socket2";
            packageId = "socket2 0.4.2";
            features = [ "all" ];
          }
          {
            name = "void";
            packageId = "void";
          }
        ];

      };
      "libp2p-mplex" = rec {
        crateName = "libp2p-mplex";
        version = "0.28.0";
        edition = "2018";
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/heliaxdev/rust-libp2p.git";
          rev = "1abe349c231eb307d3dbe03f3ffffc6cf5e9084d";
          sha256 = "03qa49kbx0ylnc1qp2swr0ffy7nli954nbfqkm346s3iysj0mdgw";
        };
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "asynchronous-codec";
            packageId = "asynchronous-codec";
          }
          {
            name = "bytes";
            packageId = "bytes 1.1.0";
          }
          {
            name = "futures";
            packageId = "futures 0.3.19";
          }
          {
            name = "libp2p-core";
            packageId = "libp2p-core";
          }
          {
            name = "log";
            packageId = "log 0.4.14";
          }
          {
            name = "nohash-hasher";
            packageId = "nohash-hasher";
          }
          {
            name = "parking_lot";
            packageId = "parking_lot 0.11.2";
          }
          {
            name = "rand";
            packageId = "rand 0.7.3";
          }
          {
            name = "smallvec";
            packageId = "smallvec 1.8.0";
          }
          {
            name = "unsigned-varint";
            packageId = "unsigned-varint 0.7.1";
            features = [ "asynchronous_codec" ];
          }
        ];
        devDependencies = [
          {
            name = "futures";
            packageId = "futures 0.3.19";
          }
          {
            name = "rand";
            packageId = "rand 0.7.3";
          }
        ];

      };
      "libp2p-noise" = rec {
        crateName = "libp2p-noise";
        version = "0.31.0";
        edition = "2018";
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/heliaxdev/rust-libp2p.git";
          rev = "1abe349c231eb307d3dbe03f3ffffc6cf5e9084d";
          sha256 = "03qa49kbx0ylnc1qp2swr0ffy7nli954nbfqkm346s3iysj0mdgw";
        };
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "bytes";
            packageId = "bytes 1.1.0";
          }
          {
            name = "curve25519-dalek";
            packageId = "curve25519-dalek";
          }
          {
            name = "futures";
            packageId = "futures 0.3.19";
          }
          {
            name = "lazy_static";
            packageId = "lazy_static 1.4.0";
          }
          {
            name = "libp2p-core";
            packageId = "libp2p-core";
          }
          {
            name = "log";
            packageId = "log 0.4.14";
          }
          {
            name = "prost";
            packageId = "prost 0.7.0";
          }
          {
            name = "rand";
            packageId = "rand 0.8.4";
          }
          {
            name = "sha2";
            packageId = "sha2 0.9.9";
          }
          {
            name = "snow";
            packageId = "snow";
            usesDefaultFeatures = false;
            target = { target, features }: (!(target."arch" == "wasm32"));
            features = [ "ring-resolver" ];
          }
          {
            name = "snow";
            packageId = "snow";
            usesDefaultFeatures = false;
            target = { target, features }: (target."arch" == "wasm32");
            features = [ "default-resolver" ];
          }
          {
            name = "static_assertions";
            packageId = "static_assertions";
          }
          {
            name = "x25519-dalek";
            packageId = "x25519-dalek";
          }
          {
            name = "zeroize";
            packageId = "zeroize";
          }
        ];
        buildDependencies = [
          {
            name = "prost-build";
            packageId = "prost-build 0.7.0";
          }
        ];

      };
      "libp2p-ping" = rec {
        crateName = "libp2p-ping";
        version = "0.29.0";
        edition = "2018";
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/heliaxdev/rust-libp2p.git";
          rev = "1abe349c231eb307d3dbe03f3ffffc6cf5e9084d";
          sha256 = "03qa49kbx0ylnc1qp2swr0ffy7nli954nbfqkm346s3iysj0mdgw";
        };
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "futures";
            packageId = "futures 0.3.19";
          }
          {
            name = "libp2p-core";
            packageId = "libp2p-core";
          }
          {
            name = "libp2p-swarm";
            packageId = "libp2p-swarm";
          }
          {
            name = "log";
            packageId = "log 0.4.14";
          }
          {
            name = "rand";
            packageId = "rand 0.7.3";
          }
          {
            name = "void";
            packageId = "void";
          }
          {
            name = "wasm-timer";
            packageId = "wasm-timer";
          }
        ];

      };
      "libp2p-plaintext" = rec {
        crateName = "libp2p-plaintext";
        version = "0.28.0";
        edition = "2018";
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/heliaxdev/rust-libp2p.git";
          rev = "1abe349c231eb307d3dbe03f3ffffc6cf5e9084d";
          sha256 = "03qa49kbx0ylnc1qp2swr0ffy7nli954nbfqkm346s3iysj0mdgw";
        };
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "asynchronous-codec";
            packageId = "asynchronous-codec";
          }
          {
            name = "bytes";
            packageId = "bytes 1.1.0";
          }
          {
            name = "futures";
            packageId = "futures 0.3.19";
          }
          {
            name = "libp2p-core";
            packageId = "libp2p-core";
          }
          {
            name = "log";
            packageId = "log 0.4.14";
          }
          {
            name = "prost";
            packageId = "prost 0.7.0";
          }
          {
            name = "unsigned-varint";
            packageId = "unsigned-varint 0.7.1";
            features = [ "asynchronous_codec" ];
          }
          {
            name = "void";
            packageId = "void";
          }
        ];
        buildDependencies = [
          {
            name = "prost-build";
            packageId = "prost-build 0.7.0";
          }
        ];

      };
      "libp2p-pnet" = rec {
        crateName = "libp2p-pnet";
        version = "0.21.0";
        edition = "2018";
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/heliaxdev/rust-libp2p.git";
          rev = "1abe349c231eb307d3dbe03f3ffffc6cf5e9084d";
          sha256 = "03qa49kbx0ylnc1qp2swr0ffy7nli954nbfqkm346s3iysj0mdgw";
        };
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "futures";
            packageId = "futures 0.3.19";
          }
          {
            name = "log";
            packageId = "log 0.4.14";
          }
          {
            name = "pin-project";
            packageId = "pin-project 1.0.10";
          }
          {
            name = "rand";
            packageId = "rand 0.7.3";
          }
          {
            name = "salsa20";
            packageId = "salsa20";
          }
          {
            name = "sha3";
            packageId = "sha3";
          }
        ];

      };
      "libp2p-relay" = rec {
        crateName = "libp2p-relay";
        version = "0.2.0";
        edition = "2018";
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/heliaxdev/rust-libp2p.git";
          rev = "1abe349c231eb307d3dbe03f3ffffc6cf5e9084d";
          sha256 = "03qa49kbx0ylnc1qp2swr0ffy7nli954nbfqkm346s3iysj0mdgw";
        };
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "asynchronous-codec";
            packageId = "asynchronous-codec";
          }
          {
            name = "bytes";
            packageId = "bytes 1.1.0";
          }
          {
            name = "futures";
            packageId = "futures 0.3.19";
          }
          {
            name = "futures-timer";
            packageId = "futures-timer";
          }
          {
            name = "libp2p-core";
            packageId = "libp2p-core";
          }
          {
            name = "libp2p-swarm";
            packageId = "libp2p-swarm";
          }
          {
            name = "log";
            packageId = "log 0.4.14";
          }
          {
            name = "pin-project";
            packageId = "pin-project 1.0.10";
          }
          {
            name = "prost";
            packageId = "prost 0.7.0";
          }
          {
            name = "rand";
            packageId = "rand 0.7.3";
          }
          {
            name = "smallvec";
            packageId = "smallvec 1.8.0";
          }
          {
            name = "unsigned-varint";
            packageId = "unsigned-varint 0.7.1";
            features = [ "asynchronous_codec" ];
          }
          {
            name = "void";
            packageId = "void";
          }
          {
            name = "wasm-timer";
            packageId = "wasm-timer";
          }
        ];
        buildDependencies = [
          {
            name = "prost-build";
            packageId = "prost-build 0.7.0";
          }
        ];

      };
      "libp2p-request-response" = rec {
        crateName = "libp2p-request-response";
        version = "0.11.0";
        edition = "2018";
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/heliaxdev/rust-libp2p.git";
          rev = "1abe349c231eb307d3dbe03f3ffffc6cf5e9084d";
          sha256 = "03qa49kbx0ylnc1qp2swr0ffy7nli954nbfqkm346s3iysj0mdgw";
        };
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "async-trait";
            packageId = "async-trait";
          }
          {
            name = "bytes";
            packageId = "bytes 1.1.0";
          }
          {
            name = "futures";
            packageId = "futures 0.3.19";
          }
          {
            name = "libp2p-core";
            packageId = "libp2p-core";
          }
          {
            name = "libp2p-swarm";
            packageId = "libp2p-swarm";
          }
          {
            name = "log";
            packageId = "log 0.4.14";
          }
          {
            name = "lru";
            packageId = "lru";
          }
          {
            name = "minicbor";
            packageId = "minicbor";
            features = [ "std" "derive" ];
          }
          {
            name = "rand";
            packageId = "rand 0.7.3";
          }
          {
            name = "smallvec";
            packageId = "smallvec 1.8.0";
          }
          {
            name = "unsigned-varint";
            packageId = "unsigned-varint 0.7.1";
            features = [ "std" "futures" ];
          }
          {
            name = "wasm-timer";
            packageId = "wasm-timer";
          }
        ];
        devDependencies = [
          {
            name = "rand";
            packageId = "rand 0.7.3";
          }
        ];

      };
      "libp2p-swarm" = rec {
        crateName = "libp2p-swarm";
        version = "0.29.0";
        edition = "2018";
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/heliaxdev/rust-libp2p.git";
          rev = "1abe349c231eb307d3dbe03f3ffffc6cf5e9084d";
          sha256 = "03qa49kbx0ylnc1qp2swr0ffy7nli954nbfqkm346s3iysj0mdgw";
        };
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "either";
            packageId = "either";
          }
          {
            name = "futures";
            packageId = "futures 0.3.19";
          }
          {
            name = "libp2p-core";
            packageId = "libp2p-core";
          }
          {
            name = "log";
            packageId = "log 0.4.14";
          }
          {
            name = "rand";
            packageId = "rand 0.7.3";
          }
          {
            name = "smallvec";
            packageId = "smallvec 1.8.0";
          }
          {
            name = "void";
            packageId = "void";
          }
          {
            name = "wasm-timer";
            packageId = "wasm-timer";
          }
        ];
        devDependencies = [
          {
            name = "rand";
            packageId = "rand 0.7.3";
          }
        ];

      };
      "libp2p-swarm-derive" = rec {
        crateName = "libp2p-swarm-derive";
        version = "0.23.0";
        edition = "2018";
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/heliaxdev/rust-libp2p.git";
          rev = "1abe349c231eb307d3dbe03f3ffffc6cf5e9084d";
          sha256 = "03qa49kbx0ylnc1qp2swr0ffy7nli954nbfqkm346s3iysj0mdgw";
        };
        procMacro = true;
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "quote";
            packageId = "quote";
          }
          {
            name = "syn";
            packageId = "syn";
            usesDefaultFeatures = false;
            features = [ "clone-impls" "derive" "parsing" "printing" "proc-macro" ];
          }
        ];

      };
      "libp2p-tcp" = rec {
        crateName = "libp2p-tcp";
        version = "0.28.0";
        edition = "2018";
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/heliaxdev/rust-libp2p.git";
          rev = "1abe349c231eb307d3dbe03f3ffffc6cf5e9084d";
          sha256 = "03qa49kbx0ylnc1qp2swr0ffy7nli954nbfqkm346s3iysj0mdgw";
        };
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "async-io";
            packageId = "async-io";
            rename = "async-io-crate";
            optional = true;
          }
          {
            name = "futures";
            packageId = "futures 0.3.19";
          }
          {
            name = "futures-timer";
            packageId = "futures-timer";
          }
          {
            name = "if-watch";
            packageId = "if-watch";
            optional = true;
          }
          {
            name = "ipnet";
            packageId = "ipnet";
          }
          {
            name = "libc";
            packageId = "libc";
          }
          {
            name = "libp2p-core";
            packageId = "libp2p-core";
          }
          {
            name = "log";
            packageId = "log 0.4.14";
          }
          {
            name = "socket2";
            packageId = "socket2 0.4.2";
            features = [ "all" ];
          }
        ];
        features = {
          "async-io" = [ "async-io-crate" "if-watch" ];
          "default" = [ "async-io" ];
          "tokio" = [ "tokio-crate" "if-addrs" ];
        };
        resolvedDefaultFeatures = [ "async-io" "async-io-crate" "if-watch" ];
      };
      "libp2p-uds" = rec {
        crateName = "libp2p-uds";
        version = "0.28.0";
        edition = "2018";
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/heliaxdev/rust-libp2p.git";
          rev = "1abe349c231eb307d3dbe03f3ffffc6cf5e9084d";
          sha256 = "03qa49kbx0ylnc1qp2swr0ffy7nli954nbfqkm346s3iysj0mdgw";
        };
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "async-std";
            packageId = "async-std";
            optional = true;
            target = { target, features }: ((target."unix" or false) && (!(target."os" == "emscripten")));
          }
          {
            name = "futures";
            packageId = "futures 0.3.19";
            target = { target, features }: ((target."unix" or false) && (!(target."os" == "emscripten")));
          }
          {
            name = "libp2p-core";
            packageId = "libp2p-core";
            target = { target, features }: ((target."unix" or false) && (!(target."os" == "emscripten")));
          }
          {
            name = "log";
            packageId = "log 0.4.14";
            target = { target, features }: ((target."unix" or false) && (!(target."os" == "emscripten")));
          }
        ];
        features = {
          "default" = [ "async-std" ];
        };
        resolvedDefaultFeatures = [ "async-std" "default" ];
      };
      "libp2p-wasm-ext" = rec {
        crateName = "libp2p-wasm-ext";
        version = "0.28.2";
        edition = "2018";
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/heliaxdev/rust-libp2p.git";
          rev = "1abe349c231eb307d3dbe03f3ffffc6cf5e9084d";
          sha256 = "03qa49kbx0ylnc1qp2swr0ffy7nli954nbfqkm346s3iysj0mdgw";
        };
        authors = [
          "Pierre Krieger <pierre.krieger1708@gmail.com>"
        ];
        dependencies = [
          {
            name = "futures";
            packageId = "futures 0.3.19";
          }
          {
            name = "js-sys";
            packageId = "js-sys";
          }
          {
            name = "libp2p-core";
            packageId = "libp2p-core";
          }
          {
            name = "parity-send-wrapper";
            packageId = "parity-send-wrapper";
          }
          {
            name = "wasm-bindgen";
            packageId = "wasm-bindgen";
          }
          {
            name = "wasm-bindgen-futures";
            packageId = "wasm-bindgen-futures";
          }
        ];
        features = {
        };
      };
      "libp2p-websocket" = rec {
        crateName = "libp2p-websocket";
        version = "0.29.0";
        edition = "2018";
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/heliaxdev/rust-libp2p.git";
          rev = "1abe349c231eb307d3dbe03f3ffffc6cf5e9084d";
          sha256 = "03qa49kbx0ylnc1qp2swr0ffy7nli954nbfqkm346s3iysj0mdgw";
        };
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "either";
            packageId = "either";
          }
          {
            name = "futures";
            packageId = "futures 0.3.19";
          }
          {
            name = "futures-rustls";
            packageId = "futures-rustls";
          }
          {
            name = "libp2p-core";
            packageId = "libp2p-core";
          }
          {
            name = "log";
            packageId = "log 0.4.14";
          }
          {
            name = "quicksink";
            packageId = "quicksink";
          }
          {
            name = "rw-stream-sink";
            packageId = "rw-stream-sink";
          }
          {
            name = "soketto";
            packageId = "soketto";
            features = [ "deflate" ];
          }
          {
            name = "url";
            packageId = "url 2.2.2";
          }
          {
            name = "webpki-roots";
            packageId = "webpki-roots";
          }
        ];

      };
      "libp2p-yamux" = rec {
        crateName = "libp2p-yamux";
        version = "0.32.0";
        edition = "2018";
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/heliaxdev/rust-libp2p.git";
          rev = "1abe349c231eb307d3dbe03f3ffffc6cf5e9084d";
          sha256 = "03qa49kbx0ylnc1qp2swr0ffy7nli954nbfqkm346s3iysj0mdgw";
        };
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "futures";
            packageId = "futures 0.3.19";
          }
          {
            name = "libp2p-core";
            packageId = "libp2p-core";
          }
          {
            name = "parking_lot";
            packageId = "parking_lot 0.11.2";
          }
          {
            name = "thiserror";
            packageId = "thiserror";
          }
          {
            name = "yamux";
            packageId = "yamux";
          }
        ];

      };
      "librocksdb-sys" = rec {
        crateName = "librocksdb-sys";
        version = "6.20.3";
        edition = "2018";
        sha256 = "0pd2kjxx4mv3nfk7b2w6jq2x4m3153sqq2aakbmsqi088z9aj2f3";
        authors = [
          "Karl Hobley <karlhobley10@gmail.com>"
          "Arkadiy Paronyan <arkadiy@ethcore.io>"
        ];
        dependencies = [
          {
            name = "libc";
            packageId = "libc";
          }
        ];
        buildDependencies = [
          {
            name = "bindgen";
            packageId = "bindgen";
            usesDefaultFeatures = false;
            features = [ "runtime" ];
          }
          {
            name = "cc";
            packageId = "cc";
            features = [ "parallel" ];
          }
          {
            name = "glob";
            packageId = "glob";
          }
        ];
        features = {
          "default" = [ "static" ];
        };
        resolvedDefaultFeatures = [ "bzip2" "default" "lz4" "snappy" "static" "zlib" "zstd" ];
      };
      "libsecp256k1" = rec {
        crateName = "libsecp256k1";
        version = "0.3.5";
        edition = "2018";
        sha256 = "0qkrmqj55zginqyvhs6ciwy6lcylzm94f1x2dpf666j8134f5h8z";
        libName = "secp256k1";
        authors = [
          "Wei Tang <hi@that.world>"
        ];
        dependencies = [
          {
            name = "arrayref";
            packageId = "arrayref";
          }
          {
            name = "crunchy";
            packageId = "crunchy";
          }
          {
            name = "digest";
            packageId = "digest 0.8.1";
          }
          {
            name = "hmac-drbg";
            packageId = "hmac-drbg";
            optional = true;
          }
          {
            name = "rand";
            packageId = "rand 0.7.3";
            usesDefaultFeatures = false;
          }
          {
            name = "sha2";
            packageId = "sha2 0.8.2";
            optional = true;
            usesDefaultFeatures = false;
          }
          {
            name = "subtle";
            packageId = "subtle 2.4.1";
            usesDefaultFeatures = false;
          }
          {
            name = "typenum";
            packageId = "typenum";
            optional = true;
          }
        ];
        features = {
          "default" = [ "std" "hmac" ];
          "hmac" = [ "hmac-drbg" "sha2" "typenum" ];
          "std" = [ "subtle/std" "rand/std" "sha2/std" ];
        };
        resolvedDefaultFeatures = [ "default" "hmac" "hmac-drbg" "sha2" "std" "typenum" ];
      };
      "libssh2-sys" = rec {
        crateName = "libssh2-sys";
        version = "0.2.23";
        edition = "2015";
        sha256 = "1jplndqhlsygjmsni1ydb4zbw0j5jjr47bmqnjkwif5qnipa755h";
        libName = "libssh2_sys";
        libPath = "lib.rs";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
          "Wez Furlong <wez@wezfurlong.org>"
          "Matteo Bigoi <bigo@crisidev.org>"
        ];
        dependencies = [
          {
            name = "libc";
            packageId = "libc";
          }
          {
            name = "libz-sys";
            packageId = "libz-sys";
            usesDefaultFeatures = false;
            features = [ "libc" ];
          }
          {
            name = "openssl-sys";
            packageId = "openssl-sys";
            target = { target, features }: (target."unix" or false);
          }
          {
            name = "openssl-sys";
            packageId = "openssl-sys";
            optional = true;
            target = { target, features }: (target."windows" or false);
          }
        ];
        buildDependencies = [
          {
            name = "cc";
            packageId = "cc";
          }
          {
            name = "pkg-config";
            packageId = "pkg-config";
          }
          {
            name = "vcpkg";
            packageId = "vcpkg";
            target = {target, features}: (target."env" == "msvc");
          }
        ];
        features = {
          "openssl-on-win32" = [ "openssl-sys" ];
          "vendored-openssl" = [ "openssl-sys/vendored" ];
          "zlib-ng-compat" = [ "libz-sys/zlib-ng" ];
        };
      };
      "libz-sys" = rec {
        crateName = "libz-sys";
        version = "1.1.3";
        edition = "2015";
        sha256 = "0rpcxkccjn8da9114kvl8hrnrkspzsmdn0qcxlix85lwajw3am6y";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
          "Josh Triplett <josh@joshtriplett.org>"
        ];
        dependencies = [
          {
            name = "libc";
            packageId = "libc";
            optional = true;
          }
        ];
        buildDependencies = [
          {
            name = "cc";
            packageId = "cc";
          }
          {
            name = "pkg-config";
            packageId = "pkg-config";
          }
          {
            name = "vcpkg";
            packageId = "vcpkg";
            target = {target, features}: (target."env" == "msvc");
          }
        ];
        features = {
          "default" = [ "libc" "stock-zlib" ];
          "zlib-ng" = [ "libc" "cmake" ];
        };
        resolvedDefaultFeatures = [ "libc" ];
      };
      "linked-hash-map" = rec {
        crateName = "linked-hash-map";
        version = "0.5.4";
        edition = "2015";
        sha256 = "1ww8zsraqnvrsknd315481185igwkx5n14xnhq5i8216z65b7fbz";
        authors = [
          "Stepan Koltsov <stepan.koltsov@gmail.com>"
          "Andrew Paseltiner <apaseltiner@gmail.com>"
        ];
        dependencies = [
          {
            name = "serde";
            packageId = "serde 1.0.136";
            optional = true;
          }
          {
            name = "serde_test";
            packageId = "serde_test";
            optional = true;
          }
        ];
        features = {
          "heapsize_impl" = [ "heapsize" ];
          "serde_impl" = [ "serde" "serde_test" ];
        };
        resolvedDefaultFeatures = [ "serde" "serde_impl" "serde_test" ];
      };
      "lock_api 0.3.4" = rec {
        crateName = "lock_api";
        version = "0.3.4";
        edition = "2018";
        sha256 = "0xgc5dzmajh0akbh5d6d7rj9mh5rzpk74pyrc946v2ixgakj9nn4";
        authors = [
          "Amanieu d'Antras <amanieu@gmail.com>"
        ];
        dependencies = [
          {
            name = "scopeguard";
            packageId = "scopeguard";
            usesDefaultFeatures = false;
          }
        ];
        features = {
        };
      };
      "lock_api 0.4.6" = rec {
        crateName = "lock_api";
        version = "0.4.6";
        edition = "2018";
        sha256 = "0frbbqqiwngg33xrc69xagi4rqqk62msllr7z95mlbjaxzbkv548";
        authors = [
          "Amanieu d'Antras <amanieu@gmail.com>"
        ];
        dependencies = [
          {
            name = "scopeguard";
            packageId = "scopeguard";
            usesDefaultFeatures = false;
          }
        ];
        features = {
        };
      };
      "log 0.3.9" = rec {
        crateName = "log";
        version = "0.3.9";
        edition = "2015";
        sha256 = "0jq23hhn5h35k7pa8r7wqnsywji6x3wn1q5q7lif5q536if8v7p1";
        authors = [
          "The Rust Project Developers"
        ];
        dependencies = [
          {
            name = "log";
            packageId = "log 0.4.14";
          }
        ];
        features = {
          "default" = [ "use_std" ];
          "max_level_debug" = [ "log/max_level_debug" ];
          "max_level_error" = [ "log/max_level_error" ];
          "max_level_info" = [ "log/max_level_info" ];
          "max_level_off" = [ "log/max_level_off" ];
          "max_level_trace" = [ "log/max_level_trace" ];
          "max_level_warn" = [ "log/max_level_warn" ];
          "release_max_level_debug" = [ "log/release_max_level_debug" ];
          "release_max_level_error" = [ "log/release_max_level_error" ];
          "release_max_level_info" = [ "log/release_max_level_info" ];
          "release_max_level_off" = [ "log/release_max_level_off" ];
          "release_max_level_trace" = [ "log/release_max_level_trace" ];
          "release_max_level_warn" = [ "log/release_max_level_warn" ];
          "use_std" = [ "log/std" ];
        };
        resolvedDefaultFeatures = [ "default" "use_std" ];
      };
      "log 0.4.14" = rec {
        crateName = "log";
        version = "0.4.14";
        edition = "2015";
        sha256 = "04175hv0v62shd82qydq58a48k3bjijmk54v38zgqlbxqkkbpfai";
        authors = [
          "The Rust Project Developers"
        ];
        dependencies = [
          {
            name = "cfg-if";
            packageId = "cfg-if 1.0.0";
          }
          {
            name = "value-bag";
            packageId = "value-bag";
            optional = true;
            usesDefaultFeatures = false;
          }
        ];
        devDependencies = [
          {
            name = "value-bag";
            packageId = "value-bag";
            features = [ "test" ];
          }
        ];
        features = {
          "kv_unstable" = [ "value-bag" ];
          "kv_unstable_serde" = [ "kv_unstable_std" "value-bag/serde" "serde" ];
          "kv_unstable_std" = [ "std" "kv_unstable" "value-bag/error" ];
          "kv_unstable_sval" = [ "kv_unstable" "value-bag/sval" "sval" ];
        };
        resolvedDefaultFeatures = [ "kv_unstable" "std" "value-bag" ];
      };
      "loupe" = rec {
        crateName = "loupe";
        version = "0.1.3";
        edition = "2018";
        sha256 = "0kb3bc62xh20i405afr8bf65m6gznbp0fhxrfrg5pqaglkgp4slv";
        dependencies = [
          {
            name = "indexmap";
            packageId = "indexmap";
            optional = true;
          }
          {
            name = "loupe-derive";
            packageId = "loupe-derive";
            optional = true;
          }
          {
            name = "rustversion";
            packageId = "rustversion";
          }
        ];
        features = {
          "default" = [ "derive" ];
          "derive" = [ "loupe-derive" ];
          "enable-indexmap" = [ "indexmap" ];
        };
        resolvedDefaultFeatures = [ "default" "derive" "enable-indexmap" "indexmap" "loupe-derive" ];
      };
      "loupe-derive" = rec {
        crateName = "loupe-derive";
        version = "0.1.3";
        edition = "2018";
        sha256 = "0ljrdhp4yk87xnbdq53f679yzm7yghanxq4s5sgjfs3i6f4gryy0";
        procMacro = true;
        dependencies = [
          {
            name = "quote";
            packageId = "quote";
          }
          {
            name = "syn";
            packageId = "syn";
            features = [ "full" ];
          }
        ];

      };
      "lru" = rec {
        crateName = "lru";
        version = "0.6.6";
        edition = "2015";
        sha256 = "14dsf7345kwb8fg75dmkywkjpchxc9yxkwng124nwhc5nhldk8ky";
        authors = [
          "Jerome Froelich <jeromefroelic@hotmail.com>"
        ];
        dependencies = [
          {
            name = "hashbrown";
            packageId = "hashbrown";
            optional = true;
          }
        ];
        features = {
          "default" = [ "hashbrown" ];
          "nightly" = [ "hashbrown" "hashbrown/nightly" ];
        };
        resolvedDefaultFeatures = [ "default" "hashbrown" ];
      };
      "lru-cache" = rec {
        crateName = "lru-cache";
        version = "0.1.2";
        edition = "2015";
        sha256 = "071viv6g2p3akwqmfb3c8vsycs5n7kr17b70l7la071jv0d4zqii";
        authors = [
          "Stepan Koltsov <stepan.koltsov@gmail.com>"
        ];
        dependencies = [
          {
            name = "linked-hash-map";
            packageId = "linked-hash-map";
          }
        ];
        features = {
          "heapsize_impl" = [ "heapsize" "linked-hash-map/heapsize_impl" ];
        };
      };
      "mach" = rec {
        crateName = "mach";
        version = "0.3.2";
        edition = "2015";
        sha256 = "1yksa8lwzqh150gr4417rls1wk20asy9vhp8kq5g9n7z58xyh8xq";
        authors = [
          "Nick Fitzgerald <fitzgen@gmail.com>"
          "David Cuddeback <david.cuddeback@gmail.com>"
          "Gonzalo Brito Gadeschi <gonzalobg88@gmail.com>"
        ];
        dependencies = [
          {
            name = "libc";
            packageId = "libc";
            usesDefaultFeatures = false;
            target = { target, features }: ((target."os" == "macos") || (target."os" == "ios"));
          }
        ];
        features = {
          "rustc-dep-of-std" = [ "rustc-std-workspace-core" "libc/rustc-dep-of-std" ];
        };
        resolvedDefaultFeatures = [ "default" ];
      };
      "madato" = rec {
        crateName = "madato";
        version = "0.5.3";
        edition = "2015";
        sha256 = "01nwfgbx0safxjmvi04h7sb2hh2flxcnpr8h59fpmvi31dl14qf3";type = [ "rlib" ];
        authors = [
          "Ramon Buckland <ramon.buckland@inosion.com>"
        ];
        dependencies = [
          {
            name = "indexmap";
            packageId = "indexmap";
          }
          {
            name = "linked-hash-map";
            packageId = "linked-hash-map";
            features = [ "serde_impl" ];
          }
          {
            name = "regex";
            packageId = "regex";
          }
          {
            name = "serde";
            packageId = "serde 1.0.136";
          }
          {
            name = "serde_derive";
            packageId = "serde_derive";
          }
          {
            name = "serde_yaml";
            packageId = "serde_yaml";
          }
        ];

      };
      "match_cfg" = rec {
        crateName = "match_cfg";
        version = "0.1.0";
        edition = "2015";
        sha256 = "1r5j3zqc3qr8ybcx95bk8q57mkizmgmffj5lmicd4i8d9riyigpz";
        authors = [
          "gnzlbg <gonzalobg88@gmail.com>"
        ];
        features = {
          "default" = [ "use_core" ];
        };
        resolvedDefaultFeatures = [ "default" "use_core" ];
      };
      "matchers" = rec {
        crateName = "matchers";
        version = "0.1.0";
        edition = "2018";
        sha256 = "0n2mbk7lg2vf962c8xwzdq96yrc9i0p8dbmm4wa1nnkcp1dhfqw2";
        authors = [
          "Eliza Weisman <eliza@buoyant.io>"
        ];
        dependencies = [
          {
            name = "regex-automata";
            packageId = "regex-automata";
          }
        ];

      };
      "matches" = rec {
        crateName = "matches";
        version = "0.1.9";
        edition = "2015";
        sha256 = "0gw5ib38jfgyyah8nyyxr036grqv1arkf1srgfa4h386dav7iqx3";
        libPath = "lib.rs";
        authors = [
          "Simon Sapin <simon.sapin@exyr.org>"
        ];

      };
      "matrixmultiply" = rec {
        crateName = "matrixmultiply";
        version = "0.2.4";
        edition = "2015";
        sha256 = "1hc4vp19x823xgkm374wsxnzmqbjhmyaj5nr0lhm9k9i02x0cs4i";
        authors = [
          "bluss"
          "R. Janis Goldschmidt"
        ];
        dependencies = [
          {
            name = "rawpointer";
            packageId = "rawpointer";
          }
        ];
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "maybe-uninit" = rec {
        crateName = "maybe-uninit";
        version = "2.0.0";
        edition = "2015";
        sha256 = "004y0nzmpfdrhz251278341z6ql34iv1k6dp1h6af7d6nd6jwc30";
        authors = [
          "est31 <MTest31@outlook.com>"
          "The Rust Project Developers"
        ];

      };
      "measure_time" = rec {
        crateName = "measure_time";
        version = "0.8.0";
        edition = "2015";
        sha256 = "1ydxap267y2fyjq1k2xlngfsfvpywfsg07gm48v2nmnqh1j9c1sz";
        authors = [
          "Pascal Seitz <pascal.seitz@gmail.com>"
        ];
        dependencies = [
          {
            name = "log";
            packageId = "log 0.4.14";
          }
        ];

      };
      "memchr" = rec {
        crateName = "memchr";
        version = "2.4.1";
        edition = "2018";
        sha256 = "0smq8xzd40njqpfzv5mghigj91fzlfrfg842iz8x0wqvw2dw731h";
        authors = [
          "Andrew Gallant <jamslam@gmail.com>"
          "bluss"
        ];
        features = {
          "default" = [ "std" ];
          "rustc-dep-of-std" = [ "core" "compiler_builtins" ];
          "use_std" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" "use_std" ];
      };
      "memmap2" = rec {
        crateName = "memmap2";
        version = "0.5.2";
        edition = "2018";
        sha256 = "0vf5h5mdarn3zq5mz4hvahph18a5bsvsvsyb8x2b3n0zbsw7jcgy";
        authors = [
          "Dan Burkert <dan@danburkert.com>"
          "Yevhenii Reizner <razrfalcon@gmail.com>"
        ];
        dependencies = [
          {
            name = "libc";
            packageId = "libc";
            target = { target, features }: (target."unix" or false);
          }
        ];

      };
      "memoffset" = rec {
        crateName = "memoffset";
        version = "0.6.5";
        edition = "2015";
        sha256 = "1kkrzll58a3ayn5zdyy9i1f1v3mx0xgl29x0chq614zazba638ss";
        authors = [
          "Gilad Naaman <gilad.naaman@gmail.com>"
        ];
        buildDependencies = [
          {
            name = "autocfg";
            packageId = "autocfg 1.0.1";
          }
        ];
        features = {
        };
        resolvedDefaultFeatures = [ "default" ];
      };
      "merlin" = rec {
        crateName = "merlin";
        version = "2.0.1";
        edition = "2018";
        sha256 = "0hivklid2gzwz6179g0wiay55ah3xafvaavxkznjvi5kz3q1q9jf";
        authors = [
          "Henry de Valence <hdevalence@hdevalence.ca>"
        ];
        dependencies = [
          {
            name = "byteorder";
            packageId = "byteorder";
            usesDefaultFeatures = false;
          }
          {
            name = "keccak";
            packageId = "keccak";
            usesDefaultFeatures = false;
          }
          {
            name = "rand_core";
            packageId = "rand_core 0.5.1";
            usesDefaultFeatures = false;
          }
          {
            name = "zeroize";
            packageId = "zeroize";
            usesDefaultFeatures = false;
            features = [ "zeroize_derive" ];
          }
        ];
        features = {
          "debug-transcript" = [ "hex" ];
          "default" = [ "std" ];
          "std" = [ "rand_core/std" "byteorder/std" ];
        };
      };
      "message-io" = rec {
        crateName = "message-io";
        version = "0.14.3";
        edition = "2018";
        sha256 = "19cfbzmmyjdwdgxrczpz9ibsdap0083yxxz54fxshrvqap1wpnp9";
        authors = [
          "lemunozm <lemunozm@gmail.com>"
        ];
        dependencies = [
          {
            name = "crossbeam-channel";
            packageId = "crossbeam-channel 0.5.2";
          }
          {
            name = "crossbeam-utils";
            packageId = "crossbeam-utils 0.8.6";
          }
          {
            name = "integer-encoding";
            packageId = "integer-encoding";
          }
          {
            name = "lazy_static";
            packageId = "lazy_static 1.4.0";
          }
          {
            name = "log";
            packageId = "log 0.4.14";
          }
          {
            name = "mio";
            packageId = "mio 0.7.14";
            features = [ "os-poll" ];
          }
          {
            name = "serde";
            packageId = "serde 1.0.136";
            features = [ "derive" ];
          }
          {
            name = "strum";
            packageId = "strum";
            features = [ "derive" ];
          }
          {
            name = "tungstenite";
            packageId = "tungstenite 0.16.0";
            optional = true;
          }
          {
            name = "url";
            packageId = "url 2.2.2";
            optional = true;
          }
        ];
        features = {
          "default" = [ "tcp" "udp" "websocket" ];
          "tcp" = [ "mio/tcp" ];
          "udp" = [ "mio/udp" "socket2" ];
          "websocket" = [ "tungstenite" "url" "tcp" ];
        };
        resolvedDefaultFeatures = [ "tcp" "tungstenite" "url" "websocket" ];
      };
      "mime 0.2.6" = rec {
        crateName = "mime";
        version = "0.2.6";
        edition = "2015";
        sha256 = "1q1s1ax1gaz8ld3513nvhidfwnik5asbs1ma3hp6inp5dn56nqms";
        authors = [
          "Sean McArthur <sean.monstar@gmail.com>"
        ];
        dependencies = [
          {
            name = "log";
            packageId = "log 0.3.9";
          }
        ];
        features = {
          "heap_size" = [ "heapsize" ];
        };
      };
      "mime 0.3.16" = rec {
        crateName = "mime";
        version = "0.3.16";
        edition = "2015";
        sha256 = "13dcm9lh01hdwfjcg74ppljyjfj1c6w3a3cwkhxf0w8wa37cfq1a";
        authors = [
          "Sean McArthur <sean@seanmonstar.com>"
        ];

      };
      "minicbor" = rec {
        crateName = "minicbor";
        version = "0.8.1";
        edition = "2018";
        crateBin = [];
        sha256 = "03fahp9aa4jk6alpza0q4cdsv07q0ysjg8lnlnn5sh92raq5paji";
        authors = [
          "Toralf Wittner <tw@dtex.org>"
        ];
        dependencies = [
          {
            name = "minicbor-derive";
            packageId = "minicbor-derive";
            optional = true;
          }
        ];
        features = {
          "derive" = [ "minicbor-derive" ];
        };
        resolvedDefaultFeatures = [ "derive" "minicbor-derive" "std" ];
      };
      "minicbor-derive" = rec {
        crateName = "minicbor-derive";
        version = "0.6.4";
        edition = "2018";
        sha256 = "12670s0cs7a6md5qxdjxca6vicm239ijczkk0hwv34nhgj8rz6al";
        procMacro = true;
        authors = [
          "Toralf Wittner <tw@dtex.org>"
        ];
        dependencies = [
          {
            name = "proc-macro2";
            packageId = "proc-macro2";
          }
          {
            name = "quote";
            packageId = "quote";
          }
          {
            name = "syn";
            packageId = "syn";
            features = [ "extra-traits" "visit" ];
          }
        ];

      };
      "minilp" = rec {
        crateName = "minilp";
        version = "0.2.2";
        edition = "2018";
        sha256 = "11akzlc4whwi508qsg46p41g9gsdgd2ydidynxhccxjhkq57b9w2";
        authors = [
          "Alexey Zatelepin <alex.zatelepin@gmail.com>"
        ];
        dependencies = [
          {
            name = "log";
            packageId = "log 0.4.14";
          }
          {
            name = "sprs";
            packageId = "sprs";
            usesDefaultFeatures = false;
          }
        ];

      };
      "minimal-lexical" = rec {
        crateName = "minimal-lexical";
        version = "0.2.1";
        edition = "2018";
        sha256 = "16ppc5g84aijpri4jzv14rvcnslvlpphbszc7zzp6vfkddf4qdb8";
        authors = [
          "Alex Huszagh <ahuszagh@gmail.com>"
        ];
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "std" ];
      };
      "miniz_oxide" = rec {
        crateName = "miniz_oxide";
        version = "0.4.4";
        edition = "2018";
        sha256 = "0jsfv00hl5rmx1nijn59sr9jmjd4rjnjhh4kdjy8d187iklih9d9";
        authors = [
          "Frommi <daniil.liferenko@gmail.com>"
          "oyvindln <oyvindln@users.noreply.github.com>"
        ];
        dependencies = [
          {
            name = "adler";
            packageId = "adler";
            usesDefaultFeatures = false;
          }
        ];
        buildDependencies = [
          {
            name = "autocfg";
            packageId = "autocfg 1.0.1";
          }
        ];
        features = {
          "rustc-dep-of-std" = [ "core" "alloc" "compiler_builtins" "adler/rustc-dep-of-std" ];
        };
      };
      "mio 0.6.23" = rec {
        crateName = "mio";
        version = "0.6.23";
        edition = "2015";
        sha256 = "1i2c1vl8lr45apkh8xbh9k56ihfsmqff5l7s2fya7whvp7sndzaa";
        authors = [
          "Carl Lerche <me@carllerche.com>"
        ];
        dependencies = [
          {
            name = "cfg-if";
            packageId = "cfg-if 0.1.10";
          }
          {
            name = "fuchsia-zircon";
            packageId = "fuchsia-zircon";
            target = { target, features }: (target."os" == "fuchsia");
          }
          {
            name = "fuchsia-zircon-sys";
            packageId = "fuchsia-zircon-sys";
            target = { target, features }: (target."os" == "fuchsia");
          }
          {
            name = "iovec";
            packageId = "iovec";
          }
          {
            name = "kernel32-sys";
            packageId = "kernel32-sys";
            target = { target, features }: (target."windows" or false);
          }
          {
            name = "libc";
            packageId = "libc";
            target = { target, features }: (target."unix" or false);
          }
          {
            name = "log";
            packageId = "log 0.4.14";
          }
          {
            name = "miow";
            packageId = "miow 0.2.2";
            target = { target, features }: (target."windows" or false);
          }
          {
            name = "net2";
            packageId = "net2";
          }
          {
            name = "slab";
            packageId = "slab";
          }
          {
            name = "winapi";
            packageId = "winapi 0.2.8";
            target = { target, features }: (target."windows" or false);
          }
        ];
        features = {
          "default" = [ "with-deprecated" ];
        };
        resolvedDefaultFeatures = [ "default" "with-deprecated" ];
      };
      "mio 0.7.14" = rec {
        crateName = "mio";
        version = "0.7.14";
        edition = "2018";
        sha256 = "1k05cah6zdww6i2qc7gaxbbja4ppyjycipl2y0lhiiwpzq2b8rw0";
        authors = [
          "Carl Lerche <me@carllerche.com>"
          "Thomas de Zeeuw <thomasdezeeuw@gmail.com>"
          "Tokio Contributors <team@tokio.rs>"
        ];
        dependencies = [
          {
            name = "libc";
            packageId = "libc";
            target = { target, features }: (target."unix" or false);
          }
          {
            name = "log";
            packageId = "log 0.4.14";
          }
          {
            name = "miow";
            packageId = "miow 0.3.7";
            target = { target, features }: (target."windows" or false);
          }
          {
            name = "ntapi";
            packageId = "ntapi";
            target = { target, features }: (target."windows" or false);
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.9";
            target = { target, features }: (target."windows" or false);
            features = [ "winsock2" "mswsock" "mstcpip" ];
          }
        ];
        features = {
          "os-ext" = [ "os-poll" ];
          "os-util" = [ "os-ext" ];
          "pipe" = [ "os-ext" ];
          "tcp" = [ "net" ];
          "udp" = [ "net" ];
          "uds" = [ "net" ];
        };
        resolvedDefaultFeatures = [ "default" "net" "os-ext" "os-poll" "os-util" "tcp" "udp" "uds" ];
      };
      "mio-extras" = rec {
        crateName = "mio-extras";
        version = "2.0.6";
        edition = "2018";
        sha256 = "069gfhlv0wlwfx1k2sriwfws490kjp490rv2qivyfb01j3i3yh2j";
        authors = [
          "Carl Lerche <me@carllerche.com>"
          "David Hotham"
        ];
        dependencies = [
          {
            name = "lazycell";
            packageId = "lazycell";
          }
          {
            name = "log";
            packageId = "log 0.4.14";
          }
          {
            name = "mio";
            packageId = "mio 0.6.23";
          }
          {
            name = "slab";
            packageId = "slab";
          }
        ];

      };
      "miow 0.2.2" = rec {
        crateName = "miow";
        version = "0.2.2";
        edition = "2015";
        sha256 = "0kcl8rnv0bhiarcdakik670w8fnxzlxhi1ys7152sck68510in7b";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        dependencies = [
          {
            name = "kernel32-sys";
            packageId = "kernel32-sys";
          }
          {
            name = "net2";
            packageId = "net2";
            usesDefaultFeatures = false;
          }
          {
            name = "winapi";
            packageId = "winapi 0.2.8";
          }
          {
            name = "ws2_32-sys";
            packageId = "ws2_32-sys";
          }
        ];

      };
      "miow 0.3.7" = rec {
        crateName = "miow";
        version = "0.3.7";
        edition = "2018";
        sha256 = "08afp2xfpxmdw003111lxz6g9jgbj4zi2fpldvv7da6d4nqcbwdr";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        dependencies = [
          {
            name = "winapi";
            packageId = "winapi 0.3.9";
            features = [ "std" "fileapi" "handleapi" "ioapiset" "minwindef" "namedpipeapi" "ntdef" "synchapi" "winerror" "winsock2" "ws2def" "ws2ipdef" ];
          }
        ];

      };
      "miracl_core" = rec {
        crateName = "miracl_core";
        version = "2.3.0";
        edition = "2018";
        crateBin = [];
        sha256 = "0xsjcp6zrp8gvnjbh53flm2fz2agclbhzfa1253zd09wla5i5iwl";
        authors = [
          "lovesh <lovesh.bond@gmail.com>"
        ];
        features = {
          "default" = [ "bls12381" ];
        };
        resolvedDefaultFeatures = [ "bls12381" "default" ];
      };
      "mktemp" = rec {
        crateName = "mktemp";
        version = "0.4.1";
        edition = "2015";
        sha256 = "18hd84l7k7i1mbjylagwg1miczh78cjrs55r0kggqcc28ivfcpcp";
        authors = [
          "Sam Giles <sam.e.giles@gmail.com>"
        ];
        dependencies = [
          {
            name = "uuid";
            packageId = "uuid";
            features = [ "v4" ];
          }
        ];

      };
      "mm_template" = rec {
        crateName = "mm_template";
        version = "0.5.0";
        edition = "2021";
        src = lib.cleanSourceWith { filter = sourceFilter;  src = ../matchmaker/mm_template; };type = [ "dylib" ];
        authors = [
          "Heliax AG <hello@heliax.dev>"
        ];
        dependencies = [
          {
            name = "anoma";
            packageId = "anoma";
            usesDefaultFeatures = false;
          }
          {
            name = "anoma_macros";
            packageId = "anoma_macros";
          }
          {
            name = "tokio";
            packageId = "tokio";
            features = [ "sync" ];
          }
        ];
        features = {
          "ABCI" = [ "anoma/ABCI" "anoma/ibc-vp-abci" ];
          "default" = [ "ABCI" ];
        };
        resolvedDefaultFeatures = [ "ABCI" "default" ];
      };
      "mm_token_exch" = rec {
        crateName = "mm_token_exch";
        version = "0.5.0";
        edition = "2021";
        src = lib.cleanSourceWith { filter = sourceFilter;  src = ../matchmaker/mm_token_exch; };type = [ "dylib" ];
        authors = [
          "Heliax AG <hello@heliax.dev>"
        ];
        dependencies = [
          {
            name = "anoma";
            packageId = "anoma";
            usesDefaultFeatures = false;
          }
          {
            name = "anoma_macros";
            packageId = "anoma_macros";
          }
          {
            name = "borsh";
            packageId = "borsh";
          }
          {
            name = "good_lp";
            packageId = "good_lp";
            usesDefaultFeatures = false;
            features = [ "minilp" ];
          }
          {
            name = "petgraph";
            packageId = "petgraph 0.5.1";
            features = [ "serde-1" ];
          }
          {
            name = "rust_decimal";
            packageId = "rust_decimal";
          }
          {
            name = "serde";
            packageId = "serde 1.0.136";
          }
          {
            name = "serde_json";
            packageId = "serde_json";
          }
          {
            name = "tokio";
            packageId = "tokio";
            features = [ "sync" ];
          }
        ];
        features = {
          "ABCI" = [ "anoma/ABCI" "anoma/ibc-vp-abci" ];
          "default" = [ "ABCI" ];
        };
        resolvedDefaultFeatures = [ "ABCI" "default" ];
      };
      "more-asserts" = rec {
        crateName = "more-asserts";
        version = "0.2.2";
        edition = "2015";
        sha256 = "12b3fypg2sr4qmxy6wiyx6k9sdg573f5ij98cdmbrg00whnyqhvq";
        authors = [
          "Thom Chiovoloni <chiovolonit@gmail.com>"
        ];

      };
      "multihash" = rec {
        crateName = "multihash";
        version = "0.13.2";
        edition = "2018";
        sha256 = "1avwzd4pz71gnbfl1b2glbw1yhv06yv4ish6jf92szc8idln7b2d";
        authors = [
          "dignifiedquire <dignifiedquire@gmail.com>"
          "David Craven <david@craven.ch>"
          "Volker Mische <volker.mische@gmail.com>"
        ];
        dependencies = [
          {
            name = "digest";
            packageId = "digest 0.9.0";
            optional = true;
            usesDefaultFeatures = false;
          }
          {
            name = "generic-array";
            packageId = "generic-array 0.14.5";
          }
          {
            name = "multihash-derive";
            packageId = "multihash-derive";
            optional = true;
            usesDefaultFeatures = false;
          }
          {
            name = "sha2";
            packageId = "sha2 0.9.9";
            rename = "sha-2";
            optional = true;
            usesDefaultFeatures = false;
          }
          {
            name = "unsigned-varint";
            packageId = "unsigned-varint 0.5.1";
          }
        ];
        features = {
          "arb" = [ "quickcheck" "rand" ];
          "blake2b" = [ "blake2b_simd" ];
          "blake2s" = [ "blake2s_simd" ];
          "default" = [ "std" "derive" "multihash-impl" "secure-hashes" ];
          "derive" = [ "multihash-derive" ];
          "multihash-impl" = [ "derive" ];
          "scale-codec" = [ "parity-scale-codec" ];
          "secure-hashes" = [ "blake2b" "blake2s" "blake3" "sha2" "sha3" ];
          "serde-codec" = [ "serde" "generic-array/serde" ];
          "sha1" = [ "digest" "sha-1" ];
          "sha2" = [ "digest" "sha-2" ];
          "sha3" = [ "digest" "sha-3" ];
          "std" = [ "unsigned-varint/std" "multihash-derive/std" ];
          "strobe" = [ "strobe-rs" ];
        };
        resolvedDefaultFeatures = [ "derive" "digest" "identity" "multihash-derive" "multihash-impl" "sha-2" "sha2" "std" ];
      };
      "multihash-derive" = rec {
        crateName = "multihash-derive";
        version = "0.7.2";
        edition = "2018";
        sha256 = "16danj3slsqdlkjk3zvbsvha1b4mdds9a7kzpm62km9w4s36wks2";
        procMacro = true;
        authors = [
          "David Craven <david@craven.ch>"
        ];
        dependencies = [
          {
            name = "proc-macro-crate";
            packageId = "proc-macro-crate 1.1.0";
          }
          {
            name = "proc-macro-error";
            packageId = "proc-macro-error";
          }
          {
            name = "proc-macro2";
            packageId = "proc-macro2";
            features = [ "span-locations" ];
          }
          {
            name = "quote";
            packageId = "quote";
          }
          {
            name = "syn";
            packageId = "syn";
          }
          {
            name = "synstructure";
            packageId = "synstructure";
          }
        ];
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "std" ];
      };
      "multimap" = rec {
        crateName = "multimap";
        version = "0.8.3";
        edition = "2015";
        sha256 = "0sicyz4n500vdhgcxn4g8jz97cp1ijir1rnbgph3pmx9ckz4dkp5";
        authors = [
          "Håvar Nøvik <havar.novik@gmail.com>"
        ];
        features = {
          "default" = [ "serde_impl" ];
          "serde_impl" = [ "serde" ];
        };
      };
      "multistream-select" = rec {
        crateName = "multistream-select";
        version = "0.10.3";
        edition = "2018";
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/heliaxdev/rust-libp2p.git";
          rev = "1abe349c231eb307d3dbe03f3ffffc6cf5e9084d";
          sha256 = "03qa49kbx0ylnc1qp2swr0ffy7nli954nbfqkm346s3iysj0mdgw";
        };
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "bytes";
            packageId = "bytes 1.1.0";
          }
          {
            name = "futures";
            packageId = "futures 0.3.19";
          }
          {
            name = "log";
            packageId = "log 0.4.14";
          }
          {
            name = "pin-project";
            packageId = "pin-project 1.0.10";
          }
          {
            name = "smallvec";
            packageId = "smallvec 1.8.0";
          }
          {
            name = "unsigned-varint";
            packageId = "unsigned-varint 0.7.1";
          }
        ];

      };
      "native-tls" = rec {
        crateName = "native-tls";
        version = "0.2.8";
        edition = "2015";
        sha256 = "0kdj0drgp8cqk3v430c5ac7dfpzvhm1621w96cpz985m35vrzfj8";
        authors = [
          "Steven Fackler <sfackler@gmail.com>"
        ];
        dependencies = [
          {
            name = "lazy_static";
            packageId = "lazy_static 1.4.0";
            target = { target, features }: ((target."os" == "macos") || (target."os" == "ios"));
          }
          {
            name = "libc";
            packageId = "libc";
            target = { target, features }: ((target."os" == "macos") || (target."os" == "ios"));
          }
          {
            name = "log";
            packageId = "log 0.4.14";
            target = { target, features }: (!((target."os" == "windows") || (target."os" == "macos") || (target."os" == "ios")));
          }
          {
            name = "openssl";
            packageId = "openssl";
            target = { target, features }: (!((target."os" == "windows") || (target."os" == "macos") || (target."os" == "ios")));
          }
          {
            name = "openssl-probe";
            packageId = "openssl-probe";
            target = { target, features }: (!((target."os" == "windows") || (target."os" == "macos") || (target."os" == "ios")));
          }
          {
            name = "openssl-sys";
            packageId = "openssl-sys";
            target = { target, features }: (!((target."os" == "windows") || (target."os" == "macos") || (target."os" == "ios")));
          }
          {
            name = "schannel";
            packageId = "schannel";
            target = { target, features }: (target."os" == "windows");
          }
          {
            name = "security-framework";
            packageId = "security-framework";
            target = { target, features }: ((target."os" == "macos") || (target."os" == "ios"));
          }
          {
            name = "security-framework-sys";
            packageId = "security-framework-sys";
            target = { target, features }: ((target."os" == "macos") || (target."os" == "ios"));
          }
          {
            name = "tempfile";
            packageId = "tempfile";
            target = { target, features }: ((target."os" == "macos") || (target."os" == "ios"));
          }
        ];
        devDependencies = [
          {
            name = "tempfile";
            packageId = "tempfile";
          }
        ];
        features = {
          "alpn" = [ "security-framework/alpn" ];
          "vendored" = [ "openssl/vendored" ];
        };
      };
      "ndarray" = rec {
        crateName = "ndarray";
        version = "0.13.1";
        edition = "2018";
        sha256 = "02dbwj3b7d0cpy29nhw31n51h3cwm4s1q6narl7fwiigxh1xn1mc";
        authors = [
          "bluss"
          "Jim Turner"
        ];
        dependencies = [
          {
            name = "matrixmultiply";
            packageId = "matrixmultiply";
          }
          {
            name = "num-complex";
            packageId = "num-complex 0.2.4";
          }
          {
            name = "num-integer";
            packageId = "num-integer";
          }
          {
            name = "num-traits";
            packageId = "num-traits 0.2.14";
          }
          {
            name = "rawpointer";
            packageId = "rawpointer";
          }
        ];
        features = {
          "blas" = [ "cblas-sys" "blas-src" ];
          "docs" = [ "approx" "serde" "rayon" ];
          "serde-1" = [ "serde" ];
          "test" = [ "test-blas-openblas-sys" ];
          "test-blas-openblas-sys" = [ "blas" ];
        };
      };
      "net2" = rec {
        crateName = "net2";
        version = "0.2.37";
        edition = "2015";
        sha256 = "1bk8jp0i12gvhrlaqbfq19ancja70r1rg3sywbhjl0385g8k05ir";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        dependencies = [
          {
            name = "cfg-if";
            packageId = "cfg-if 0.1.10";
          }
          {
            name = "libc";
            packageId = "libc";
            target = { target, features }: ((target."os" == "redox") || (target."unix" or false) || (target."os" == "wasi"));
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.9";
            target = { target, features }: (target."windows" or false);
            features = [ "handleapi" "winsock2" "ws2def" "ws2ipdef" "ws2tcpip" ];
          }
        ];
        features = {
          "default" = [ "duration" ];
        };
        resolvedDefaultFeatures = [ "default" "duration" ];
      };
      "nix 0.14.1" = rec {
        crateName = "nix";
        version = "0.14.1";
        edition = "2015";
        sha256 = "1kmxdlmvnmq8cfpmr3g6wk37rwi2ybdvp1z6z3831m1p23p2nwkc";
        authors = [
          "The nix-rust Project Developers"
        ];
        dependencies = [
          {
            name = "bitflags";
            packageId = "bitflags";
          }
          {
            name = "cfg-if";
            packageId = "cfg-if 0.1.10";
          }
          {
            name = "libc";
            packageId = "libc";
          }
          {
            name = "void";
            packageId = "void";
          }
        ];
        buildDependencies = [
          {
            name = "cc";
            packageId = "cc";
            target = {target, features}: (target."os" == "dragonfly");
          }
        ];

      };
      "nix 0.20.0" = rec {
        crateName = "nix";
        version = "0.20.0";
        edition = "2018";
        sha256 = "12n1syfd967hblrcrrqk63a4s1h4hsybfqwblh71rihvv8cli6zs";
        authors = [
          "The nix-rust Project Developers"
        ];
        dependencies = [
          {
            name = "bitflags";
            packageId = "bitflags";
          }
          {
            name = "cfg-if";
            packageId = "cfg-if 1.0.0";
          }
          {
            name = "libc";
            packageId = "libc";
            features = [ "extra_traits" ];
          }
        ];
        buildDependencies = [
          {
            name = "cc";
            packageId = "cc";
            target = {target, features}: (target."os" == "dragonfly");
          }
        ];

      };
      "nix 0.23.1" = rec {
        crateName = "nix";
        version = "0.23.1";
        edition = "2018";
        sha256 = "1iimixk7y2qk0jswqich4mkd8kqyzdghcgy6203j8fmxmhbn71lz";
        authors = [
          "The nix-rust Project Developers"
        ];
        dependencies = [
          {
            name = "bitflags";
            packageId = "bitflags";
          }
          {
            name = "cfg-if";
            packageId = "cfg-if 1.0.0";
          }
          {
            name = "libc";
            packageId = "libc";
            features = [ "extra_traits" ];
          }
          {
            name = "memoffset";
            packageId = "memoffset";
            target = { target, features }: (!(target."os" == "redox"));
          }
        ];
        buildDependencies = [
          {
            name = "cc";
            packageId = "cc";
            target = {target, features}: (target."os" == "dragonfly");
          }
        ];

      };
      "nohash-hasher" = rec {
        crateName = "nohash-hasher";
        version = "0.2.0";
        edition = "2018";
        sha256 = "0lf4p6k01w4wm7zn4grnihzj8s7zd5qczjmzng7wviwxawih5x9b";
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "nom 4.2.3" = rec {
        crateName = "nom";
        version = "4.2.3";
        edition = "2015";
        sha256 = "1mkvby8b4m61p4g1px0pwr58yfkphyp1jcfbp4qfp7l6iqdaklia";
        authors = [
          "contact@geoffroycouprie.com"
        ];
        dependencies = [
          {
            name = "memchr";
            packageId = "memchr";
            usesDefaultFeatures = false;
          }
        ];
        buildDependencies = [
          {
            name = "version_check";
            packageId = "version_check 0.1.5";
          }
        ];
        features = {
          "default" = [ "std" ];
          "regexp" = [ "regex" ];
          "regexp_macros" = [ "regexp" "lazy_static" ];
          "std" = [ "alloc" "memchr/use_std" ];
          "verbose-errors" = [ "alloc" ];
        };
        resolvedDefaultFeatures = [ "alloc" "default" "std" ];
      };
      "nom 5.1.2" = rec {
        crateName = "nom";
        version = "5.1.2";
        edition = "2018";
        sha256 = "1br74rwdp3c2ddga03bphnf355spn4mzwf1slg0a30zd4qnjdd7z";
        authors = [
          "contact@geoffroycouprie.com"
        ];
        dependencies = [
          {
            name = "lexical-core";
            packageId = "lexical-core";
            optional = true;
          }
          {
            name = "memchr";
            packageId = "memchr";
            usesDefaultFeatures = false;
          }
        ];
        buildDependencies = [
          {
            name = "version_check";
            packageId = "version_check 0.9.4";
          }
        ];
        features = {
          "default" = [ "std" "lexical" ];
          "lexical" = [ "lexical-core" ];
          "regexp" = [ "regex" ];
          "regexp_macros" = [ "regexp" "lazy_static" ];
          "std" = [ "alloc" "memchr/use_std" ];
        };
        resolvedDefaultFeatures = [ "alloc" "default" "lexical" "lexical-core" "std" ];
      };
      "nom 7.1.0" = rec {
        crateName = "nom";
        version = "7.1.0";
        edition = "2018";
        sha256 = "0281jdx0xcyhjgs1jkj9pii8py1clcpazg41bgz7d71qxzhi278v";
        authors = [
          "contact@geoffroycouprie.com"
        ];
        dependencies = [
          {
            name = "memchr";
            packageId = "memchr";
            usesDefaultFeatures = false;
          }
          {
            name = "minimal-lexical";
            packageId = "minimal-lexical";
            usesDefaultFeatures = false;
          }
        ];
        buildDependencies = [
          {
            name = "version_check";
            packageId = "version_check 0.9.4";
          }
        ];
        features = {
          "default" = [ "std" ];
          "std" = [ "alloc" "memchr/std" "minimal-lexical/std" ];
        };
        resolvedDefaultFeatures = [ "alloc" "std" ];
      };
      "notify" = rec {
        crateName = "notify";
        version = "4.0.17";
        edition = "2015";
        sha256 = "0msjyj1l30l12v6q9mjc1ascx7dwyz7z07sp7v9bz9yvag4ch0xf";
        authors = [
          "Félix Saparelli <me@passcod.name>"
          "Jorge Israel Peña <jorge.israel.p@gmail.com>"
          "Michael Maurizi <michael.maurizi@gmail.com>"
          "Pierre Baillet <oct@zoy.org>"
          "Joe Wilm <joe@jwilm.com>"
          "Daniel Faust <hessijames@gmail.com>"
          "Aron Heinecke <Ox0p54r36@t-online.de>"
        ];
        dependencies = [
          {
            name = "bitflags";
            packageId = "bitflags";
          }
          {
            name = "filetime";
            packageId = "filetime";
          }
          {
            name = "fsevent";
            packageId = "fsevent";
            target = { target, features }: (target."os" == "macos");
          }
          {
            name = "fsevent-sys";
            packageId = "fsevent-sys";
            target = { target, features }: (target."os" == "macos");
          }
          {
            name = "inotify";
            packageId = "inotify";
            usesDefaultFeatures = false;
            target = { target, features }: (target."os" == "linux");
          }
          {
            name = "libc";
            packageId = "libc";
          }
          {
            name = "mio";
            packageId = "mio 0.6.23";
            target = { target, features }: (target."os" == "linux");
          }
          {
            name = "mio-extras";
            packageId = "mio-extras";
            target = { target, features }: (target."os" == "linux");
          }
          {
            name = "walkdir";
            packageId = "walkdir";
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.9";
            target = { target, features }: (target."windows" or false);
            features = [ "fileapi" "handleapi" "ioapiset" "minwinbase" "synchapi" "winbase" "winnt" ];
          }
        ];
        features = {
        };
      };
      "ntapi" = rec {
        crateName = "ntapi";
        version = "0.3.6";
        edition = "2018";
        sha256 = "0i5daj9sr8wyi5jkpwpybln2jqpn59z0mqfc0dpdidipwh1bjsrz";
        authors = [
          "MSxDOS <melcodos@gmail.com>"
        ];
        dependencies = [
          {
            name = "winapi";
            packageId = "winapi 0.3.9";
            features = [ "cfg" "evntrace" "in6addr" "inaddr" "minwinbase" "ntsecapi" "windef" "winioctl" ];
          }
        ];
        features = {
          "default" = [ "user" ];
          "impl-default" = [ "winapi/impl-default" ];
        };
        resolvedDefaultFeatures = [ "default" "user" ];
      };
      "num" = rec {
        crateName = "num";
        version = "0.4.0";
        edition = "2018";
        sha256 = "01j6k8kjad0a96297j3qjhdhrc6cgmzhf52i0sd7yd0d2z8ndns3";
        authors = [
          "The Rust Project Developers"
        ];
        dependencies = [
          {
            name = "num-bigint";
            packageId = "num-bigint";
            optional = true;
            usesDefaultFeatures = false;
          }
          {
            name = "num-complex";
            packageId = "num-complex 0.4.0";
            usesDefaultFeatures = false;
          }
          {
            name = "num-integer";
            packageId = "num-integer";
            usesDefaultFeatures = false;
            features = [ "i128" ];
          }
          {
            name = "num-iter";
            packageId = "num-iter";
            usesDefaultFeatures = false;
            features = [ "i128" ];
          }
          {
            name = "num-rational";
            packageId = "num-rational";
            usesDefaultFeatures = false;
          }
          {
            name = "num-traits";
            packageId = "num-traits 0.2.14";
            usesDefaultFeatures = false;
            features = [ "i128" ];
          }
        ];
        features = {
          "alloc" = [ "num-bigint" "num-rational/num-bigint" ];
          "default" = [ "std" ];
          "libm" = [ "num-complex/libm" "num-traits/libm" ];
          "rand" = [ "num-bigint/rand" "num-complex/rand" ];
          "serde" = [ "num-bigint/serde" "num-complex/serde" "num-rational/serde" ];
          "std" = [ "num-bigint/std" "num-complex/std" "num-integer/std" "num-iter/std" "num-rational/std" "num-rational/num-bigint-std" "num-traits/std" ];
        };
        resolvedDefaultFeatures = [ "default" "num-bigint" "std" ];
      };
      "num-bigint" = rec {
        crateName = "num-bigint";
        version = "0.4.3";
        edition = "2018";
        sha256 = "0py73wsa5j4izhd39nkqzqv260r0ma08vy30ky54ld3vkhlbcfpr";
        authors = [
          "The Rust Project Developers"
        ];
        dependencies = [
          {
            name = "num-integer";
            packageId = "num-integer";
            usesDefaultFeatures = false;
            features = [ "i128" ];
          }
          {
            name = "num-traits";
            packageId = "num-traits 0.2.14";
            usesDefaultFeatures = false;
            features = [ "i128" ];
          }
        ];
        buildDependencies = [
          {
            name = "autocfg";
            packageId = "autocfg 1.0.1";
          }
        ];
        features = {
          "default" = [ "std" ];
          "std" = [ "num-integer/std" "num-traits/std" ];
        };
        resolvedDefaultFeatures = [ "std" ];
      };
      "num-complex 0.2.4" = rec {
        crateName = "num-complex";
        version = "0.2.4";
        edition = "2015";
        sha256 = "15dwaksw729r3v14sgzc9723s3fnfixiir8jzwx7b7kim48r9cdn";
        authors = [
          "The Rust Project Developers"
        ];
        dependencies = [
          {
            name = "num-traits";
            packageId = "num-traits 0.2.14";
            usesDefaultFeatures = false;
          }
        ];
        buildDependencies = [
          {
            name = "autocfg";
            packageId = "autocfg 1.0.1";
          }
        ];
        features = {
          "default" = [ "std" ];
          "i128" = [ "num-traits/i128" ];
          "std" = [ "num-traits/std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "num-complex 0.4.0" = rec {
        crateName = "num-complex";
        version = "0.4.0";
        edition = "2018";
        sha256 = "11ahq51ibf7x30rsabgp3a29zw6d6bfilz53sj152z5vpdkkd1r6";
        authors = [
          "The Rust Project Developers"
        ];
        dependencies = [
          {
            name = "num-traits";
            packageId = "num-traits 0.2.14";
            usesDefaultFeatures = false;
            features = [ "i128" ];
          }
        ];
        features = {
          "default" = [ "std" ];
          "libm" = [ "num-traits/libm" ];
          "std" = [ "num-traits/std" ];
        };
        resolvedDefaultFeatures = [ "std" ];
      };
      "num-derive" = rec {
        crateName = "num-derive";
        version = "0.3.3";
        edition = "2018";
        sha256 = "0gbl94ckzqjdzy4j8b1p55mz01g6n1l9bckllqvaj0wfz7zm6sl7";
        procMacro = true;
        libName = "num_derive";
        authors = [
          "The Rust Project Developers"
        ];
        dependencies = [
          {
            name = "proc-macro2";
            packageId = "proc-macro2";
          }
          {
            name = "quote";
            packageId = "quote";
          }
          {
            name = "syn";
            packageId = "syn";
          }
        ];
        features = {
          "full-syntax" = [ "syn/full" ];
        };
      };
      "num-integer" = rec {
        crateName = "num-integer";
        version = "0.1.44";
        edition = "2015";
        sha256 = "1nq152y3304as1iai95hqz8prqnc94lks1s7q05sfjdmcf56kk6j";
        authors = [
          "The Rust Project Developers"
        ];
        dependencies = [
          {
            name = "num-traits";
            packageId = "num-traits 0.2.14";
            usesDefaultFeatures = false;
          }
        ];
        buildDependencies = [
          {
            name = "autocfg";
            packageId = "autocfg 1.0.1";
          }
        ];
        features = {
          "default" = [ "std" ];
          "i128" = [ "num-traits/i128" ];
          "std" = [ "num-traits/std" ];
        };
        resolvedDefaultFeatures = [ "default" "i128" "std" ];
      };
      "num-iter" = rec {
        crateName = "num-iter";
        version = "0.1.42";
        edition = "2015";
        sha256 = "0ndd9wb9qar50fdr16xm3i1zk6h2g9br56nml2n22kd56y1iq0mj";
        authors = [
          "The Rust Project Developers"
        ];
        dependencies = [
          {
            name = "num-integer";
            packageId = "num-integer";
            usesDefaultFeatures = false;
          }
          {
            name = "num-traits";
            packageId = "num-traits 0.2.14";
            usesDefaultFeatures = false;
          }
        ];
        buildDependencies = [
          {
            name = "autocfg";
            packageId = "autocfg 1.0.1";
          }
        ];
        features = {
          "default" = [ "std" ];
          "i128" = [ "num-integer/i128" "num-traits/i128" ];
          "std" = [ "num-integer/std" "num-traits/std" ];
        };
        resolvedDefaultFeatures = [ "i128" "std" ];
      };
      "num-rational" = rec {
        crateName = "num-rational";
        version = "0.4.0";
        edition = "2018";
        sha256 = "0ska19zb05f84b1cki7vyzy5wjqs26y82hiq1d9gabbw2syh45yl";
        authors = [
          "The Rust Project Developers"
        ];
        dependencies = [
          {
            name = "num-bigint";
            packageId = "num-bigint";
            optional = true;
            usesDefaultFeatures = false;
          }
          {
            name = "num-integer";
            packageId = "num-integer";
            usesDefaultFeatures = false;
            features = [ "i128" ];
          }
          {
            name = "num-traits";
            packageId = "num-traits 0.2.14";
            usesDefaultFeatures = false;
            features = [ "i128" ];
          }
        ];
        buildDependencies = [
          {
            name = "autocfg";
            packageId = "autocfg 1.0.1";
          }
        ];
        features = {
          "default" = [ "num-bigint-std" "std" ];
          "num-bigint-std" = [ "num-bigint/std" ];
          "std" = [ "num-integer/std" "num-traits/std" ];
        };
        resolvedDefaultFeatures = [ "num-bigint" "num-bigint-std" "std" ];
      };
      "num-traits 0.1.43" = rec {
        crateName = "num-traits";
        version = "0.1.43";
        edition = "2015";
        sha256 = "0c9whknf2dm74a3cqirafy6gj83a76gl56g4v3g19k6lkwz13rcj";
        authors = [
          "The Rust Project Developers"
        ];
        dependencies = [
          {
            name = "num-traits";
            packageId = "num-traits 0.2.14";
          }
        ];

      };
      "num-traits 0.2.14" = rec {
        crateName = "num-traits";
        version = "0.2.14";
        edition = "2015";
        sha256 = "144j176s2p76azy2ngk2vkdzgwdc0bc8c93jhki8c9fsbknb2r4s";
        authors = [
          "The Rust Project Developers"
        ];
        buildDependencies = [
          {
            name = "autocfg";
            packageId = "autocfg 1.0.1";
          }
        ];
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "i128" "std" ];
      };
      "num_cpus" = rec {
        crateName = "num_cpus";
        version = "1.13.1";
        edition = "2015";
        sha256 = "18apx62z4j4lajj2fi6r1i8slr9rs2d0xrbj2ls85qfyxck4brhr";
        authors = [
          "Sean McArthur <sean@seanmonstar.com>"
        ];
        dependencies = [
          {
            name = "hermit-abi";
            packageId = "hermit-abi";
            target = { target, features }: (((target."arch" == "x86_64") || (target."arch" == "aarch64")) && (target."os" == "hermit"));
          }
          {
            name = "libc";
            packageId = "libc";
            target = { target, features }: (!(target."windows" or false));
          }
        ];

      };
      "num_threads" = rec {
        crateName = "num_threads";
        version = "0.1.3";
        edition = "2015";
        sha256 = "05gvsnv4k6d69iksz47i7fq1r61dj1k1nh4i8xrw7qlkcfx9kflp";
        authors = [
          "Jacob Pratt <open-source@jhpratt.dev>"
        ];
        dependencies = [
          {
            name = "libc";
            packageId = "libc";
            target = { target, features }: ((target."os" == "macos") || (target."os" == "freebsd"));
          }
        ];

      };
      "numtoa" = rec {
        crateName = "numtoa";
        version = "0.1.0";
        edition = "2015";
        sha256 = "1vs9rhggqbql1p26x8nkha1j06wawwgb2jp5fs88b5gi7prvvy5q";
        authors = [
          "Michael Aaron Murphy <mmstickman@gmail.com>"
        ];
        features = {
        };
        resolvedDefaultFeatures = [ "std" ];
      };
      "object 0.27.1" = rec {
        crateName = "object";
        version = "0.27.1";
        edition = "2018";
        sha256 = "1ygv9zgi9wz6q5f2z9xn72i0c97jjr1dgj30kbyicdhxk8zivb37";
        dependencies = [
          {
            name = "memchr";
            packageId = "memchr";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "all" = [ "read" "write" "std" "compression" "wasm" ];
          "compression" = [ "flate2" "std" ];
          "default" = [ "read" "compression" ];
          "doc" = [ "read_core" "write_core" "std" "compression" "archive" "coff" "elf" "macho" "pe" "wasm" ];
          "pe" = [ "coff" ];
          "read" = [ "read_core" "archive" "coff" "elf" "macho" "pe" "unaligned" ];
          "rustc-dep-of-std" = [ "core" "compiler_builtins" "alloc" "memchr/rustc-dep-of-std" ];
          "std" = [ "memchr/std" ];
          "wasm" = [ "wasmparser" ];
          "write" = [ "write_core" "coff" "elf" "macho" "pe" ];
          "write_core" = [ "crc32fast" "indexmap/std" "std" ];
        };
        resolvedDefaultFeatures = [ "archive" "coff" "elf" "macho" "pe" "read_core" "unaligned" ];
      };
      "object 0.28.3" = rec {
        crateName = "object";
        version = "0.28.3";
        edition = "2018";
        sha256 = "0mnllk6kwznchzryczyfmvlixzhz6f20n4dayycmyn8ll05wggj0";
        dependencies = [
          {
            name = "crc32fast";
            packageId = "crc32fast";
            optional = true;
            usesDefaultFeatures = false;
          }
          {
            name = "hashbrown";
            packageId = "hashbrown";
            optional = true;
            usesDefaultFeatures = false;
            features = [ "ahash" ];
          }
          {
            name = "indexmap";
            packageId = "indexmap";
            optional = true;
          }
          {
            name = "memchr";
            packageId = "memchr";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "all" = [ "read" "write" "std" "compression" "wasm" ];
          "compression" = [ "flate2" "std" ];
          "default" = [ "read" "compression" ];
          "doc" = [ "read_core" "write_std" "std" "compression" "archive" "coff" "elf" "macho" "pe" "wasm" ];
          "pe" = [ "coff" ];
          "read" = [ "read_core" "archive" "coff" "elf" "macho" "pe" "unaligned" ];
          "rustc-dep-of-std" = [ "core" "compiler_builtins" "alloc" "memchr/rustc-dep-of-std" ];
          "std" = [ "memchr/std" ];
          "wasm" = [ "wasmparser" ];
          "write" = [ "write_std" "coff" "elf" "macho" "pe" ];
          "write_core" = [ "crc32fast" "indexmap" "hashbrown" ];
          "write_std" = [ "write_core" "std" "indexmap/std" "crc32fast/std" ];
        };
        resolvedDefaultFeatures = [ "coff" "crc32fast" "elf" "hashbrown" "indexmap" "macho" "pe" "std" "write" "write_core" "write_std" ];
      };
      "once_cell" = rec {
        crateName = "once_cell";
        version = "1.9.0";
        edition = "2018";
        sha256 = "1mfqhrsgi368x92bwnq3vi3p5nv0n1qlrn69gfflhvkfkxfm2cns";
        authors = [
          "Aleksey Kladov <aleksey.kladov@gmail.com>"
        ];
        features = {
          "alloc" = [ "race" ];
          "default" = [ "std" ];
          "std" = [ "alloc" ];
        };
        resolvedDefaultFeatures = [ "alloc" "default" "race" "std" ];
      };
      "opaque-debug 0.2.3" = rec {
        crateName = "opaque-debug";
        version = "0.2.3";
        edition = "2015";
        sha256 = "172j6bs8ndclqxa2m64qc0y1772rr73g4l9fg2svscgicnbfff98";
        authors = [
          "RustCrypto Developers"
        ];

      };
      "opaque-debug 0.3.0" = rec {
        crateName = "opaque-debug";
        version = "0.3.0";
        edition = "2018";
        sha256 = "1m8kzi4nd6shdqimn0mgb24f0hxslhnqd1whakyq06wcqd086jk2";
        authors = [
          "RustCrypto Developers"
        ];

      };
      "openssl" = rec {
        crateName = "openssl";
        version = "0.10.38";
        edition = "2018";
        sha256 = "15baqlphisr1f7ddq11jnrrzz4shdh35kwal24adyc2c4cif4yhc";
        authors = [
          "Steven Fackler <sfackler@gmail.com>"
        ];
        dependencies = [
          {
            name = "bitflags";
            packageId = "bitflags";
          }
          {
            name = "cfg-if";
            packageId = "cfg-if 1.0.0";
          }
          {
            name = "foreign-types";
            packageId = "foreign-types";
          }
          {
            name = "libc";
            packageId = "libc";
          }
          {
            name = "once_cell";
            packageId = "once_cell";
          }
          {
            name = "openssl-sys";
            packageId = "openssl-sys";
            rename = "ffi";
          }
        ];
        features = {
          "vendored" = [ "ffi/vendored" ];
        };
      };
      "openssl-probe" = rec {
        crateName = "openssl-probe";
        version = "0.1.5";
        edition = "2015";
        sha256 = "1kq18qm48rvkwgcggfkqq6pm948190czqc94d6bm2sir5hq1l0gz";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];

      };
      "openssl-sys" = rec {
        crateName = "openssl-sys";
        version = "0.9.72";
        edition = "2015";
        sha256 = "1jq3qbcvf16qn71yasdzw54b14n8nz98vr52l1gp60in72f10iky";
        build = "build/main.rs";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
          "Steven Fackler <sfackler@gmail.com>"
        ];
        dependencies = [
          {
            name = "libc";
            packageId = "libc";
          }
        ];
        buildDependencies = [
          {
            name = "autocfg";
            packageId = "autocfg 1.0.1";
          }
          {
            name = "cc";
            packageId = "cc";
          }
          {
            name = "pkg-config";
            packageId = "pkg-config";
          }
          {
            name = "vcpkg";
            packageId = "vcpkg";
            target = {target, features}: (target."env" == "msvc");
          }
        ];
        features = {
          "vendored" = [ "openssl-src" ];
        };
      };
      "orion" = rec {
        crateName = "orion";
        version = "0.16.1";
        edition = "2018";
        sha256 = "035h0plzqr6dxp3r4k7f5mdrib6ikr9nfmb8y07lcbnrvl2ljqn6";
        authors = [
          "brycx <brycx@protonmail.com>"
        ];
        dependencies = [
          {
            name = "ct-codecs";
            packageId = "ct-codecs";
            optional = true;
          }
          {
            name = "getrandom";
            packageId = "getrandom 0.2.4";
            optional = true;
          }
          {
            name = "subtle";
            packageId = "subtle 2.4.1";
            usesDefaultFeatures = false;
          }
          {
            name = "zeroize";
            packageId = "zeroize";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "default" = [ "safe_api" ];
          "safe_api" = [ "getrandom" "ct-codecs" ];
        };
        resolvedDefaultFeatures = [ "ct-codecs" "default" "getrandom" "safe_api" ];
      };
      "os_str_bytes" = rec {
        crateName = "os_str_bytes";
        version = "2.4.0";
        edition = "2018";
        sha256 = "11agh8n3x2l4sr3sxvx6byc1j3ryb1g6flb1ywn0qhq7xv1y3cmg";
        authors = [
          "dylni"
        ];
        features = {
        };
        resolvedDefaultFeatures = [ "raw" ];
      };
      "output_vt100" = rec {
        crateName = "output_vt100";
        version = "0.1.2";
        edition = "2018";
        sha256 = "1ygqplpxz4gg3i8f3rkan2q69pqll7gv65l2mmd8r9dphnvwbkak";
        authors = [
          "Phuntsok Drak-pa <phundrak@phundrak.fr>"
        ];
        dependencies = [
          {
            name = "winapi";
            packageId = "winapi 0.3.9";
            features = [ "winuser" "winbase" "consoleapi" "processenv" ];
          }
        ];

      };
      "owo-colors" = rec {
        crateName = "owo-colors";
        version = "1.3.0";
        edition = "2018";
        sha256 = "0mbs3z0c6p48wh96paa230xf6c6h8nhyyk1d118pybqwx7mv91i3";
        authors = [
          "jam1garner <8260240+jam1garner@users.noreply.github.com>"
        ];
        features = {
          "tty" = [ "atty" ];
        };
      };
      "parity-multiaddr" = rec {
        crateName = "parity-multiaddr";
        version = "0.11.2";
        edition = "2018";
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/heliaxdev/rust-libp2p.git";
          rev = "1abe349c231eb307d3dbe03f3ffffc6cf5e9084d";
          sha256 = "03qa49kbx0ylnc1qp2swr0ffy7nli954nbfqkm346s3iysj0mdgw";
        };
        authors = [
          "dignifiedquire <dignifiedquire@gmail.com>"
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "arrayref";
            packageId = "arrayref";
          }
          {
            name = "bs58";
            packageId = "bs58";
          }
          {
            name = "byteorder";
            packageId = "byteorder";
          }
          {
            name = "data-encoding";
            packageId = "data-encoding";
          }
          {
            name = "multihash";
            packageId = "multihash";
            usesDefaultFeatures = false;
            features = [ "std" "multihash-impl" "identity" ];
          }
          {
            name = "percent-encoding";
            packageId = "percent-encoding 2.1.0";
          }
          {
            name = "serde";
            packageId = "serde 1.0.136";
          }
          {
            name = "static_assertions";
            packageId = "static_assertions";
          }
          {
            name = "unsigned-varint";
            packageId = "unsigned-varint 0.7.1";
          }
          {
            name = "url";
            packageId = "url 2.2.2";
            optional = true;
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "default" = [ "url" ];
        };
        resolvedDefaultFeatures = [ "default" "url" ];
      };
      "parity-send-wrapper" = rec {
        crateName = "parity-send-wrapper";
        version = "0.1.0";
        edition = "2015";
        sha256 = "0vswzhxfdm9lc2kabz2jp7gg3iq2rdmrnjm0mbarvbdqj6m7g5xa";
        authors = [
          "Thomas Keh"
          "Parity Technologies <admin@parity.io>"
        ];

      };
      "parity-wasm" = rec {
        crateName = "parity-wasm";
        version = "0.42.2";
        edition = "2018";
        sha256 = "14mfpzjby2in3i3mlzq2p12yzlgml20pvn166kwasajhcv116pmy";
        authors = [
          "Nikolay Volf <nikvolf@gmail.com>"
          "Svyatoslav Nikolsky <svyatonik@yandex.ru>"
          "Sergey Shulepov <s.pepyakin@gmail.com>"
        ];
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "parking" = rec {
        crateName = "parking";
        version = "2.0.0";
        edition = "2018";
        sha256 = "0wnxxnizfxlax3n709s5r83f4n8awy3m4a18q4fdk0z7z693hz22";
        authors = [
          "Stjepan Glavina <stjepang@gmail.com>"
          "The Rust Project Developers"
        ];

      };
      "parking_lot 0.11.2" = rec {
        crateName = "parking_lot";
        version = "0.11.2";
        edition = "2018";
        sha256 = "16gzf41bxmm10x82bla8d6wfppy9ym3fxsmdjyvn61m66s0bf5vx";
        authors = [
          "Amanieu d'Antras <amanieu@gmail.com>"
        ];
        dependencies = [
          {
            name = "instant";
            packageId = "instant";
          }
          {
            name = "lock_api";
            packageId = "lock_api 0.4.6";
          }
          {
            name = "parking_lot_core";
            packageId = "parking_lot_core 0.8.5";
          }
        ];
        features = {
          "arc_lock" = [ "lock_api/arc_lock" ];
          "deadlock_detection" = [ "parking_lot_core/deadlock_detection" ];
          "nightly" = [ "parking_lot_core/nightly" "lock_api/nightly" ];
          "owning_ref" = [ "lock_api/owning_ref" ];
          "serde" = [ "lock_api/serde" ];
          "stdweb" = [ "instant/stdweb" ];
          "wasm-bindgen" = [ "instant/wasm-bindgen" ];
        };
        resolvedDefaultFeatures = [ "default" ];
      };
      "parking_lot 0.9.0" = rec {
        crateName = "parking_lot";
        version = "0.9.0";
        edition = "2018";
        sha256 = "0lk2vq3hp88ygpgsrypdr3ss71fidnqbykva0csgxhmn5scb2hpq";
        authors = [
          "Amanieu d'Antras <amanieu@gmail.com>"
        ];
        dependencies = [
          {
            name = "lock_api";
            packageId = "lock_api 0.3.4";
          }
          {
            name = "parking_lot_core";
            packageId = "parking_lot_core 0.6.2";
          }
        ];
        buildDependencies = [
          {
            name = "rustc_version";
            packageId = "rustc_version 0.2.3";
          }
        ];
        features = {
          "deadlock_detection" = [ "parking_lot_core/deadlock_detection" ];
          "nightly" = [ "parking_lot_core/nightly" "lock_api/nightly" ];
          "owning_ref" = [ "lock_api/owning_ref" ];
          "serde" = [ "lock_api/serde" ];
        };
        resolvedDefaultFeatures = [ "default" ];
      };
      "parking_lot_core 0.6.2" = rec {
        crateName = "parking_lot_core";
        version = "0.6.2";
        edition = "2018";
        sha256 = "0ay67dpnrn68ryyvp720m9i8hzp189fd4d6slrs1lvmcwywv2xmq";
        authors = [
          "Amanieu d'Antras <amanieu@gmail.com>"
        ];
        dependencies = [
          {
            name = "cfg-if";
            packageId = "cfg-if 0.1.10";
          }
          {
            name = "cloudabi";
            packageId = "cloudabi";
            target = { target, features }: (target."os" == "cloudabi");
          }
          {
            name = "libc";
            packageId = "libc";
            target = { target, features }: (target."unix" or false);
          }
          {
            name = "redox_syscall";
            packageId = "redox_syscall 0.1.57";
            target = { target, features }: (target."os" == "redox");
          }
          {
            name = "smallvec";
            packageId = "smallvec 0.6.14";
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.9";
            target = { target, features }: (target."windows" or false);
            features = [ "winnt" "ntstatus" "minwindef" "winerror" "winbase" "errhandlingapi" "handleapi" ];
          }
        ];
        buildDependencies = [
          {
            name = "rustc_version";
            packageId = "rustc_version 0.2.3";
          }
        ];
        features = {
          "deadlock_detection" = [ "petgraph" "thread-id" "backtrace" ];
        };
      };
      "parking_lot_core 0.8.5" = rec {
        crateName = "parking_lot_core";
        version = "0.8.5";
        edition = "2018";
        sha256 = "05ij4zxsylx99srbq8qd1k2wiwaq8krkf9y4cqkhvb5wjca8wvnp";
        authors = [
          "Amanieu d'Antras <amanieu@gmail.com>"
        ];
        dependencies = [
          {
            name = "cfg-if";
            packageId = "cfg-if 1.0.0";
          }
          {
            name = "instant";
            packageId = "instant";
          }
          {
            name = "libc";
            packageId = "libc";
            target = { target, features }: (target."unix" or false);
          }
          {
            name = "redox_syscall";
            packageId = "redox_syscall 0.2.10";
            target = { target, features }: (target."os" == "redox");
          }
          {
            name = "smallvec";
            packageId = "smallvec 1.8.0";
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.9";
            target = { target, features }: (target."windows" or false);
            features = [ "winnt" "ntstatus" "minwindef" "winerror" "winbase" "errhandlingapi" "handleapi" ];
          }
        ];
        features = {
          "deadlock_detection" = [ "petgraph" "thread-id" "backtrace" ];
        };
      };
      "paste" = rec {
        crateName = "paste";
        version = "1.0.6";
        edition = "2018";
        sha256 = "1dcg6ll2in45066kvramw83cp1p0vcbafl6bjkrxfv8szrm14i07";
        procMacro = true;
        authors = [
          "David Tolnay <dtolnay@gmail.com>"
        ];

      };
      "pathdiff" = rec {
        crateName = "pathdiff";
        version = "0.2.1";
        edition = "2018";
        sha256 = "1pa4dcmb7lwir4himg1mnl97a05b2z0svczg62l8940pbim12dc8";
        authors = [
          "Manish Goregaokar <manishsmail@gmail.com>"
        ];

      };
      "peeking_take_while" = rec {
        crateName = "peeking_take_while";
        version = "0.1.2";
        edition = "2015";
        sha256 = "16bhqr6rdyrp12zv381cxaaqqd0pwysvm1q8h2ygihvypvfprc8r";
        authors = [
          "Nick Fitzgerald <fitzgen@gmail.com>"
        ];

      };
      "peg" = rec {
        crateName = "peg";
        version = "0.7.0";
        edition = "2018";
        sha256 = "0shn3npql9xp6avjwzg6y83bxg4ksbxmcsammbvj7xalx90vih07";
        authors = [
          "Kevin Mehall <km@kevinmehall.net>"
        ];
        dependencies = [
          {
            name = "peg-macros";
            packageId = "peg-macros";
          }
          {
            name = "peg-runtime";
            packageId = "peg-runtime";
          }
        ];
        features = {
          "trace" = [ "peg-macros/trace" ];
        };
      };
      "peg-macros" = rec {
        crateName = "peg-macros";
        version = "0.7.0";
        edition = "2018";
        crateBin = [];
        sha256 = "0k44f3xwhkpbk0mbl0v88l0v12il24kj145gjgvbxv4dkf155amm";
        procMacro = true;
        libName = "peg_macros";
        libPath = "lib.rs";
        authors = [
          "Kevin Mehall <km@kevinmehall.net>"
        ];
        dependencies = [
          {
            name = "peg-runtime";
            packageId = "peg-runtime";
          }
          {
            name = "proc-macro2";
            packageId = "proc-macro2";
          }
          {
            name = "quote";
            packageId = "quote";
          }
        ];
        features = {
        };
      };
      "peg-runtime" = rec {
        crateName = "peg-runtime";
        version = "0.7.0";
        edition = "2018";
        sha256 = "12201by4nr6z7jc6gi4r6mz1g2n1jjsrlr66ckksg8q9bzsxq6f7";
        libPath = "lib.rs";
        authors = [
          "Kevin Mehall <km@kevinmehall.net>"
        ];

      };
      "percent-encoding 1.0.1" = rec {
        crateName = "percent-encoding";
        version = "1.0.1";
        edition = "2015";
        sha256 = "0cgq08v1fvr6bs5fvy390cz830lq4fak8havdasdacxcw790s09i";
        libPath = "lib.rs";
        authors = [
          "The rust-url developers"
        ];

      };
      "percent-encoding 2.1.0" = rec {
        crateName = "percent-encoding";
        version = "2.1.0";
        edition = "2015";
        sha256 = "0bp3zrsk3kr47fbpipyczidbbx4g54lzxdm77ni1i3qws10mdzfl";
        libPath = "lib.rs";
        authors = [
          "The rust-url developers"
        ];

      };
      "pest" = rec {
        crateName = "pest";
        version = "2.1.3";
        edition = "2015";
        sha256 = "0lry80bm90x47nq71wxq83kjrm9ashpz4kbm92p90ysdx4m8gx0h";
        authors = [
          "Dragoș Tiselice <dragostiselice@gmail.com>"
        ];
        dependencies = [
          {
            name = "ucd-trie";
            packageId = "ucd-trie";
          }
        ];
        features = {
          "pretty-print" = [ "serde" "serde_json" ];
        };
      };
      "petgraph 0.5.1" = rec {
        crateName = "petgraph";
        version = "0.5.1";
        edition = "2018";
        sha256 = "1dzxda6z17sfxly11m8ja3iargh73pw0s1sdgjyp0qp5dm51cza6";
        authors = [
          "bluss"
          "mitchmindtree"
        ];
        dependencies = [
          {
            name = "fixedbitset";
            packageId = "fixedbitset 0.2.0";
            usesDefaultFeatures = false;
          }
          {
            name = "indexmap";
            packageId = "indexmap";
          }
          {
            name = "serde";
            packageId = "serde 1.0.136";
            optional = true;
          }
          {
            name = "serde_derive";
            packageId = "serde_derive";
            optional = true;
          }
        ];
        features = {
          "all" = [ "unstable" "quickcheck" "matrix_graph" "stable_graph" "graphmap" ];
          "default" = [ "graphmap" "stable_graph" "matrix_graph" ];
          "serde-1" = [ "serde" "serde_derive" ];
          "unstable" = [ "generate" ];
        };
        resolvedDefaultFeatures = [ "default" "graphmap" "matrix_graph" "serde" "serde-1" "serde_derive" "stable_graph" ];
      };
      "petgraph 0.6.0" = rec {
        crateName = "petgraph";
        version = "0.6.0";
        edition = "2018";
        sha256 = "0kw27zzhsa82d4qpkrz91vznyxi3wm0qg0i84grfaqqbkpxa44sa";
        authors = [
          "bluss"
          "mitchmindtree"
        ];
        dependencies = [
          {
            name = "fixedbitset";
            packageId = "fixedbitset 0.4.1";
            usesDefaultFeatures = false;
          }
          {
            name = "indexmap";
            packageId = "indexmap";
          }
        ];
        features = {
          "all" = [ "unstable" "quickcheck" "matrix_graph" "stable_graph" "graphmap" ];
          "default" = [ "graphmap" "stable_graph" "matrix_graph" ];
          "serde-1" = [ "serde" "serde_derive" ];
          "unstable" = [ "generate" ];
        };
      };
      "pin-project 0.4.29" = rec {
        crateName = "pin-project";
        version = "0.4.29";
        edition = "2018";
        sha256 = "02f93m6qq0hiq7mmf9wqn7kph4nw9lk9jd06zzlpjx8k666w25cn";
        dependencies = [
          {
            name = "pin-project-internal";
            packageId = "pin-project-internal 0.4.29";
            usesDefaultFeatures = false;
          }
        ];

      };
      "pin-project 1.0.10" = rec {
        crateName = "pin-project";
        version = "1.0.10";
        edition = "2018";
        sha256 = "0pm7qfsczqnb3d6y530zk6xng239m0cagijbg124xbrvmmwkibaq";
        dependencies = [
          {
            name = "pin-project-internal";
            packageId = "pin-project-internal 1.0.10";
          }
        ];

      };
      "pin-project-internal 0.4.29" = rec {
        crateName = "pin-project-internal";
        version = "0.4.29";
        edition = "2018";
        sha256 = "0ami799a794z5a8h190f20vqzwby0kkbqnwxkpadkvhrf1168j84";
        procMacro = true;
        dependencies = [
          {
            name = "proc-macro2";
            packageId = "proc-macro2";
          }
          {
            name = "quote";
            packageId = "quote";
          }
          {
            name = "syn";
            packageId = "syn";
            features = [ "full" "visit-mut" ];
          }
        ];

      };
      "pin-project-internal 1.0.10" = rec {
        crateName = "pin-project-internal";
        version = "1.0.10";
        edition = "2018";
        sha256 = "1frnrghhxzkwn636q3s2917r8fgxd98dnx7jz983d7525c4nyjvl";
        procMacro = true;
        dependencies = [
          {
            name = "proc-macro2";
            packageId = "proc-macro2";
          }
          {
            name = "quote";
            packageId = "quote";
          }
          {
            name = "syn";
            packageId = "syn";
            features = [ "full" "visit-mut" ];
          }
        ];

      };
      "pin-project-lite 0.1.12" = rec {
        crateName = "pin-project-lite";
        version = "0.1.12";
        edition = "2018";
        sha256 = "0xx7f3wzc8ydvd1v2mmrxfypjchp52bphrirf08phbq8ba8n8yr5";
        authors = [
          "Taiki Endo <te316e89@gmail.com>"
        ];

      };
      "pin-project-lite 0.2.8" = rec {
        crateName = "pin-project-lite";
        version = "0.2.8";
        edition = "2018";
        sha256 = "0v2c5ds2jqr84q0nc94dfhv8fs7lachl9sarf9992b66gkkzp072";

      };
      "pin-utils" = rec {
        crateName = "pin-utils";
        version = "0.1.0";
        edition = "2018";
        sha256 = "117ir7vslsl2z1a7qzhws4pd01cg2d3338c47swjyvqv2n60v1wb";
        authors = [
          "Josef Brandl <mail@josefbrandl.de>"
        ];

      };
      "pkg-config" = rec {
        crateName = "pkg-config";
        version = "0.3.24";
        edition = "2015";
        sha256 = "1ghcyjp5537r7qigmgl3dj62j01arlpddaq93a3i414v3iskz2aq";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];

      };
      "polling" = rec {
        crateName = "polling";
        version = "2.2.0";
        edition = "2018";
        sha256 = "0najvslgg2zclsnxay071jdw0bna7f0abqvgx3isv7w817ah8m38";
        authors = [
          "Stjepan Glavina <stjepang@gmail.com>"
        ];
        dependencies = [
          {
            name = "cfg-if";
            packageId = "cfg-if 1.0.0";
          }
          {
            name = "libc";
            packageId = "libc";
            target = { target, features }: ((target."unix" or false) || (target."os" == "fuchsia") || (target."os" == "vxworks"));
          }
          {
            name = "log";
            packageId = "log 0.4.14";
          }
          {
            name = "wepoll-ffi";
            packageId = "wepoll-ffi";
            target = { target, features }: (target."windows" or false);
            features = [ "null-overlapped-wakeups-patch" ];
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.9";
            target = { target, features }: (target."windows" or false);
            features = [ "ioapiset" "winsock2" ];
          }
        ];
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "poly1305" = rec {
        crateName = "poly1305";
        version = "0.7.2";
        edition = "2018";
        sha256 = "1pkf4jlriskq9rvz8y5fjj9dw42q6yg5djijlin4n6p1dd3yp2h4";
        authors = [
          "RustCrypto Developers"
        ];
        dependencies = [
          {
            name = "cpufeatures";
            packageId = "cpufeatures";
            target = { target, features }: ((target."arch" == "x86_64") || (target."arch" == "x86"));
          }
          {
            name = "opaque-debug";
            packageId = "opaque-debug 0.3.0";
          }
          {
            name = "universal-hash";
            packageId = "universal-hash";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "std" = [ "universal-hash/std" ];
        };
      };
      "polyval" = rec {
        crateName = "polyval";
        version = "0.5.3";
        edition = "2018";
        sha256 = "1890wqvc0csc9y9k9k4gsbz91rgdnhn6xnfmy9pqkh674fvd46c4";
        authors = [
          "RustCrypto Developers"
        ];
        dependencies = [
          {
            name = "cfg-if";
            packageId = "cfg-if 1.0.0";
          }
          {
            name = "cpufeatures";
            packageId = "cpufeatures";
            target = { target, features }: ((target."arch" == "aarch64") || (target."arch" == "x86_64") || (target."arch" == "x86"));
          }
          {
            name = "opaque-debug";
            packageId = "opaque-debug 0.3.0";
          }
          {
            name = "universal-hash";
            packageId = "universal-hash";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "std" = [ "universal-hash/std" ];
        };
      };
      "ppv-lite86" = rec {
        crateName = "ppv-lite86";
        version = "0.2.16";
        edition = "2018";
        sha256 = "0wkqwnvnfcgqlrahphl45vdlgi2f1bs7nqcsalsllp1y4dp9x7zb";
        authors = [
          "The CryptoCorrosion Contributors"
        ];
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "simd" "std" ];
      };
      "predicates" = rec {
        crateName = "predicates";
        version = "2.1.1";
        edition = "2018";
        sha256 = "0g0cjv6nn2s18kzsa3nkfhv7myxv9lbb710r0xrv8cj7dszbbam5";
        authors = [
          "Nick Stevens <nick@bitcurry.com>"
        ];
        dependencies = [
          {
            name = "difflib";
            packageId = "difflib";
            optional = true;
          }
          {
            name = "itertools";
            packageId = "itertools 0.10.3";
          }
          {
            name = "predicates-core";
            packageId = "predicates-core";
          }
        ];
        features = {
          "color" = [ "yansi" "concolor/std" ];
          "color-auto" = [ "color" "concolor/auto" ];
          "default" = [ "diff" "regex" "float-cmp" "normalize-line-endings" ];
          "diff" = [ "difflib" ];
        };
        resolvedDefaultFeatures = [ "diff" "difflib" ];
      };
      "predicates-core" = rec {
        crateName = "predicates-core";
        version = "1.0.3";
        edition = "2018";
        sha256 = "1jrzczk9mylrf3rkwi3iiw4fzs59w2armhyfbxh1ngjin642676s";
        authors = [
          "Nick Stevens <nick@bitcurry.com>"
        ];

      };
      "predicates-tree" = rec {
        crateName = "predicates-tree";
        version = "1.0.5";
        edition = "2018";
        sha256 = "0cn02rg1nm83x9h9qmf00whmb7vak9nshhrndmna682hw9nxx1jd";
        authors = [
          "Nick Stevens <nick@bitcurry.com>"
        ];
        dependencies = [
          {
            name = "predicates-core";
            packageId = "predicates-core";
          }
          {
            name = "termtree";
            packageId = "termtree";
          }
        ];

      };
      "pretty_assertions" = rec {
        crateName = "pretty_assertions";
        version = "0.7.2";
        edition = "2018";
        sha256 = "12yris0ni87wvzhj23a5nnz7amskvahhnpikx5snhdyg09y0xaqw";
        authors = [
          "Colin Kiegel <kiegel@gmx.de>"
          "Florent Fayolle <florent.fayolle69@gmail.com>"
          "Tom Milligan <code@tommilligan.net>"
        ];
        dependencies = [
          {
            name = "ansi_term";
            packageId = "ansi_term";
          }
          {
            name = "ctor";
            packageId = "ctor";
            target = { target, features }: (target."windows" or false);
          }
          {
            name = "diff";
            packageId = "diff";
          }
          {
            name = "output_vt100";
            packageId = "output_vt100";
            target = { target, features }: (target."windows" or false);
          }
        ];

      };
      "proc-macro-crate 0.1.5" = rec {
        crateName = "proc-macro-crate";
        version = "0.1.5";
        edition = "2018";
        sha256 = "11cpihdk9ba68hzw95aa8zxn0i5g6kdrfd4l2cy3d5jvb72a6vhx";
        authors = [
          "Bastian Köcher <git@kchr.de>"
        ];
        dependencies = [
          {
            name = "toml";
            packageId = "toml";
          }
        ];

      };
      "proc-macro-crate 1.1.0" = rec {
        crateName = "proc-macro-crate";
        version = "1.1.0";
        edition = "2018";
        sha256 = "10vgiwpp9rbi999pbn67p3r560z92bpfqszpsfs8ky6ai5lcxfhy";
        authors = [
          "Bastian Köcher <git@kchr.de>"
        ];
        dependencies = [
          {
            name = "thiserror";
            packageId = "thiserror";
          }
          {
            name = "toml";
            packageId = "toml";
          }
        ];

      };
      "proc-macro-error" = rec {
        crateName = "proc-macro-error";
        version = "1.0.4";
        edition = "2018";
        sha256 = "1373bhxaf0pagd8zkyd03kkx6bchzf6g0dkwrwzsnal9z47lj9fs";
        authors = [
          "CreepySkeleton <creepy-skeleton@yandex.ru>"
        ];
        dependencies = [
          {
            name = "proc-macro-error-attr";
            packageId = "proc-macro-error-attr";
          }
          {
            name = "proc-macro2";
            packageId = "proc-macro2";
          }
          {
            name = "quote";
            packageId = "quote";
          }
          {
            name = "syn";
            packageId = "syn";
            optional = true;
            usesDefaultFeatures = false;
          }
        ];
        buildDependencies = [
          {
            name = "version_check";
            packageId = "version_check 0.9.4";
          }
        ];
        features = {
          "default" = [ "syn-error" ];
          "syn-error" = [ "syn" ];
        };
        resolvedDefaultFeatures = [ "default" "syn" "syn-error" ];
      };
      "proc-macro-error-attr" = rec {
        crateName = "proc-macro-error-attr";
        version = "1.0.4";
        edition = "2018";
        sha256 = "0sgq6m5jfmasmwwy8x4mjygx5l7kp8s4j60bv25ckv2j1qc41gm1";
        procMacro = true;
        authors = [
          "CreepySkeleton <creepy-skeleton@yandex.ru>"
        ];
        dependencies = [
          {
            name = "proc-macro2";
            packageId = "proc-macro2";
          }
          {
            name = "quote";
            packageId = "quote";
          }
        ];
        buildDependencies = [
          {
            name = "version_check";
            packageId = "version_check 0.9.4";
          }
        ];

      };
      "proc-macro2" = rec {
        crateName = "proc-macro2";
        version = "1.0.36";
        edition = "2018";
        sha256 = "0adh6gvs31x6pfwmygypmzrv1jc7kjq568vsqcfaxk7vhdc2sd67";
        authors = [
          "David Tolnay <dtolnay@gmail.com>"
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        dependencies = [
          {
            name = "unicode-xid";
            packageId = "unicode-xid";
          }
        ];
        features = {
          "default" = [ "proc-macro" ];
        };
        resolvedDefaultFeatures = [ "default" "proc-macro" "span-locations" ];
      };
      "proptest 1.0.0 (git+https://github.com/heliaxdev/proptest?branch=tomas/sm#d8fd7ad8897df353987d2c41793b5fe164fed9b9)" = rec {
        crateName = "proptest";
        version = "1.0.0";
        edition = "2018";
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/heliaxdev/proptest";
          rev = "d8fd7ad8897df353987d2c41793b5fe164fed9b9";
          sha256 = "0yfdzz3hllk2rhv5zr48ldkl5i2xn56qvkngr5fsc5i9qjc1y0cd";
        };
        authors = [
          "Jason Lingle"
        ];
        dependencies = [
          {
            name = "bit-set";
            packageId = "bit-set";
            optional = true;
          }
          {
            name = "bitflags";
            packageId = "bitflags";
          }
          {
            name = "byteorder";
            packageId = "byteorder";
            usesDefaultFeatures = false;
          }
          {
            name = "lazy_static";
            packageId = "lazy_static 1.4.0";
            optional = true;
          }
          {
            name = "num-traits";
            packageId = "num-traits 0.2.14";
            usesDefaultFeatures = false;
          }
          {
            name = "quick-error";
            packageId = "quick-error 2.0.1";
            optional = true;
          }
          {
            name = "rand";
            packageId = "rand 0.8.4";
            usesDefaultFeatures = false;
            features = [ "alloc" ];
          }
          {
            name = "rand_chacha";
            packageId = "rand_chacha 0.3.1";
            usesDefaultFeatures = false;
          }
          {
            name = "rand_xorshift";
            packageId = "rand_xorshift 0.3.0";
          }
          {
            name = "regex-syntax";
            packageId = "regex-syntax";
            optional = true;
          }
          {
            name = "rusty-fork";
            packageId = "rusty-fork";
            optional = true;
            usesDefaultFeatures = false;
          }
          {
            name = "tempfile";
            packageId = "tempfile";
            optional = true;
          }
        ];
        features = {
          "default" = [ "std" "fork" "timeout" "bit-set" "break-dead-code" ];
          "default-code-coverage" = [ "std" "fork" "timeout" "bit-set" ];
          "fork" = [ "std" "rusty-fork" "tempfile" ];
          "hardware-rng" = [ "x86" ];
          "std" = [ "rand/std" "byteorder/std" "lazy_static" "quick-error" "regex-syntax" "num-traits/std" ];
          "timeout" = [ "fork" "rusty-fork/timeout" ];
        };
        resolvedDefaultFeatures = [ "bit-set" "break-dead-code" "default" "fork" "lazy_static" "quick-error" "regex-syntax" "rusty-fork" "std" "tempfile" "timeout" ];
      };
      "proptest 1.0.0 (registry+https://github.com/rust-lang/crates.io-index)" = rec {
        crateName = "proptest";
        version = "1.0.0";
        edition = "2018";
        sha256 = "1rdhjnf0xma5rmsq04d31n2vq1pgbm42pjc6jn3jsj8qgz09q38y";
        authors = [
          "Jason Lingle"
        ];
        dependencies = [
          {
            name = "bit-set";
            packageId = "bit-set";
            optional = true;
          }
          {
            name = "bitflags";
            packageId = "bitflags";
          }
          {
            name = "byteorder";
            packageId = "byteorder";
            usesDefaultFeatures = false;
          }
          {
            name = "lazy_static";
            packageId = "lazy_static 1.4.0";
            optional = true;
          }
          {
            name = "num-traits";
            packageId = "num-traits 0.2.14";
            usesDefaultFeatures = false;
          }
          {
            name = "quick-error";
            packageId = "quick-error 2.0.1";
            optional = true;
          }
          {
            name = "rand";
            packageId = "rand 0.8.4";
            usesDefaultFeatures = false;
            features = [ "alloc" ];
          }
          {
            name = "rand_chacha";
            packageId = "rand_chacha 0.3.1";
            usesDefaultFeatures = false;
          }
          {
            name = "rand_xorshift";
            packageId = "rand_xorshift 0.3.0";
          }
          {
            name = "regex-syntax";
            packageId = "regex-syntax";
            optional = true;
          }
          {
            name = "rusty-fork";
            packageId = "rusty-fork";
            optional = true;
            usesDefaultFeatures = false;
          }
          {
            name = "tempfile";
            packageId = "tempfile";
            optional = true;
          }
        ];
        features = {
          "default" = [ "std" "fork" "timeout" "bit-set" "break-dead-code" ];
          "default-code-coverage" = [ "std" "fork" "timeout" "bit-set" ];
          "fork" = [ "std" "rusty-fork" "tempfile" ];
          "hardware-rng" = [ "x86" ];
          "std" = [ "rand/std" "byteorder/std" "lazy_static" "quick-error" "regex-syntax" "num-traits/std" ];
          "timeout" = [ "fork" "rusty-fork/timeout" ];
        };
        resolvedDefaultFeatures = [ "bit-set" "break-dead-code" "default" "fork" "lazy_static" "quick-error" "regex-syntax" "rusty-fork" "std" "tempfile" "timeout" ];
      };
      "prost 0.7.0" = rec {
        crateName = "prost";
        version = "0.7.0";
        edition = "2018";
        sha256 = "1cj0x3cfjsbrsy3wjn9z90yhm09615nvb2qb4yyhjc52y7988scy";
        authors = [
          "Dan Burkert <dan@danburkert.com>"
        ];
        dependencies = [
          {
            name = "bytes";
            packageId = "bytes 1.1.0";
            usesDefaultFeatures = false;
          }
          {
            name = "prost-derive";
            packageId = "prost-derive 0.7.0";
            optional = true;
          }
        ];
        features = {
          "default" = [ "prost-derive" "std" ];
        };
        resolvedDefaultFeatures = [ "default" "prost-derive" "std" ];
      };
      "prost 0.9.0" = rec {
        crateName = "prost";
        version = "0.9.0";
        edition = "2018";
        sha256 = "00b0xfn80alw7h2pzr2z4dycyvsys4h5878sifaq9zdlbhkpjj24";
        authors = [
          "Dan Burkert <dan@danburkert.com>"
          "Tokio Contributors <team@tokio.rs>"
        ];
        dependencies = [
          {
            name = "bytes";
            packageId = "bytes 1.1.0";
            usesDefaultFeatures = false;
          }
          {
            name = "prost-derive";
            packageId = "prost-derive 0.9.0";
            optional = true;
          }
        ];
        features = {
          "default" = [ "prost-derive" "std" ];
        };
        resolvedDefaultFeatures = [ "default" "prost-derive" "std" ];
      };
      "prost-build 0.7.0" = rec {
        crateName = "prost-build";
        version = "0.7.0";
        edition = "2018";
        sha256 = "18szvnc5n6gyqjf728745r28mk4zkxilc8m9ycm9qry2bbbyplrj";
        authors = [
          "Dan Burkert <dan@danburkert.com>"
        ];
        dependencies = [
          {
            name = "bytes";
            packageId = "bytes 1.1.0";
            usesDefaultFeatures = false;
          }
          {
            name = "heck";
            packageId = "heck";
          }
          {
            name = "itertools";
            packageId = "itertools 0.9.0";
          }
          {
            name = "log";
            packageId = "log 0.4.14";
          }
          {
            name = "multimap";
            packageId = "multimap";
            usesDefaultFeatures = false;
          }
          {
            name = "petgraph";
            packageId = "petgraph 0.5.1";
            usesDefaultFeatures = false;
          }
          {
            name = "prost";
            packageId = "prost 0.7.0";
            usesDefaultFeatures = false;
          }
          {
            name = "prost-types";
            packageId = "prost-types 0.7.0";
            usesDefaultFeatures = false;
          }
          {
            name = "tempfile";
            packageId = "tempfile";
          }
        ];
        buildDependencies = [
          {
            name = "which";
            packageId = "which";
            usesDefaultFeatures = false;
          }
        ];

      };
      "prost-build 0.9.0" = rec {
        crateName = "prost-build";
        version = "0.9.0";
        edition = "2018";
        sha256 = "1xalqfhrhfyd12famfz59zr2yygyw4zlz774b4v4cpb7zci1g532";
        authors = [
          "Dan Burkert <dan@danburkert.com>"
          "Tokio Contributors <team@tokio.rs>"
        ];
        dependencies = [
          {
            name = "bytes";
            packageId = "bytes 1.1.0";
            usesDefaultFeatures = false;
          }
          {
            name = "heck";
            packageId = "heck";
          }
          {
            name = "itertools";
            packageId = "itertools 0.10.3";
          }
          {
            name = "lazy_static";
            packageId = "lazy_static 1.4.0";
          }
          {
            name = "log";
            packageId = "log 0.4.14";
          }
          {
            name = "multimap";
            packageId = "multimap";
            usesDefaultFeatures = false;
          }
          {
            name = "petgraph";
            packageId = "petgraph 0.6.0";
            usesDefaultFeatures = false;
          }
          {
            name = "prost";
            packageId = "prost 0.9.0";
            usesDefaultFeatures = false;
          }
          {
            name = "prost-types";
            packageId = "prost-types 0.9.0";
            usesDefaultFeatures = false;
          }
          {
            name = "regex";
            packageId = "regex";
          }
          {
            name = "tempfile";
            packageId = "tempfile";
          }
        ];
        buildDependencies = [
          {
            name = "which";
            packageId = "which";
            usesDefaultFeatures = false;
          }
        ];

      };
      "prost-derive 0.7.0" = rec {
        crateName = "prost-derive";
        version = "0.7.0";
        edition = "2018";
        sha256 = "1m7m5bamjpnl2yhqgyqcsfv02xhad76pplx7rdh53jwf03rib6hn";
        procMacro = true;
        authors = [
          "Dan Burkert <dan@danburkert.com>"
        ];
        dependencies = [
          {
            name = "anyhow";
            packageId = "anyhow";
          }
          {
            name = "itertools";
            packageId = "itertools 0.9.0";
          }
          {
            name = "proc-macro2";
            packageId = "proc-macro2";
          }
          {
            name = "quote";
            packageId = "quote";
          }
          {
            name = "syn";
            packageId = "syn";
            features = [ "extra-traits" ];
          }
        ];

      };
      "prost-derive 0.9.0" = rec {
        crateName = "prost-derive";
        version = "0.9.0";
        edition = "2018";
        sha256 = "1zi0qway5anz5ik3k1yrc2av81sjcqvqy9lnivv0nzp0ccr1mk7r";
        procMacro = true;
        authors = [
          "Dan Burkert <dan@danburkert.com>"
          "Tokio Contributors <team@tokio.rs>"
        ];
        dependencies = [
          {
            name = "anyhow";
            packageId = "anyhow";
          }
          {
            name = "itertools";
            packageId = "itertools 0.10.3";
          }
          {
            name = "proc-macro2";
            packageId = "proc-macro2";
          }
          {
            name = "quote";
            packageId = "quote";
          }
          {
            name = "syn";
            packageId = "syn";
            features = [ "extra-traits" ];
          }
        ];

      };
      "prost-types 0.7.0" = rec {
        crateName = "prost-types";
        version = "0.7.0";
        edition = "2018";
        sha256 = "1fziv7q5gy9rl7idksfxd333c63pc2dgl1yg488ivarxv76xf65m";
        authors = [
          "Dan Burkert <dan@danburkert.com>"
        ];
        dependencies = [
          {
            name = "bytes";
            packageId = "bytes 1.1.0";
            usesDefaultFeatures = false;
          }
          {
            name = "prost";
            packageId = "prost 0.7.0";
            usesDefaultFeatures = false;
            features = [ "prost-derive" ];
          }
        ];
        features = {
          "default" = [ "std" ];
          "std" = [ "prost/std" ];
        };
      };
      "prost-types 0.9.0" = rec {
        crateName = "prost-types";
        version = "0.9.0";
        edition = "2018";
        sha256 = "02pgz98nn62bb8glspb9m4fn3rrr5sc0y1wk4qnlhg3fhc77ljsk";
        authors = [
          "Dan Burkert <dan@danburkert.com>"
          "Tokio Contributors <team@tokio.rs>"
        ];
        dependencies = [
          {
            name = "bytes";
            packageId = "bytes 1.1.0";
            usesDefaultFeatures = false;
          }
          {
            name = "prost";
            packageId = "prost 0.9.0";
            usesDefaultFeatures = false;
            features = [ "prost-derive" ];
          }
        ];
        features = {
          "default" = [ "std" ];
          "std" = [ "prost/std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "ptr_meta" = rec {
        crateName = "ptr_meta";
        version = "0.1.4";
        edition = "2018";
        sha256 = "1wd4wy0wxrcays4f1gy8gwcmxg7mskmivcv40p0hidh6xbvwqf07";
        authors = [
          "David Koloski <djkoloski@gmail.com>"
        ];
        dependencies = [
          {
            name = "ptr_meta_derive";
            packageId = "ptr_meta_derive";
          }
        ];
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "std" ];
      };
      "ptr_meta_derive" = rec {
        crateName = "ptr_meta_derive";
        version = "0.1.4";
        edition = "2018";
        sha256 = "1b69cav9wn67cixshizii0q5mlbl0lihx706vcrzm259zkdlbf0n";
        procMacro = true;
        authors = [
          "David Koloski <djkoloski@gmail.com>"
        ];
        dependencies = [
          {
            name = "proc-macro2";
            packageId = "proc-macro2";
          }
          {
            name = "quote";
            packageId = "quote";
          }
          {
            name = "syn";
            packageId = "syn";
            features = [ "full" ];
          }
        ];

      };
      "pwasm-utils" = rec {
        crateName = "pwasm-utils";
        version = "0.18.2";
        edition = "2018";
        crateBin = [];
        sha256 = "0p0z8kv6860xg49x5aixmq01j86j7fwmilymrkngdf00zf2362w8";
        authors = [
          "Nikolay Volf <nikvolf@gmail.com>"
          "Sergey Pepyakin <s.pepyakin@gmail.com>"
        ];
        dependencies = [
          {
            name = "byteorder";
            packageId = "byteorder";
            usesDefaultFeatures = false;
          }
          {
            name = "log";
            packageId = "log 0.4.14";
            usesDefaultFeatures = false;
          }
          {
            name = "parity-wasm";
            packageId = "parity-wasm";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "cli" = [ "std" "glob" "clap" "env_logger" "lazy_static" ];
          "default" = [ "std" ];
          "std" = [ "parity-wasm/std" "log/std" "byteorder/std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "quick-error 1.2.3" = rec {
        crateName = "quick-error";
        version = "1.2.3";
        edition = "2015";
        sha256 = "1q6za3v78hsspisc197bg3g7rpc989qycy8ypr8ap8igv10ikl51";
        authors = [
          "Paul Colomiets <paul@colomiets.name>"
          "Colin Kiegel <kiegel@gmx.de>"
        ];

      };
      "quick-error 2.0.1" = rec {
        crateName = "quick-error";
        version = "2.0.1";
        edition = "2018";
        sha256 = "18z6r2rcjvvf8cn92xjhm2qc3jpd1ljvcbf12zv0k9p565gmb4x9";
        authors = [
          "Paul Colomiets <paul@colomiets.name>"
          "Colin Kiegel <kiegel@gmx.de>"
        ];

      };
      "quicksink" = rec {
        crateName = "quicksink";
        version = "0.1.2";
        edition = "2018";
        sha256 = "0n7qgajwz01ksx33n4jywcx09whxh2b2fnf674ahn5jsbs0krpkp";
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "futures-core";
            packageId = "futures-core";
          }
          {
            name = "futures-sink";
            packageId = "futures-sink";
          }
          {
            name = "pin-project-lite";
            packageId = "pin-project-lite 0.1.12";
          }
        ];

      };
      "quote" = rec {
        crateName = "quote";
        version = "1.0.15";
        edition = "2018";
        sha256 = "0id1q0875pvhkg0mlb5z8gzdm2g2rbbz76bfzhv331lrm2b3wkc6";
        authors = [
          "David Tolnay <dtolnay@gmail.com>"
        ];
        dependencies = [
          {
            name = "proc-macro2";
            packageId = "proc-macro2";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "default" = [ "proc-macro" ];
          "proc-macro" = [ "proc-macro2/proc-macro" ];
        };
        resolvedDefaultFeatures = [ "default" "proc-macro" ];
      };
      "rand 0.6.5" = rec {
        crateName = "rand";
        version = "0.6.5";
        edition = "2015";
        sha256 = "1jl4449jcl4wgmzld6ffwqj5gwxrp8zvx8w573g1z368qg6xlwbd";
        authors = [
          "The Rand Project Developers"
          "The Rust Project Developers"
        ];
        dependencies = [
          {
            name = "libc";
            packageId = "libc";
            usesDefaultFeatures = false;
            target = { target, features }: (target."unix" or false);
          }
          {
            name = "rand_chacha";
            packageId = "rand_chacha 0.1.1";
          }
          {
            name = "rand_core";
            packageId = "rand_core 0.4.2";
          }
          {
            name = "rand_hc";
            packageId = "rand_hc 0.1.0";
          }
          {
            name = "rand_isaac";
            packageId = "rand_isaac";
          }
          {
            name = "rand_jitter";
            packageId = "rand_jitter";
          }
          {
            name = "rand_os";
            packageId = "rand_os";
            optional = true;
          }
          {
            name = "rand_pcg";
            packageId = "rand_pcg";
          }
          {
            name = "rand_xorshift";
            packageId = "rand_xorshift 0.1.1";
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.9";
            target = { target, features }: (target."windows" or false);
            features = [ "minwindef" "ntsecapi" "profileapi" "winnt" ];
          }
        ];
        buildDependencies = [
          {
            name = "autocfg";
            packageId = "autocfg 0.1.7";
          }
        ];
        features = {
          "alloc" = [ "rand_core/alloc" ];
          "default" = [ "std" ];
          "nightly" = [ "simd_support" ];
          "serde1" = [ "rand_core/serde1" "rand_isaac/serde1" "rand_xorshift/serde1" ];
          "simd_support" = [ "packed_simd" ];
          "std" = [ "rand_core/std" "alloc" "rand_os" "rand_jitter/std" ];
          "stdweb" = [ "rand_os/stdweb" ];
          "wasm-bindgen" = [ "rand_os/wasm-bindgen" ];
        };
        resolvedDefaultFeatures = [ "alloc" "default" "rand_os" "std" ];
      };
      "rand 0.7.3" = rec {
        crateName = "rand";
        version = "0.7.3";
        edition = "2018";
        sha256 = "00sdaimkbz491qgi6qxkv582yivl32m2jd401kzbn94vsiwicsva";
        authors = [
          "The Rand Project Developers"
          "The Rust Project Developers"
        ];
        dependencies = [
          {
            name = "getrandom";
            packageId = "getrandom 0.1.16";
            rename = "getrandom_package";
            optional = true;
          }
          {
            name = "libc";
            packageId = "libc";
            optional = true;
            usesDefaultFeatures = false;
            target = { target, features }: (target."unix" or false);
          }
          {
            name = "rand_chacha";
            packageId = "rand_chacha 0.2.2";
            usesDefaultFeatures = false;
            target = { target, features }: (!(target."os" == "emscripten"));
          }
          {
            name = "rand_core";
            packageId = "rand_core 0.5.1";
          }
          {
            name = "rand_hc";
            packageId = "rand_hc 0.2.0";
            target = { target, features }: (target."os" == "emscripten");
          }
        ];
        devDependencies = [
          {
            name = "rand_hc";
            packageId = "rand_hc 0.2.0";
          }
        ];
        features = {
          "alloc" = [ "rand_core/alloc" ];
          "default" = [ "std" ];
          "getrandom" = [ "getrandom_package" "rand_core/getrandom" ];
          "nightly" = [ "simd_support" ];
          "simd_support" = [ "packed_simd" ];
          "small_rng" = [ "rand_pcg" ];
          "std" = [ "rand_core/std" "rand_chacha/std" "alloc" "getrandom" "libc" ];
          "stdweb" = [ "getrandom_package/stdweb" ];
          "wasm-bindgen" = [ "getrandom_package/wasm-bindgen" ];
        };
        resolvedDefaultFeatures = [ "alloc" "default" "getrandom" "getrandom_package" "libc" "std" ];
      };
      "rand 0.8.4" = rec {
        crateName = "rand";
        version = "0.8.4";
        edition = "2018";
        sha256 = "1n5wska2fbfj4dsfz8mc0pd0dgjlrb6c9anpk5mwym345rip6x9f";
        authors = [
          "The Rand Project Developers"
          "The Rust Project Developers"
        ];
        dependencies = [
          {
            name = "libc";
            packageId = "libc";
            optional = true;
            usesDefaultFeatures = false;
            target = { target, features }: (target."unix" or false);
          }
          {
            name = "rand_chacha";
            packageId = "rand_chacha 0.3.1";
            optional = true;
            usesDefaultFeatures = false;
            target = { target, features }: (!(target."os" == "emscripten"));
          }
          {
            name = "rand_core";
            packageId = "rand_core 0.6.3";
          }
          {
            name = "rand_hc";
            packageId = "rand_hc 0.3.1";
            optional = true;
            target = { target, features }: (target."os" == "emscripten");
          }
        ];
        devDependencies = [
          {
            name = "rand_hc";
            packageId = "rand_hc 0.3.1";
          }
        ];
        features = {
          "alloc" = [ "rand_core/alloc" ];
          "default" = [ "std" "std_rng" ];
          "getrandom" = [ "rand_core/getrandom" ];
          "serde1" = [ "serde" "rand_core/serde1" ];
          "simd_support" = [ "packed_simd" ];
          "std" = [ "rand_core/std" "rand_chacha/std" "alloc" "getrandom" "libc" ];
          "std_rng" = [ "rand_chacha" "rand_hc" ];
        };
        resolvedDefaultFeatures = [ "alloc" "default" "getrandom" "libc" "rand_chacha" "rand_hc" "small_rng" "std" "std_rng" ];
      };
      "rand_chacha 0.1.1" = rec {
        crateName = "rand_chacha";
        version = "0.1.1";
        edition = "2015";
        sha256 = "1vxwyzs4fy1ffjc8l00fsyygpiss135irjf7nyxgq2v0lqf3lvam";
        authors = [
          "The Rand Project Developers"
          "The Rust Project Developers"
        ];
        dependencies = [
          {
            name = "rand_core";
            packageId = "rand_core 0.3.1";
            usesDefaultFeatures = false;
          }
        ];
        buildDependencies = [
          {
            name = "autocfg";
            packageId = "autocfg 0.1.7";
          }
        ];

      };
      "rand_chacha 0.2.2" = rec {
        crateName = "rand_chacha";
        version = "0.2.2";
        edition = "2018";
        sha256 = "00il36fkdbsmpr99p9ksmmp6dn1md7rmnwmz0rr77jbrca2yvj7l";
        authors = [
          "The Rand Project Developers"
          "The Rust Project Developers"
          "The CryptoCorrosion Contributors"
        ];
        dependencies = [
          {
            name = "ppv-lite86";
            packageId = "ppv-lite86";
            usesDefaultFeatures = false;
            features = [ "simd" ];
          }
          {
            name = "rand_core";
            packageId = "rand_core 0.5.1";
          }
        ];
        features = {
          "default" = [ "std" "simd" ];
          "std" = [ "ppv-lite86/std" ];
        };
        resolvedDefaultFeatures = [ "std" ];
      };
      "rand_chacha 0.3.1" = rec {
        crateName = "rand_chacha";
        version = "0.3.1";
        edition = "2018";
        sha256 = "123x2adin558xbhvqb8w4f6syjsdkmqff8cxwhmjacpsl1ihmhg6";
        authors = [
          "The Rand Project Developers"
          "The Rust Project Developers"
          "The CryptoCorrosion Contributors"
        ];
        dependencies = [
          {
            name = "ppv-lite86";
            packageId = "ppv-lite86";
            usesDefaultFeatures = false;
            features = [ "simd" ];
          }
          {
            name = "rand_core";
            packageId = "rand_core 0.6.3";
          }
        ];
        features = {
          "default" = [ "std" ];
          "serde1" = [ "serde" ];
          "std" = [ "ppv-lite86/std" ];
        };
        resolvedDefaultFeatures = [ "std" ];
      };
      "rand_core 0.3.1" = rec {
        crateName = "rand_core";
        version = "0.3.1";
        edition = "2015";
        sha256 = "0jzdgszfa4bliigiy4hi66k7fs3gfwi2qxn8vik84ph77fwdwvvs";
        authors = [
          "The Rand Project Developers"
          "The Rust Project Developers"
        ];
        dependencies = [
          {
            name = "rand_core";
            packageId = "rand_core 0.4.2";
          }
        ];
        features = {
          "alloc" = [ "rand_core/alloc" ];
          "default" = [ "std" ];
          "serde1" = [ "rand_core/serde1" ];
          "std" = [ "rand_core/std" ];
        };
      };
      "rand_core 0.4.2" = rec {
        crateName = "rand_core";
        version = "0.4.2";
        edition = "2015";
        sha256 = "1p09ynysrq1vcdlmcqnapq4qakl2yd1ng3kxh3qscpx09k2a6cww";
        authors = [
          "The Rand Project Developers"
          "The Rust Project Developers"
        ];
        features = {
          "serde1" = [ "serde" "serde_derive" ];
          "std" = [ "alloc" ];
        };
        resolvedDefaultFeatures = [ "alloc" "std" ];
      };
      "rand_core 0.5.1" = rec {
        crateName = "rand_core";
        version = "0.5.1";
        edition = "2018";
        sha256 = "06bdvx08v3rkz451cm7z59xwwqn1rkfh6v9ay77b14f8dwlybgch";
        authors = [
          "The Rand Project Developers"
          "The Rust Project Developers"
        ];
        dependencies = [
          {
            name = "getrandom";
            packageId = "getrandom 0.1.16";
            optional = true;
          }
        ];
        features = {
          "serde1" = [ "serde" ];
          "std" = [ "alloc" "getrandom" "getrandom/std" ];
        };
        resolvedDefaultFeatures = [ "alloc" "getrandom" "std" ];
      };
      "rand_core 0.6.3" = rec {
        crateName = "rand_core";
        version = "0.6.3";
        edition = "2018";
        sha256 = "1rxlxc3bpzgwphcg9c9yasvv9idipcg2z2y4j0vlb52jyl418kyk";
        authors = [
          "The Rand Project Developers"
          "The Rust Project Developers"
        ];
        dependencies = [
          {
            name = "getrandom";
            packageId = "getrandom 0.2.4";
            optional = true;
          }
        ];
        features = {
          "serde1" = [ "serde" ];
          "std" = [ "alloc" "getrandom" "getrandom/std" ];
        };
        resolvedDefaultFeatures = [ "alloc" "getrandom" "std" ];
      };
      "rand_hc 0.1.0" = rec {
        crateName = "rand_hc";
        version = "0.1.0";
        edition = "2015";
        sha256 = "1i0vl8q5ddvvy0x8hf1zxny393miyzxkwqnw31ifg6p0gdy6fh3v";
        authors = [
          "The Rand Project Developers"
        ];
        dependencies = [
          {
            name = "rand_core";
            packageId = "rand_core 0.3.1";
            usesDefaultFeatures = false;
          }
        ];

      };
      "rand_hc 0.2.0" = rec {
        crateName = "rand_hc";
        version = "0.2.0";
        edition = "2018";
        sha256 = "0g31sqwpmsirdlwr0svnacr4dbqyz339im4ssl9738cjgfpjjcfa";
        authors = [
          "The Rand Project Developers"
        ];
        dependencies = [
          {
            name = "rand_core";
            packageId = "rand_core 0.5.1";
          }
        ];

      };
      "rand_hc 0.3.1" = rec {
        crateName = "rand_hc";
        version = "0.3.1";
        edition = "2018";
        sha256 = "1rwpykyvhkxs4jvqdja3mzp9dqaqamzn113cxaigs9z2dmcry7nm";
        authors = [
          "The Rand Project Developers"
        ];
        dependencies = [
          {
            name = "rand_core";
            packageId = "rand_core 0.6.3";
          }
        ];

      };
      "rand_isaac" = rec {
        crateName = "rand_isaac";
        version = "0.1.1";
        edition = "2015";
        sha256 = "027flpjr4znx2csxk7gxb7vrf9c7y5mydmvg5az2afgisp4rgnfy";
        authors = [
          "The Rand Project Developers"
          "The Rust Project Developers"
        ];
        dependencies = [
          {
            name = "rand_core";
            packageId = "rand_core 0.3.1";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "serde1" = [ "serde" "serde_derive" "rand_core/serde1" ];
        };
      };
      "rand_jitter" = rec {
        crateName = "rand_jitter";
        version = "0.1.4";
        edition = "2015";
        sha256 = "16z387y46bfz3csc42zxbjq89vcr1axqacncvv8qhyy93p4xarhi";
        authors = [
          "The Rand Project Developers"
        ];
        dependencies = [
          {
            name = "libc";
            packageId = "libc";
            usesDefaultFeatures = false;
            target = { target, features }: ((target."os" == "macos") || (target."os" == "ios"));
          }
          {
            name = "rand_core";
            packageId = "rand_core 0.4.2";
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.9";
            target = { target, features }: (target."os" == "windows");
            features = [ "profileapi" ];
          }
        ];
        features = {
          "std" = [ "rand_core/std" ];
        };
        resolvedDefaultFeatures = [ "std" ];
      };
      "rand_os" = rec {
        crateName = "rand_os";
        version = "0.1.3";
        edition = "2015";
        sha256 = "0wahppm0s64gkr2vmhcgwc0lij37in1lgfxg5rbgqlz0l5vgcxbv";
        authors = [
          "The Rand Project Developers"
        ];
        dependencies = [
          {
            name = "cloudabi";
            packageId = "cloudabi";
            target = { target, features }: (target."os" == "cloudabi");
          }
          {
            name = "fuchsia-cprng";
            packageId = "fuchsia-cprng";
            target = { target, features }: (target."os" == "fuchsia");
          }
          {
            name = "libc";
            packageId = "libc";
            target = { target, features }: (target."unix" or false);
          }
          {
            name = "rand_core";
            packageId = "rand_core 0.4.2";
            features = [ "std" ];
          }
          {
            name = "rdrand";
            packageId = "rdrand";
            target = { target, features }: (target."env" == "sgx");
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.9";
            target = { target, features }: (target."windows" or false);
            features = [ "minwindef" "ntsecapi" "winnt" ];
          }
        ];

      };
      "rand_pcg" = rec {
        crateName = "rand_pcg";
        version = "0.1.2";
        edition = "2015";
        sha256 = "0i0bdla18a8x4jn1w0fxsbs3jg7ajllz6azmch1zw33r06dv1ydb";
        authors = [
          "The Rand Project Developers"
        ];
        dependencies = [
          {
            name = "rand_core";
            packageId = "rand_core 0.4.2";
          }
        ];
        buildDependencies = [
          {
            name = "autocfg";
            packageId = "autocfg 0.1.7";
          }
        ];
        features = {
          "serde1" = [ "serde" "serde_derive" ];
        };
      };
      "rand_xorshift 0.1.1" = rec {
        crateName = "rand_xorshift";
        version = "0.1.1";
        edition = "2015";
        sha256 = "0p2x8nr00hricpi2m6ca5vysiha7ybnghz79yqhhx6sl4gkfkxyb";
        authors = [
          "The Rand Project Developers"
          "The Rust Project Developers"
        ];
        dependencies = [
          {
            name = "rand_core";
            packageId = "rand_core 0.3.1";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "serde1" = [ "serde" "serde_derive" ];
        };
      };
      "rand_xorshift 0.3.0" = rec {
        crateName = "rand_xorshift";
        version = "0.3.0";
        edition = "2018";
        sha256 = "13vcag7gmqspzyabfl1gr9ykvxd2142q2agrj8dkyjmfqmgg4nyj";
        authors = [
          "The Rand Project Developers"
          "The Rust Project Developers"
        ];
        dependencies = [
          {
            name = "rand_core";
            packageId = "rand_core 0.6.3";
          }
        ];
        features = {
          "serde1" = [ "serde" ];
        };
      };
      "rawpointer" = rec {
        crateName = "rawpointer";
        version = "0.2.1";
        edition = "2015";
        sha256 = "1qy1qvj17yh957vhffnq6agq0brvylw27xgks171qrah75wmg8v0";
        authors = [
          "bluss"
        ];

      };
      "rayon" = rec {
        crateName = "rayon";
        version = "1.5.1";
        edition = "2018";
        sha256 = "143dl2453bazgk7rwjrickmyqd0ks3q69nfz8axcins19n0clsn0";
        authors = [
          "Niko Matsakis <niko@alum.mit.edu>"
          "Josh Stone <cuviper@gmail.com>"
        ];
        dependencies = [
          {
            name = "crossbeam-deque";
            packageId = "crossbeam-deque";
          }
          {
            name = "either";
            packageId = "either";
            usesDefaultFeatures = false;
          }
          {
            name = "rayon-core";
            packageId = "rayon-core";
          }
        ];
        buildDependencies = [
          {
            name = "autocfg";
            packageId = "autocfg 1.0.1";
          }
        ];

      };
      "rayon-core" = rec {
        crateName = "rayon-core";
        version = "1.9.1";
        edition = "2018";
        sha256 = "13kdcnqp2p1a5a3amamfjpnm7ay463vq4dfxy4rrh9shr3i210fp";
        authors = [
          "Niko Matsakis <niko@alum.mit.edu>"
          "Josh Stone <cuviper@gmail.com>"
        ];
        dependencies = [
          {
            name = "crossbeam-channel";
            packageId = "crossbeam-channel 0.5.2";
          }
          {
            name = "crossbeam-deque";
            packageId = "crossbeam-deque";
          }
          {
            name = "crossbeam-utils";
            packageId = "crossbeam-utils 0.8.6";
          }
          {
            name = "lazy_static";
            packageId = "lazy_static 1.4.0";
          }
          {
            name = "num_cpus";
            packageId = "num_cpus";
          }
        ];

      };
      "rdrand" = rec {
        crateName = "rdrand";
        version = "0.4.0";
        edition = "2015";
        sha256 = "1cjq0kwx1bk7jx3kzyciiish5gqsj7620dm43dc52sr8fzmm9037";
        authors = [
          "Simonas Kazlauskas <rdrand@kazlauskas.me>"
        ];
        dependencies = [
          {
            name = "rand_core";
            packageId = "rand_core 0.3.1";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "redox_syscall 0.1.57" = rec {
        crateName = "redox_syscall";
        version = "0.1.57";
        edition = "2015";
        sha256 = "1kh59fpwy33w9nwd5iyc283yglq8pf2s41hnhvl48iax9mz0zk21";
        libName = "syscall";
        authors = [
          "Jeremy Soller <jackpot51@gmail.com>"
        ];

      };
      "redox_syscall 0.2.10" = rec {
        crateName = "redox_syscall";
        version = "0.2.10";
        edition = "2018";
        sha256 = "1zq36bhw4c6xig340ja1jmr36iy0d3djp8smsabxx71676bg70w3";
        libName = "syscall";
        authors = [
          "Jeremy Soller <jackpot51@gmail.com>"
        ];
        dependencies = [
          {
            name = "bitflags";
            packageId = "bitflags";
          }
        ];

      };
      "redox_termios" = rec {
        crateName = "redox_termios";
        version = "0.1.2";
        edition = "2015";
        sha256 = "13zyscvmv0ib7ydw0prv9f0qvvlayfk03gdl4mqjfggxnjndhh44";
        authors = [
          "Jeremy Soller <jackpot51@gmail.com>"
        ];
        dependencies = [
          {
            name = "redox_syscall";
            packageId = "redox_syscall 0.2.10";
          }
        ];

      };
      "redox_users" = rec {
        crateName = "redox_users";
        version = "0.4.0";
        edition = "2018";
        sha256 = "0r5y1a26flkn6gkayi558jg5dzh2m2fdsapgkpn7mj01v3rk51aj";
        authors = [
          "Jose Narvaez <goyox86@gmail.com>"
          "Wesley Hershberger <mggmugginsmc@gmail.com>"
        ];
        dependencies = [
          {
            name = "getrandom";
            packageId = "getrandom 0.2.4";
            features = [ "std" ];
          }
          {
            name = "redox_syscall";
            packageId = "redox_syscall 0.2.10";
          }
        ];
        features = {
          "auth" = [ "rust-argon2" ];
          "default" = [ "auth" ];
        };
      };
      "regalloc" = rec {
        crateName = "regalloc";
        version = "0.0.31";
        edition = "2018";
        sha256 = "1ic1jdjpk4wh2ms90jj28g172cp0x0zqadydhm97bi31glwpy7sp";
        authors = [
          "The Regalloc.rs Developers"
        ];
        dependencies = [
          {
            name = "log";
            packageId = "log 0.4.14";
            usesDefaultFeatures = false;
          }
          {
            name = "rustc-hash";
            packageId = "rustc-hash";
          }
          {
            name = "smallvec";
            packageId = "smallvec 1.8.0";
          }
        ];
        features = {
          "enable-serde" = [ "serde" ];
        };
        resolvedDefaultFeatures = [ "default" ];
      };
      "regex" = rec {
        crateName = "regex";
        version = "1.5.4";
        edition = "2018";
        sha256 = "0qf479kjbmb582h4d1d6gfl75h0j8aq2nrdi5wg6zdcy6llqcynh";
        authors = [
          "The Rust Project Developers"
        ];
        dependencies = [
          {
            name = "aho-corasick";
            packageId = "aho-corasick";
            optional = true;
          }
          {
            name = "memchr";
            packageId = "memchr";
            optional = true;
          }
          {
            name = "regex-syntax";
            packageId = "regex-syntax";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "default" = [ "std" "perf" "unicode" "regex-syntax/default" ];
          "perf" = [ "perf-cache" "perf-dfa" "perf-inline" "perf-literal" ];
          "perf-literal" = [ "aho-corasick" "memchr" ];
          "unicode" = [ "unicode-age" "unicode-bool" "unicode-case" "unicode-gencat" "unicode-perl" "unicode-script" "unicode-segment" "regex-syntax/unicode" ];
          "unicode-age" = [ "regex-syntax/unicode-age" ];
          "unicode-bool" = [ "regex-syntax/unicode-bool" ];
          "unicode-case" = [ "regex-syntax/unicode-case" ];
          "unicode-gencat" = [ "regex-syntax/unicode-gencat" ];
          "unicode-perl" = [ "regex-syntax/unicode-perl" ];
          "unicode-script" = [ "regex-syntax/unicode-script" ];
          "unicode-segment" = [ "regex-syntax/unicode-segment" ];
          "unstable" = [ "pattern" ];
          "use_std" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "aho-corasick" "default" "memchr" "perf" "perf-cache" "perf-dfa" "perf-inline" "perf-literal" "std" "unicode" "unicode-age" "unicode-bool" "unicode-case" "unicode-gencat" "unicode-perl" "unicode-script" "unicode-segment" ];
      };
      "regex-automata" = rec {
        crateName = "regex-automata";
        version = "0.1.10";
        edition = "2015";
        sha256 = "0ci1hvbzhrfby5fdpf4ganhf7kla58acad9i1ff1p34dzdrhs8vc";
        authors = [
          "Andrew Gallant <jamslam@gmail.com>"
        ];
        dependencies = [
          {
            name = "regex-syntax";
            packageId = "regex-syntax";
            optional = true;
          }
        ];
        features = {
          "default" = [ "std" ];
          "std" = [ "regex-syntax" ];
          "transducer" = [ "std" "fst" ];
        };
        resolvedDefaultFeatures = [ "default" "regex-syntax" "std" ];
      };
      "regex-syntax" = rec {
        crateName = "regex-syntax";
        version = "0.6.25";
        edition = "2018";
        sha256 = "16y87hz1bxmmz6kk360cxwfm3jnbsxb3x4zw9x1gzz7khic2i5zl";
        authors = [
          "The Rust Project Developers"
        ];
        features = {
          "default" = [ "unicode" ];
          "unicode" = [ "unicode-age" "unicode-bool" "unicode-case" "unicode-gencat" "unicode-perl" "unicode-script" "unicode-segment" ];
        };
        resolvedDefaultFeatures = [ "default" "unicode" "unicode-age" "unicode-bool" "unicode-case" "unicode-gencat" "unicode-perl" "unicode-script" "unicode-segment" ];
      };
      "region" = rec {
        crateName = "region";
        version = "3.0.0";
        edition = "2018";
        sha256 = "0bji1p0c9abzh78ps5hs0ygg9pxkg7gjspll43lxr14q6v18kqbn";
        authors = [
          "Elliott Linder <elliott.darfink@gmail.com>"
        ];
        dependencies = [
          {
            name = "bitflags";
            packageId = "bitflags";
          }
          {
            name = "libc";
            packageId = "libc";
          }
          {
            name = "mach";
            packageId = "mach";
            target = { target, features }: ((target."os" == "macos") || (target."os" == "ios"));
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.9";
            target = { target, features }: (target."windows" or false);
            features = [ "basetsd" "minwindef" "sysinfoapi" "memoryapi" "winnt" ];
          }
        ];

      };
      "remove_dir_all" = rec {
        crateName = "remove_dir_all";
        version = "0.5.3";
        edition = "2015";
        sha256 = "1rzqbsgkmr053bxxl04vmvsd1njyz0nxvly97aip6aa2cmb15k9s";
        authors = [
          "Aaronepower <theaaronepower@gmail.com>"
        ];
        dependencies = [
          {
            name = "winapi";
            packageId = "winapi 0.3.9";
            target = { target, features }: (target."windows" or false);
            features = [ "std" "errhandlingapi" "winerror" "fileapi" "winbase" ];
          }
        ];

      };
      "rend" = rec {
        crateName = "rend";
        version = "0.3.6";
        edition = "2018";
        sha256 = "15fz3rw8c74586kxl6dcdn4s864ph884wfpg9shgnbrnnss69bvr";
        authors = [
          "David Koloski <djkoloski@gmail.com>"
        ];
        dependencies = [
          {
            name = "bytecheck";
            packageId = "bytecheck";
            optional = true;
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "default" = [ "std" ];
          "std" = [ "bytecheck/std" ];
          "validation" = [ "bytecheck" ];
        };
        resolvedDefaultFeatures = [ "bytecheck" "std" ];
      };
      "reqwest" = rec {
        crateName = "reqwest";
        version = "0.11.9";
        edition = "2018";
        sha256 = "0995ng67r8rry8864wxp2iwkpr4sc34fgny6p9wrllwa93ql5wl7";
        authors = [
          "Sean McArthur <sean@seanmonstar.com>"
        ];
        dependencies = [
          {
            name = "base64";
            packageId = "base64 0.13.0";
            target = { target, features }: (!(target."arch" == "wasm32"));
          }
          {
            name = "bytes";
            packageId = "bytes 1.1.0";
          }
          {
            name = "encoding_rs";
            packageId = "encoding_rs";
            target = { target, features }: (!(target."arch" == "wasm32"));
          }
          {
            name = "futures-core";
            packageId = "futures-core";
            usesDefaultFeatures = false;
            target = { target, features }: (!(target."arch" == "wasm32"));
          }
          {
            name = "futures-util";
            packageId = "futures-util";
            usesDefaultFeatures = false;
            target = { target, features }: (!(target."arch" == "wasm32"));
          }
          {
            name = "h2";
            packageId = "h2";
            target = { target, features }: (!(target."arch" == "wasm32"));
          }
          {
            name = "http";
            packageId = "http";
          }
          {
            name = "http-body";
            packageId = "http-body";
            target = { target, features }: (!(target."arch" == "wasm32"));
          }
          {
            name = "hyper";
            packageId = "hyper 0.14.16";
            usesDefaultFeatures = false;
            target = { target, features }: (!(target."arch" == "wasm32"));
            features = [ "tcp" "http1" "http2" "client" "runtime" ];
          }
          {
            name = "hyper-tls";
            packageId = "hyper-tls";
            optional = true;
            target = { target, features }: (!(target."arch" == "wasm32"));
          }
          {
            name = "ipnet";
            packageId = "ipnet";
            target = { target, features }: (!(target."arch" == "wasm32"));
          }
          {
            name = "js-sys";
            packageId = "js-sys";
            target = { target, features }: (target."arch" == "wasm32");
          }
          {
            name = "lazy_static";
            packageId = "lazy_static 1.4.0";
            target = { target, features }: (!(target."arch" == "wasm32"));
          }
          {
            name = "log";
            packageId = "log 0.4.14";
            target = { target, features }: (!(target."arch" == "wasm32"));
          }
          {
            name = "mime";
            packageId = "mime 0.3.16";
            target = { target, features }: (!(target."arch" == "wasm32"));
          }
          {
            name = "native-tls";
            packageId = "native-tls";
            rename = "native-tls-crate";
            optional = true;
            target = { target, features }: (!(target."arch" == "wasm32"));
          }
          {
            name = "percent-encoding";
            packageId = "percent-encoding 2.1.0";
            target = { target, features }: (!(target."arch" == "wasm32"));
          }
          {
            name = "pin-project-lite";
            packageId = "pin-project-lite 0.2.8";
            target = { target, features }: (!(target."arch" == "wasm32"));
          }
          {
            name = "serde";
            packageId = "serde 1.0.136";
          }
          {
            name = "serde_json";
            packageId = "serde_json";
            optional = true;
          }
          {
            name = "serde_json";
            packageId = "serde_json";
            target = { target, features }: (target."arch" == "wasm32");
          }
          {
            name = "serde_urlencoded";
            packageId = "serde_urlencoded";
          }
          {
            name = "tokio";
            packageId = "tokio";
            usesDefaultFeatures = false;
            target = { target, features }: (!(target."arch" == "wasm32"));
            features = [ "net" "time" ];
          }
          {
            name = "tokio-native-tls";
            packageId = "tokio-native-tls";
            optional = true;
            target = { target, features }: (!(target."arch" == "wasm32"));
          }
          {
            name = "url";
            packageId = "url 2.2.2";
          }
          {
            name = "wasm-bindgen";
            packageId = "wasm-bindgen";
            target = { target, features }: (target."arch" == "wasm32");
          }
          {
            name = "wasm-bindgen-futures";
            packageId = "wasm-bindgen-futures";
            target = { target, features }: (target."arch" == "wasm32");
          }
          {
            name = "web-sys";
            packageId = "web-sys";
            target = { target, features }: (target."arch" == "wasm32");
            features = [ "Headers" "Request" "RequestInit" "RequestMode" "Response" "Window" "FormData" "Blob" "BlobPropertyBag" "ServiceWorkerGlobalScope" "RequestCredentials" "File" ];
          }
          {
            name = "winreg";
            packageId = "winreg 0.7.0";
            target = { target, features }: (target."windows" or false);
          }
        ];
        devDependencies = [
          {
            name = "hyper";
            packageId = "hyper 0.14.16";
            usesDefaultFeatures = false;
            target = {target, features}: (!(target."arch" == "wasm32"));
            features = [ "tcp" "stream" "http1" "http2" "client" "server" "runtime" ];
          }
          {
            name = "serde";
            packageId = "serde 1.0.136";
            target = {target, features}: (!(target."arch" == "wasm32"));
            features = [ "derive" ];
          }
          {
            name = "tokio";
            packageId = "tokio";
            usesDefaultFeatures = false;
            target = {target, features}: (!(target."arch" == "wasm32"));
            features = [ "macros" "rt-multi-thread" ];
          }
          {
            name = "wasm-bindgen";
            packageId = "wasm-bindgen";
            target = {target, features}: (target."arch" == "wasm32");
            features = [ "serde-serialize" ];
          }
        ];
        features = {
          "__rustls" = [ "hyper-rustls" "tokio-rustls" "rustls" "__tls" "rustls-pemfile" ];
          "blocking" = [ "futures-util/io" "tokio/rt-multi-thread" "tokio/sync" ];
          "brotli" = [ "async-compression" "async-compression/brotli" "tokio-util" ];
          "cookies" = [ "cookie_crate" "cookie_store" "proc-macro-hack" ];
          "default" = [ "default-tls" ];
          "default-tls" = [ "hyper-tls" "native-tls-crate" "__tls" "tokio-native-tls" ];
          "deflate" = [ "async-compression" "async-compression/zlib" "tokio-util" ];
          "gzip" = [ "async-compression" "async-compression/gzip" "tokio-util" ];
          "json" = [ "serde_json" ];
          "multipart" = [ "mime_guess" ];
          "native-tls" = [ "default-tls" ];
          "native-tls-alpn" = [ "native-tls" "native-tls-crate/alpn" ];
          "native-tls-vendored" = [ "native-tls" "native-tls-crate/vendored" ];
          "rustls-tls" = [ "rustls-tls-webpki-roots" ];
          "rustls-tls-manual-roots" = [ "__rustls" ];
          "rustls-tls-native-roots" = [ "rustls-native-certs" "__rustls" ];
          "rustls-tls-webpki-roots" = [ "webpki-roots" "__rustls" ];
          "socks" = [ "tokio-socks" ];
          "stream" = [ "tokio/fs" "tokio-util" ];
          "trust-dns" = [ "trust-dns-resolver" ];
        };
        resolvedDefaultFeatures = [ "__tls" "default" "default-tls" "hyper-tls" "native-tls-crate" "tokio-native-tls" ];
      };
      "resolv-conf" = rec {
        crateName = "resolv-conf";
        version = "0.7.0";
        edition = "2015";
        sha256 = "005sk8r1php2g41yn7fdf1sn8cafyaqm6jxia42h2v88saa47r2j";
        libName = "resolv_conf";
        authors = [
          "paul@colomiets.name"
        ];
        dependencies = [
          {
            name = "hostname";
            packageId = "hostname";
            optional = true;
          }
          {
            name = "quick-error";
            packageId = "quick-error 1.2.3";
          }
        ];
        features = {
          "system" = [ "hostname" ];
        };
        resolvedDefaultFeatures = [ "hostname" "system" ];
      };
      "rexpect" = rec {
        crateName = "rexpect";
        version = "0.4.0";
        edition = "2018";
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/heliaxdev/rexpect.git";
          rev = "3b5d729bfae74bd2c1d7bccf91b82273f05a1f45";
          sha256 = "0fi7qb5i8d3lwwank9dn738zffkr2mv840m9ilyd0mhyhpljyqnh";
        };
        authors = [
          "Philipp Keller <philipp.keller@gmail.com>"
        ];
        dependencies = [
          {
            name = "error-chain";
            packageId = "error-chain";
          }
          {
            name = "nix";
            packageId = "nix 0.14.1";
          }
          {
            name = "regex";
            packageId = "regex";
          }
          {
            name = "tempfile";
            packageId = "tempfile";
          }
        ];

      };
      "ring" = rec {
        crateName = "ring";
        version = "0.16.20";
        edition = "2018";
        sha256 = "1z682xp7v38ayq9g9nkbhhfpj6ygralmlx7wdmsfv8rnw99cylrh";
        authors = [
          "Brian Smith <brian@briansmith.org>"
        ];
        dependencies = [
          {
            name = "libc";
            packageId = "libc";
            usesDefaultFeatures = false;
            target = { target, features }: ((target."os" == "android") || (target."os" == "linux"));
          }
          {
            name = "once_cell";
            packageId = "once_cell";
            optional = true;
            usesDefaultFeatures = false;
            target = { target, features }: ((target."os" == "android") || (target."os" == "linux"));
            features = [ "std" ];
          }
          {
            name = "once_cell";
            packageId = "once_cell";
            usesDefaultFeatures = false;
            target = { target, features }: ((target."os" == "dragonfly") || (target."os" == "freebsd") || (target."os" == "illumos") || (target."os" == "netbsd") || (target."os" == "openbsd") || (target."os" == "solaris"));
            features = [ "std" ];
          }
          {
            name = "spin";
            packageId = "spin";
            usesDefaultFeatures = false;
            target = { target, features }: ((target."arch" == "x86") || (target."arch" == "x86_64") || (((target."arch" == "aarch64") || (target."arch" == "arm")) && ((target."os" == "android") || (target."os" == "fuchsia") || (target."os" == "linux"))));
          }
          {
            name = "untrusted";
            packageId = "untrusted";
          }
          {
            name = "web-sys";
            packageId = "web-sys";
            usesDefaultFeatures = false;
            target = { target, features }: ((target."arch" == "wasm32") && (target."vendor" == "unknown") && (target."os" == "unknown") && (target."env" == ""));
            features = [ "Crypto" "Window" ];
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.9";
            usesDefaultFeatures = false;
            target = { target, features }: (target."os" == "windows");
            features = [ "ntsecapi" "wtypesbase" ];
          }
        ];
        buildDependencies = [
          {
            name = "cc";
            packageId = "cc";
            usesDefaultFeatures = false;
          }
        ];
        devDependencies = [
          {
            name = "libc";
            packageId = "libc";
            usesDefaultFeatures = false;
            target = {target, features}: ((target."unix" or false) || (target."windows" or false));
          }
        ];
        features = {
          "default" = [ "alloc" "dev_urandom_fallback" ];
          "dev_urandom_fallback" = [ "once_cell" ];
          "std" = [ "alloc" ];
        };
        resolvedDefaultFeatures = [ "alloc" "default" "dev_urandom_fallback" "once_cell" "std" ];
      };
      "ripemd160" = rec {
        crateName = "ripemd160";
        version = "0.9.1";
        edition = "2018";
        sha256 = "0lf2vji7dgf80f5mh6dcdlmdl1qa80jffg7pkcc17wxph764xjif";
        authors = [
          "RustCrypto Developers"
        ];
        dependencies = [
          {
            name = "block-buffer";
            packageId = "block-buffer 0.9.0";
          }
          {
            name = "digest";
            packageId = "digest 0.9.0";
          }
          {
            name = "opaque-debug";
            packageId = "opaque-debug 0.3.0";
          }
        ];
        devDependencies = [
          {
            name = "digest";
            packageId = "digest 0.9.0";
            features = [ "dev" ];
          }
        ];
        features = {
          "default" = [ "std" ];
          "std" = [ "digest/std" ];
        };
        resolvedDefaultFeatures = [ "std" ];
      };
      "rkyv" = rec {
        crateName = "rkyv";
        version = "0.7.31";
        edition = "2018";
        sha256 = "1gd74ahr062jwflvwja1zi7y6jamsn0573nscj1b5g2pssw5b5j3";
        authors = [
          "David Koloski <djkoloski@gmail.com>"
        ];
        dependencies = [
          {
            name = "bytecheck";
            packageId = "bytecheck";
            optional = true;
            usesDefaultFeatures = false;
          }
          {
            name = "hashbrown";
            packageId = "hashbrown";
            optional = true;
          }
          {
            name = "ptr_meta";
            packageId = "ptr_meta";
            usesDefaultFeatures = false;
          }
          {
            name = "rend";
            packageId = "rend";
            optional = true;
            usesDefaultFeatures = false;
          }
          {
            name = "rkyv_derive";
            packageId = "rkyv_derive";
          }
          {
            name = "seahash";
            packageId = "seahash";
          }
        ];
        features = {
          "alloc" = [ "hashbrown" ];
          "arbitrary_enum_discriminant" = [ "rkyv_derive/arbitrary_enum_discriminant" ];
          "archive_be" = [ "rend" "rkyv_derive/archive_be" ];
          "archive_le" = [ "rend" "rkyv_derive/archive_le" ];
          "copy" = [ "rkyv_derive/copy" ];
          "default" = [ "size_32" "std" ];
          "std" = [ "alloc" "bytecheck/std" "ptr_meta/std" "rend/std" ];
          "strict" = [ "rkyv_derive/strict" ];
          "tinyvec_alloc" = [ "tinyvec/alloc" ];
          "uuid_std" = [ "uuid/std" ];
          "validation" = [ "alloc" "bytecheck" "rend/validation" ];
        };
        resolvedDefaultFeatures = [ "alloc" "bytecheck" "default" "hashbrown" "rend" "size_32" "std" ];
      };
      "rkyv_derive" = rec {
        crateName = "rkyv_derive";
        version = "0.7.31";
        edition = "2018";
        sha256 = "1xj81mwpwypmc26bwdjv9z7hff096yhxpgl4ra8h5a06sqx43vfd";
        procMacro = true;
        authors = [
          "David Koloski <djkoloski@gmail.com>"
        ];
        dependencies = [
          {
            name = "proc-macro2";
            packageId = "proc-macro2";
          }
          {
            name = "quote";
            packageId = "quote";
          }
          {
            name = "syn";
            packageId = "syn";
          }
        ];
        features = {
        };
        resolvedDefaultFeatures = [ "default" ];
      };
      "rlimit" = rec {
        crateName = "rlimit";
        version = "0.5.4";
        edition = "2018";
        sha256 = "0807zkwsch3dxniv3w7nh3xvbxxm3b3r483wi7b4km5yxl1yvac1";
        authors = [
          "Nugine <nugine@foxmail.com>"
        ];
        dependencies = [
          {
            name = "libc";
            packageId = "libc";
          }
        ];

      };
      "rocksdb" = rec {
        crateName = "rocksdb";
        version = "0.16.0";
        edition = "2018";
        sha256 = "1cs8bhin1galcwmy2qhhianb7p21r2zmjgb4vv891z4bv97i6jf7";
        authors = [
          "Tyler Neely <t@jujit.su>"
          "David Greenberg <dsg123456789@gmail.com>"
        ];
        dependencies = [
          {
            name = "libc";
            packageId = "libc";
          }
          {
            name = "librocksdb-sys";
            packageId = "librocksdb-sys";
          }
        ];
        features = {
          "bzip2" = [ "librocksdb-sys/bzip2" ];
          "default" = [ "snappy" "lz4" "zstd" "zlib" "bzip2" ];
          "lz4" = [ "librocksdb-sys/lz4" ];
          "snappy" = [ "librocksdb-sys/snappy" ];
          "zlib" = [ "librocksdb-sys/zlib" ];
          "zstd" = [ "librocksdb-sys/zstd" ];
        };
        resolvedDefaultFeatures = [ "bzip2" "default" "lz4" "snappy" "zlib" "zstd" ];
      };
      "rpassword" = rec {
        crateName = "rpassword";
        version = "5.0.1";
        edition = "2015";
        sha256 = "1yry1kmgjcb4qd5wak91203493x42ak3dz9hy1c0r9kyib7kdjgz";
        authors = [
          "Conrad Kleinespel <conradk@conradk.com>"
        ];
        dependencies = [
          {
            name = "libc";
            packageId = "libc";
            target = { target, features }: (target."unix" or false);
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.9";
            target = { target, features }: (target."windows" or false);
            features = [ "std" "winnt" "fileapi" "processenv" "winbase" "handleapi" "consoleapi" "minwindef" "wincon" ];
          }
        ];

      };
      "rust-ini" = rec {
        crateName = "rust-ini";
        version = "0.13.0";
        edition = "2015";
        sha256 = "1hifnbgaz01zja5995chy6vjacbif2m76nlxsisw7y1pxx4c2liy";
        libName = "ini";
        authors = [
          "Y. T. Chung <zonyitoo@gmail.com>"
        ];

      };
      "rust_decimal" = rec {
        crateName = "rust_decimal";
        version = "1.20.0";
        edition = "2018";
        sha256 = "1gqyw7xqhbbjvs5152760s739ccphdz93pmkmzfh0f3yczj3qng0";
        authors = [
          "Paul Mason <paul@form1.co.nz>"
        ];
        dependencies = [
          {
            name = "arrayvec";
            packageId = "arrayvec 0.7.2";
            usesDefaultFeatures = false;
          }
          {
            name = "num-traits";
            packageId = "num-traits 0.2.14";
            usesDefaultFeatures = false;
            features = [ "i128" ];
          }
          {
            name = "serde";
            packageId = "serde 1.0.136";
            optional = true;
            usesDefaultFeatures = false;
          }
        ];
        devDependencies = [
          {
            name = "serde";
            packageId = "serde 1.0.136";
            usesDefaultFeatures = false;
            features = [ "derive" ];
          }
        ];
        features = {
          "db-diesel-mysql" = [ "diesel/mysql" "std" ];
          "db-diesel-postgres" = [ "diesel/postgres" "std" ];
          "db-postgres" = [ "byteorder" "bytes" "postgres" "std" ];
          "db-tokio-postgres" = [ "byteorder" "bytes" "postgres" "std" "tokio-postgres" ];
          "default" = [ "serde" "std" ];
          "maths-nopanic" = [ "maths" ];
          "rocket-traits" = [ "rocket" ];
          "rust-fuzz" = [ "arbitrary" ];
          "serde-arbitrary-precision" = [ "serde-with-arbitrary-precision" ];
          "serde-bincode" = [ "serde-str" ];
          "serde-float" = [ "serde-with-float" ];
          "serde-str" = [ "serde-with-str" ];
          "serde-with-arbitrary-precision" = [ "serde" "serde_json/arbitrary_precision" ];
          "serde-with-float" = [ "serde" ];
          "serde-with-str" = [ "serde" ];
          "tokio-pg" = [ "db-tokio-postgres" ];
        };
        resolvedDefaultFeatures = [ "default" "serde" "std" ];
      };
      "rustc-demangle" = rec {
        crateName = "rustc-demangle";
        version = "0.1.21";
        edition = "2015";
        sha256 = "0hn3xyd2n3bg3jnc5a5jbzll32n4r5a65bqzs287l30m5c53xw3y";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        features = {
          "rustc-dep-of-std" = [ "core" "compiler_builtins" ];
        };
      };
      "rustc-hash" = rec {
        crateName = "rustc-hash";
        version = "1.1.0";
        edition = "2015";
        sha256 = "1qkc5khrmv5pqi5l5ca9p5nl5hs742cagrndhbrlk3dhlrx3zm08";
        authors = [
          "The Rust Project Developers"
        ];
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "rustc_version 0.2.3" = rec {
        crateName = "rustc_version";
        version = "0.2.3";
        edition = "2015";
        sha256 = "02h3x57lcr8l2pm0a645s9whdh33pn5cnrwvn5cb57vcrc53x3hk";
        authors = [
          "Marvin Löbel <loebel.marvin@gmail.com>"
        ];
        dependencies = [
          {
            name = "semver";
            packageId = "semver 0.9.0";
          }
        ];

      };
      "rustc_version 0.3.3" = rec {
        crateName = "rustc_version";
        version = "0.3.3";
        edition = "2018";
        sha256 = "1vjmw7xcdri0spsf24mkpwpph853wrbqppihhw061i2igh4f5pzh";
        authors = [
          "Marvin Löbel <loebel.marvin@gmail.com>"
        ];
        dependencies = [
          {
            name = "semver";
            packageId = "semver 0.11.0";
          }
        ];

      };
      "rustls" = rec {
        crateName = "rustls";
        version = "0.19.1";
        edition = "2018";
        sha256 = "1mx6nzbplydy9khll4clsl35m6c1a2cgz9czr74swfgfzrsvdv9m";
        authors = [
          "Joseph Birr-Pixton <jpixton@gmail.com>"
        ];
        dependencies = [
          {
            name = "base64";
            packageId = "base64 0.13.0";
          }
          {
            name = "log";
            packageId = "log 0.4.14";
            optional = true;
          }
          {
            name = "ring";
            packageId = "ring";
          }
          {
            name = "sct";
            packageId = "sct";
          }
          {
            name = "webpki";
            packageId = "webpki";
          }
        ];
        devDependencies = [
          {
            name = "log";
            packageId = "log 0.4.14";
          }
        ];
        features = {
          "default" = [ "logging" ];
          "logging" = [ "log" ];
        };
        resolvedDefaultFeatures = [ "default" "log" "logging" ];
      };
      "rustls-native-certs" = rec {
        crateName = "rustls-native-certs";
        version = "0.5.0";
        edition = "2018";
        sha256 = "14i0bbbigk6r6262hvc51vz4dvqk1f3vg2f264wfvn2vi30vf1ss";
        authors = [
          "Joseph Birr-Pixton <jpixton@gmail.com>"
        ];
        dependencies = [
          {
            name = "openssl-probe";
            packageId = "openssl-probe";
            target = { target, features }: ((target."unix" or false) && (!(target."os" == "macos")));
          }
          {
            name = "rustls";
            packageId = "rustls";
            optional = true;
          }
          {
            name = "schannel";
            packageId = "schannel";
            target = { target, features }: (target."windows" or false);
          }
          {
            name = "security-framework";
            packageId = "security-framework";
            target = { target, features }: (target."os" == "macos");
          }
        ];
        features = {
          "default" = [ "rustls" ];
        };
        resolvedDefaultFeatures = [ "default" "rustls" ];
      };
      "rustversion" = rec {
        crateName = "rustversion";
        version = "1.0.6";
        edition = "2018";
        sha256 = "0gxj6skypbk0wlbks3pdqb0lclpwbzmyv9xbqkijsvk6zbl3ik7j";
        procMacro = true;
        build = "build/build.rs";
        authors = [
          "David Tolnay <dtolnay@gmail.com>"
        ];

      };
      "rusty-fork" = rec {
        crateName = "rusty-fork";
        version = "0.3.0";
        edition = "2018";
        sha256 = "0kxwq5c480gg6q0j3bg4zzyfh2kwmc3v2ba94jw8ncjc8mpcqgfb";
        authors = [
          "Jason Lingle"
        ];
        dependencies = [
          {
            name = "fnv";
            packageId = "fnv";
          }
          {
            name = "quick-error";
            packageId = "quick-error 1.2.3";
          }
          {
            name = "tempfile";
            packageId = "tempfile";
          }
          {
            name = "wait-timeout";
            packageId = "wait-timeout";
            optional = true;
          }
        ];
        features = {
          "default" = [ "timeout" ];
          "timeout" = [ "wait-timeout" ];
        };
        resolvedDefaultFeatures = [ "timeout" "wait-timeout" ];
      };
      "rw-stream-sink" = rec {
        crateName = "rw-stream-sink";
        version = "0.2.1";
        edition = "2018";
        sha256 = "0810glqcrs36r3k3a5skg40kygd9hn914fw3zxfmlvy4ajqgr9ad";
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "futures";
            packageId = "futures 0.3.19";
          }
          {
            name = "pin-project";
            packageId = "pin-project 0.4.29";
          }
          {
            name = "static_assertions";
            packageId = "static_assertions";
          }
        ];

      };
      "ryu" = rec {
        crateName = "ryu";
        version = "1.0.9";
        edition = "2018";
        sha256 = "17qlxkqm4h8h9xqj6rh2vnmwxyzikbsj5w223chmr5l2qx8bgd3k";
        authors = [
          "David Tolnay <dtolnay@gmail.com>"
        ];
        features = {
        };
      };
      "safe-proc-macro2" = rec {
        crateName = "safe-proc-macro2";
        version = "1.0.24";
        edition = "2018";
        sha256 = "0gnql5zab6fkp7lv3w85i418hknwsdand6l14vbp7hv771ls172c";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
          "David Tolnay <dtolnay@gmail.com>"
        ];
        dependencies = [
          {
            name = "unicode-xid";
            packageId = "unicode-xid";
          }
        ];
        features = {
          "default" = [ "proc-macro" ];
        };
        resolvedDefaultFeatures = [ "default" "proc-macro" ];
      };
      "safe-quote" = rec {
        crateName = "safe-quote";
        version = "1.0.9";
        edition = "2018";
        sha256 = "0vdmc3bbdsim9wkiblwz1bnn64904pwp60qpw653zwpw9b1mav2n";
        authors = [
          "David Tolnay <dtolnay@gmail.com>"
        ];
        dependencies = [
          {
            name = "safe-proc-macro2";
            packageId = "safe-proc-macro2";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "default" = [ "proc-macro" ];
          "proc-macro" = [ "safe-proc-macro2/proc-macro" ];
        };
        resolvedDefaultFeatures = [ "default" "proc-macro" ];
      };
      "safe-regex" = rec {
        crateName = "safe-regex";
        version = "0.2.5";
        edition = "2018";
        crateBin = [];
        sha256 = "1c12929wplp2yr58izhm3bn7h8vz2sa838an4zap61if6azqjlm1";
        authors = [
          "Michael Leonhard <michael@leonhardllc.com>"
        ];
        dependencies = [
          {
            name = "safe-regex-macro";
            packageId = "safe-regex-macro";
          }
        ];

      };
      "safe-regex-compiler" = rec {
        crateName = "safe-regex-compiler";
        version = "0.2.4";
        edition = "2018";
        sha256 = "0ivhlnmc6v8xs5sb0qy0382r7d7kdk7l8sbxfci231ghgak8igkp";
        authors = [
          "Michael Leonhard <michael@leonhardllc.com>"
        ];
        dependencies = [
          {
            name = "safe-proc-macro2";
            packageId = "safe-proc-macro2";
          }
          {
            name = "safe-quote";
            packageId = "safe-quote";
          }
        ];

      };
      "safe-regex-macro" = rec {
        crateName = "safe-regex-macro";
        version = "0.2.3";
        edition = "2018";
        sha256 = "0pa8j2lzni1b465ln7qjddr4rs275gbxbfdrza4jv1asa026s9zr";
        procMacro = true;
        authors = [
          "Michael Leonhard <michael@leonhardllc.com>"
        ];
        dependencies = [
          {
            name = "safe-proc-macro2";
            packageId = "safe-proc-macro2";
          }
          {
            name = "safe-regex-compiler";
            packageId = "safe-regex-compiler";
          }
        ];

      };
      "safemem" = rec {
        crateName = "safemem";
        version = "0.3.3";
        edition = "2015";
        sha256 = "0wp0d2b2284lw11xhybhaszsczpbq1jbdklkxgifldcknmy3nw7g";
        authors = [
          "Austin Bonander <austin.bonander@gmail.com>"
        ];
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "salsa20" = rec {
        crateName = "salsa20";
        version = "0.8.1";
        edition = "2018";
        sha256 = "1c13p5f8iyx9ak009s1pak8p48fcfgipz0x00icanz7x76v2xggc";
        authors = [
          "RustCrypto Developers"
        ];
        dependencies = [
          {
            name = "cipher";
            packageId = "cipher";
          }
        ];
        devDependencies = [
          {
            name = "cipher";
            packageId = "cipher";
            features = [ "dev" ];
          }
        ];
        features = {
          "default" = [ "xsalsa20" ];
          "hsalsa20" = [ "xsalsa20" ];
        };
        resolvedDefaultFeatures = [ "default" "xsalsa20" ];
      };
      "same-file" = rec {
        crateName = "same-file";
        version = "1.0.6";
        edition = "2018";
        sha256 = "00h5j1w87dmhnvbv9l8bic3y7xxsnjmssvifw2ayvgx9mb1ivz4k";
        authors = [
          "Andrew Gallant <jamslam@gmail.com>"
        ];
        dependencies = [
          {
            name = "winapi-util";
            packageId = "winapi-util";
            target = { target, features }: (target."windows" or false);
          }
        ];

      };
      "schannel" = rec {
        crateName = "schannel";
        version = "0.1.19";
        edition = "2015";
        sha256 = "0xdwr3clrylywpv2r5hw7mrxmsf7ljagwiymw2z60ki3kihbl1cg";
        authors = [
          "Steven Fackler <sfackler@gmail.com>"
          "Steffen Butzer <steffen.butzer@outlook.com>"
        ];
        dependencies = [
          {
            name = "lazy_static";
            packageId = "lazy_static 1.4.0";
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.9";
            features = [ "lmcons" "minschannel" "securitybaseapi" "schannel" "sspi" "sysinfoapi" "timezoneapi" "winbase" "wincrypt" "winerror" ];
          }
        ];

      };
      "scopeguard" = rec {
        crateName = "scopeguard";
        version = "1.1.0";
        edition = "2015";
        sha256 = "1kbqm85v43rq92vx7hfiay6pmcga03vrjbbfwqpyj3pwsg3b16nj";
        authors = [
          "bluss"
        ];
        features = {
          "default" = [ "use_std" ];
        };
      };
      "sct" = rec {
        crateName = "sct";
        version = "0.6.1";
        edition = "2018";
        sha256 = "1ki8qa7yf4d9i4ynsfvwwkpnnqw0m8ayx0jva4w9zrp0k0wbhqmk";
        authors = [
          "Joseph Birr-Pixton <jpixton@gmail.com>"
        ];
        dependencies = [
          {
            name = "ring";
            packageId = "ring";
          }
          {
            name = "untrusted";
            packageId = "untrusted";
          }
        ];

      };
      "seahash" = rec {
        crateName = "seahash";
        version = "4.1.0";
        edition = "2015";
        sha256 = "0sxsb64np6bvnppjz5hg4rqpnkczhsl8w8kf2a5lr1c08xppn40w";
        authors = [
          "ticki <ticki@users.noreply.github.com>"
          "Tom Almeida <tom@tommoa.me>"
        ];
        features = {
        };
        resolvedDefaultFeatures = [ "default" ];
      };
      "security-framework" = rec {
        crateName = "security-framework";
        version = "2.6.0";
        edition = "2018";
        sha256 = "1b2in39zp2a28vj3v5h6apvw0pb3mmalycqcwavcp2n6nr47kv9z";
        authors = [
          "Steven Fackler <sfackler@gmail.com>"
          "Kornel <kornel@geekhood.net>"
        ];
        dependencies = [
          {
            name = "bitflags";
            packageId = "bitflags";
          }
          {
            name = "core-foundation";
            packageId = "core-foundation";
          }
          {
            name = "core-foundation-sys";
            packageId = "core-foundation-sys";
          }
          {
            name = "libc";
            packageId = "libc";
          }
          {
            name = "security-framework-sys";
            packageId = "security-framework-sys";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "OSX_10_10" = [ "OSX_10_9" "security-framework-sys/OSX_10_10" ];
          "OSX_10_11" = [ "OSX_10_10" "security-framework-sys/OSX_10_11" ];
          "OSX_10_12" = [ "OSX_10_11" "security-framework-sys/OSX_10_12" ];
          "OSX_10_13" = [ "OSX_10_12" "security-framework-sys/OSX_10_13" "alpn" "session-tickets" "serial-number-bigint" ];
          "OSX_10_14" = [ "OSX_10_13" "security-framework-sys/OSX_10_14" ];
          "OSX_10_9" = [ "security-framework-sys/OSX_10_9" ];
          "default" = [ "OSX_10_9" ];
          "serial-number-bigint" = [ "num-bigint" ];
        };
        resolvedDefaultFeatures = [ "OSX_10_9" "default" ];
      };
      "security-framework-sys" = rec {
        crateName = "security-framework-sys";
        version = "2.6.0";
        edition = "2018";
        sha256 = "0v5r7cjkx2ylz2rb9wddxz09ks0zjv9156arna0j0dn2ifzj2wx5";
        authors = [
          "Steven Fackler <sfackler@gmail.com>"
          "Kornel <kornel@geekhood.net>"
        ];
        dependencies = [
          {
            name = "core-foundation-sys";
            packageId = "core-foundation-sys";
          }
          {
            name = "libc";
            packageId = "libc";
          }
        ];
        features = {
          "OSX_10_10" = [ "OSX_10_9" ];
          "OSX_10_11" = [ "OSX_10_10" ];
          "OSX_10_12" = [ "OSX_10_11" ];
          "OSX_10_13" = [ "OSX_10_12" ];
          "OSX_10_14" = [ "OSX_10_13" ];
          "default" = [ "OSX_10_9" ];
        };
        resolvedDefaultFeatures = [ "OSX_10_9" "default" ];
      };
      "semver 0.11.0" = rec {
        crateName = "semver";
        version = "0.11.0";
        edition = "2015";
        sha256 = "1dn6064fipjymnmjccyjhb70miyvqvp08gvw1wbg8vbg4c8ay0gk";
        authors = [
          "Steve Klabnik <steve@steveklabnik.com>"
          "The Rust Project Developers"
        ];
        dependencies = [
          {
            name = "semver-parser";
            packageId = "semver-parser 0.10.2";
          }
        ];
        features = {
          "ci" = [ "serde" "diesel/sqlite" ];
        };
        resolvedDefaultFeatures = [ "default" ];
      };
      "semver 0.9.0" = rec {
        crateName = "semver";
        version = "0.9.0";
        edition = "2015";
        sha256 = "00q4lkcj0rrgbhviv9sd4p6qmdsipkwkbra7rh11jrhq5kpvjzhx";
        authors = [
          "Steve Klabnik <steve@steveklabnik.com>"
          "The Rust Project Developers"
        ];
        dependencies = [
          {
            name = "semver-parser";
            packageId = "semver-parser 0.7.0";
          }
        ];
        features = {
          "ci" = [ "serde" ];
        };
        resolvedDefaultFeatures = [ "default" ];
      };
      "semver-parser 0.10.2" = rec {
        crateName = "semver-parser";
        version = "0.10.2";
        edition = "2018";
        crateBin = [];
        sha256 = "1xqijhqhx3bn77xnl1mlcp032hz8nv7n2fbdacbdzq7rnzsvxc00";
        authors = [
          "Steve Klabnik <steve@steveklabnik.com>"
        ];
        dependencies = [
          {
            name = "pest";
            packageId = "pest";
          }
        ];

      };
      "semver-parser 0.7.0" = rec {
        crateName = "semver-parser";
        version = "0.7.0";
        edition = "2015";
        sha256 = "18vhypw6zgccnrlm5ps1pwa0khz7ry927iznpr88b87cagr1v2iq";
        authors = [
          "Steve Klabnik <steve@steveklabnik.com>"
        ];

      };
      "serde 0.8.23" = rec {
        crateName = "serde";
        version = "0.8.23";
        edition = "2015";
        sha256 = "1j4ajipn0sf4ya0crgcb94s848qp7mfc35n6d0q2rf8rk5skzbcx";
        authors = [
          "Erick Tryzelaar <erick.tryzelaar@gmail.com>"
        ];
        features = {
          "alloc" = [ "unstable" ];
          "collections" = [ "alloc" ];
          "default" = [ "std" ];
          "unstable-testing" = [ "clippy" "unstable" "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "serde 1.0.136" = rec {
        crateName = "serde";
        version = "1.0.136";
        edition = "2015";
        sha256 = "12a791cbdd3gi08536i4frrqsps0ak8gvhpijvgj9rg1055y4cff";
        authors = [
          "Erick Tryzelaar <erick.tryzelaar@gmail.com>"
          "David Tolnay <dtolnay@gmail.com>"
        ];
        dependencies = [
          {
            name = "serde_derive";
            packageId = "serde_derive";
            optional = true;
          }
        ];
        devDependencies = [
          {
            name = "serde_derive";
            packageId = "serde_derive";
          }
        ];
        features = {
          "default" = [ "std" ];
          "derive" = [ "serde_derive" ];
        };
        resolvedDefaultFeatures = [ "alloc" "default" "derive" "rc" "serde_derive" "std" ];
      };
      "serde-hjson" = rec {
        crateName = "serde-hjson";
        version = "0.9.1";
        edition = "2015";
        sha256 = "1y3lzs8556bxqa9jfdyg38pd5jjffblczikckwh571d8m074wfka";
        authors = [
          "Christian Zangl <laktak@cdak.net>"
        ];
        dependencies = [
          {
            name = "lazy_static";
            packageId = "lazy_static 1.4.0";
          }
          {
            name = "num-traits";
            packageId = "num-traits 0.1.43";
          }
          {
            name = "regex";
            packageId = "regex";
          }
          {
            name = "serde";
            packageId = "serde 0.8.23";
          }
        ];
        features = {
          "default" = [ "preserve_order" ];
          "preserve_order" = [ "linked-hash-map" "linked-hash-map/serde_impl" ];
          "unstable-testing" = [ "clippy" ];
        };
      };
      "serde_bytes" = rec {
        crateName = "serde_bytes";
        version = "0.11.5";
        edition = "2018";
        sha256 = "1fcb6sw8wkrj4ylm118wkb31hw124nkjnqyhbgqnd8w85zfhgbhn";
        authors = [
          "David Tolnay <dtolnay@gmail.com>"
        ];
        dependencies = [
          {
            name = "serde";
            packageId = "serde 1.0.136";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "alloc" = [ "serde/alloc" ];
          "default" = [ "std" ];
          "std" = [ "serde/std" ];
        };
        resolvedDefaultFeatures = [ "alloc" "default" "std" ];
      };
      "serde_derive" = rec {
        crateName = "serde_derive";
        version = "1.0.136";
        edition = "2015";
        sha256 = "1yb28smlymba4qbj2bn4c4myvblypqvkxv9q33s0dlzwa9qpwn88";
        procMacro = true;
        authors = [
          "Erick Tryzelaar <erick.tryzelaar@gmail.com>"
          "David Tolnay <dtolnay@gmail.com>"
        ];
        dependencies = [
          {
            name = "proc-macro2";
            packageId = "proc-macro2";
          }
          {
            name = "quote";
            packageId = "quote";
          }
          {
            name = "syn";
            packageId = "syn";
          }
        ];
        features = {
        };
        resolvedDefaultFeatures = [ "default" ];
      };
      "serde_json" = rec {
        crateName = "serde_json";
        version = "1.0.78";
        edition = "2018";
        sha256 = "11c0fm7wb2wydlxmq9ziqfjwxl9j1cl0jxq16az49z8fryj1ng6j";
        authors = [
          "Erick Tryzelaar <erick.tryzelaar@gmail.com>"
          "David Tolnay <dtolnay@gmail.com>"
        ];
        dependencies = [
          {
            name = "indexmap";
            packageId = "indexmap";
            optional = true;
          }
          {
            name = "itoa";
            packageId = "itoa 1.0.1";
          }
          {
            name = "ryu";
            packageId = "ryu";
          }
          {
            name = "serde";
            packageId = "serde 1.0.136";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "alloc" = [ "serde/alloc" ];
          "default" = [ "std" ];
          "preserve_order" = [ "indexmap" ];
          "std" = [ "serde/std" ];
        };
        resolvedDefaultFeatures = [ "alloc" "default" "indexmap" "preserve_order" "std" ];
      };
      "serde_regex" = rec {
        crateName = "serde_regex";
        version = "1.1.0";
        edition = "2018";
        sha256 = "1pxsnxb8c198szghk1hvzvhva36w2q5zs70hqkmdf5d89qd6y4x8";
        authors = [
          "paul@colomiets.name"
        ];
        dependencies = [
          {
            name = "regex";
            packageId = "regex";
          }
          {
            name = "serde";
            packageId = "serde 1.0.136";
          }
        ];

      };
      "serde_repr" = rec {
        crateName = "serde_repr";
        version = "0.1.7";
        edition = "2018";
        sha256 = "1mcy39p1g3z49rzzsadfhpy6yv2f3zx9ihhplbpjk32i01lm3l4q";
        procMacro = true;
        authors = [
          "David Tolnay <dtolnay@gmail.com>"
        ];
        dependencies = [
          {
            name = "proc-macro2";
            packageId = "proc-macro2";
          }
          {
            name = "quote";
            packageId = "quote";
          }
          {
            name = "syn";
            packageId = "syn";
          }
        ];

      };
      "serde_test" = rec {
        crateName = "serde_test";
        version = "1.0.136";
        edition = "2015";
        sha256 = "1sdhwz0713y7lzcb83rm3ibix8yhsy6rvrzf03612xyrz6k5nrr1";
        authors = [
          "Erick Tryzelaar <erick.tryzelaar@gmail.com>"
          "David Tolnay <dtolnay@gmail.com>"
        ];
        dependencies = [
          {
            name = "serde";
            packageId = "serde 1.0.136";
          }
        ];
        devDependencies = [
          {
            name = "serde";
            packageId = "serde 1.0.136";
          }
        ];

      };
      "serde_urlencoded" = rec {
        crateName = "serde_urlencoded";
        version = "0.7.1";
        edition = "2018";
        sha256 = "1zgklbdaysj3230xivihs30qi5vkhigg323a9m62k8jwf4a1qjfk";
        authors = [
          "Anthony Ramine <n.oxyde@gmail.com>"
        ];
        dependencies = [
          {
            name = "form_urlencoded";
            packageId = "form_urlencoded";
          }
          {
            name = "itoa";
            packageId = "itoa 1.0.1";
          }
          {
            name = "ryu";
            packageId = "ryu";
          }
          {
            name = "serde";
            packageId = "serde 1.0.136";
          }
        ];

      };
      "serde_yaml" = rec {
        crateName = "serde_yaml";
        version = "0.7.5";
        edition = "2015";
        sha256 = "0l9hqmzfwswqvx5gci0hji6497gim73r10bjl6ckq9r8vz9rk07g";
        authors = [
          "David Tolnay <dtolnay@gmail.com>"
        ];
        dependencies = [
          {
            name = "dtoa";
            packageId = "dtoa";
          }
          {
            name = "linked-hash-map";
            packageId = "linked-hash-map";
          }
          {
            name = "serde";
            packageId = "serde 1.0.136";
          }
          {
            name = "yaml-rust";
            packageId = "yaml-rust";
          }
        ];

      };
      "sha-1 0.8.2" = rec {
        crateName = "sha-1";
        version = "0.8.2";
        edition = "2015";
        sha256 = "1pv387q0r7llk2cqzyq0nivzvkgqgzsiygqzlv7b68z9xl5lvngp";
        libName = "sha1";
        authors = [
          "RustCrypto Developers"
        ];
        dependencies = [
          {
            name = "block-buffer";
            packageId = "block-buffer 0.7.3";
          }
          {
            name = "digest";
            packageId = "digest 0.8.1";
          }
          {
            name = "fake-simd";
            packageId = "fake-simd";
          }
          {
            name = "opaque-debug";
            packageId = "opaque-debug 0.2.3";
          }
        ];
        devDependencies = [
          {
            name = "digest";
            packageId = "digest 0.8.1";
            features = [ "dev" ];
          }
        ];
        features = {
          "asm" = [ "sha1-asm" ];
          "asm-aarch64" = [ "asm" "libc" ];
          "default" = [ "std" ];
          "std" = [ "digest/std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "sha-1 0.9.8" = rec {
        crateName = "sha-1";
        version = "0.9.8";
        edition = "2018";
        sha256 = "19jibp8l9k5v4dnhj5kfhaczdfd997h22qz0hin6pw9wvc9ngkcr";
        libName = "sha1";
        authors = [
          "RustCrypto Developers"
        ];
        dependencies = [
          {
            name = "block-buffer";
            packageId = "block-buffer 0.9.0";
          }
          {
            name = "cfg-if";
            packageId = "cfg-if 1.0.0";
          }
          {
            name = "cpufeatures";
            packageId = "cpufeatures";
            target = { target, features }: ((target."arch" == "aarch64") || (target."arch" == "x86") || (target."arch" == "x86_64"));
          }
          {
            name = "digest";
            packageId = "digest 0.9.0";
          }
          {
            name = "opaque-debug";
            packageId = "opaque-debug 0.3.0";
          }
        ];
        devDependencies = [
          {
            name = "digest";
            packageId = "digest 0.9.0";
            features = [ "dev" ];
          }
        ];
        features = {
          "asm" = [ "sha1-asm" ];
          "asm-aarch64" = [ "asm" ];
          "default" = [ "std" ];
          "std" = [ "digest/std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "sha2 0.10.2" = rec {
        crateName = "sha2";
        version = "0.10.2";
        edition = "2018";
        sha256 = "0xi6xnqzwaml6d87rpr75a7yin6njbd0pi8drqygxvl11z3axpjm";
        authors = [
          "RustCrypto Developers"
        ];
        dependencies = [
          {
            name = "cfg-if";
            packageId = "cfg-if 1.0.0";
          }
          {
            name = "cpufeatures";
            packageId = "cpufeatures";
            target = { target, features }: ((target."arch" == "aarch64") || (target."arch" == "x86_64") || (target."arch" == "x86"));
          }
          {
            name = "digest";
            packageId = "digest 0.10.3";
          }
        ];
        devDependencies = [
          {
            name = "digest";
            packageId = "digest 0.10.3";
            features = [ "dev" ];
          }
        ];
        features = {
          "asm" = [ "sha2-asm" ];
          "asm-aarch64" = [ "asm" ];
          "default" = [ "std" ];
          "std" = [ "digest/std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "sha2 0.8.2" = rec {
        crateName = "sha2";
        version = "0.8.2";
        edition = "2015";
        sha256 = "0s9yddvyg6anaikdl86wmwfim25c0d4m0xq0y2ghs34alxpg8mm2";
        authors = [
          "RustCrypto Developers"
        ];
        dependencies = [
          {
            name = "block-buffer";
            packageId = "block-buffer 0.7.3";
          }
          {
            name = "digest";
            packageId = "digest 0.8.1";
          }
          {
            name = "fake-simd";
            packageId = "fake-simd";
          }
          {
            name = "opaque-debug";
            packageId = "opaque-debug 0.2.3";
          }
        ];
        devDependencies = [
          {
            name = "digest";
            packageId = "digest 0.8.1";
            features = [ "dev" ];
          }
        ];
        features = {
          "asm" = [ "sha2-asm" ];
          "asm-aarch64" = [ "asm" "libc" ];
          "default" = [ "std" ];
          "std" = [ "digest/std" ];
        };
        resolvedDefaultFeatures = [ "std" ];
      };
      "sha2 0.9.9" = rec {
        crateName = "sha2";
        version = "0.9.9";
        edition = "2018";
        sha256 = "006q2f0ar26xcjxqz8zsncfgz86zqa5dkwlwv03rhx1rpzhs2n2d";
        authors = [
          "RustCrypto Developers"
        ];
        dependencies = [
          {
            name = "block-buffer";
            packageId = "block-buffer 0.9.0";
          }
          {
            name = "cfg-if";
            packageId = "cfg-if 1.0.0";
          }
          {
            name = "cpufeatures";
            packageId = "cpufeatures";
            target = { target, features }: ((target."arch" == "aarch64") || (target."arch" == "x86_64") || (target."arch" == "x86"));
          }
          {
            name = "digest";
            packageId = "digest 0.9.0";
          }
          {
            name = "opaque-debug";
            packageId = "opaque-debug 0.3.0";
          }
        ];
        devDependencies = [
          {
            name = "digest";
            packageId = "digest 0.9.0";
            features = [ "dev" ];
          }
        ];
        features = {
          "asm" = [ "sha2-asm" ];
          "asm-aarch64" = [ "asm" ];
          "default" = [ "std" ];
          "std" = [ "digest/std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "sha3" = rec {
        crateName = "sha3";
        version = "0.9.1";
        edition = "2018";
        sha256 = "02d85wpvz75a0n7r2da15ikqjwzamhii11qy9gqf6pafgm0rj4gq";
        authors = [
          "RustCrypto Developers"
        ];
        dependencies = [
          {
            name = "block-buffer";
            packageId = "block-buffer 0.9.0";
            features = [ "block-padding" ];
          }
          {
            name = "digest";
            packageId = "digest 0.9.0";
          }
          {
            name = "keccak";
            packageId = "keccak";
          }
          {
            name = "opaque-debug";
            packageId = "opaque-debug 0.3.0";
          }
        ];
        devDependencies = [
          {
            name = "digest";
            packageId = "digest 0.9.0";
            features = [ "dev" ];
          }
        ];
        features = {
          "default" = [ "std" ];
          "std" = [ "digest/std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "sharded-slab" = rec {
        crateName = "sharded-slab";
        version = "0.1.4";
        edition = "2018";
        sha256 = "0cbb8kgwsyr3zzhsv8jrs3y1j3vsw4jxil42lfq31ikhdy0bl3wh";
        authors = [
          "Eliza Weisman <eliza@buoyant.io>"
        ];
        dependencies = [
          {
            name = "lazy_static";
            packageId = "lazy_static 1.4.0";
          }
        ];

      };
      "shell-escape" = rec {
        crateName = "shell-escape";
        version = "0.1.5";
        edition = "2015";
        sha256 = "0kqq83dk0r1fqj4cfzddpxrni2hpz5i1y607g366c4m9iyhngfs5";
        authors = [
          "Steven Fackler <sfackler@gmail.com>"
        ];

      };
      "shlex" = rec {
        crateName = "shlex";
        version = "1.1.0";
        edition = "2015";
        sha256 = "18zqcay2dgxgrd1r645mb79m4q745jcrqj659k11bwh99lx8bcj3";
        authors = [
          "comex <comexk@gmail.com>"
          "Fenhl <fenhl@fenhl.net>"
        ];
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "signal-hook" = rec {
        crateName = "signal-hook";
        version = "0.3.13";
        edition = "2018";
        sha256 = "0bdzvax49hm0d3s59j062cznhbkznpylzdsv93mdq1qh4zgrfz34";
        authors = [
          "Michal 'vorner' Vaner <vorner@vorner.cz>"
          "Thomas Himmelstoss <thimm@posteo.de>"
        ];
        dependencies = [
          {
            name = "libc";
            packageId = "libc";
          }
          {
            name = "signal-hook-registry";
            packageId = "signal-hook-registry";
          }
        ];
        features = {
          "default" = [ "channel" "iterator" ];
          "extended-siginfo" = [ "channel" "iterator" "extended-siginfo-raw" ];
          "extended-siginfo-raw" = [ "cc" ];
          "iterator" = [ "channel" ];
        };
        resolvedDefaultFeatures = [ "channel" "default" "iterator" ];
      };
      "signal-hook-registry" = rec {
        crateName = "signal-hook-registry";
        version = "1.4.0";
        edition = "2015";
        sha256 = "1c2mhijg54y6c1zi4630yki1vpq3z96ljfnsrdy0rb64ilr767p5";
        authors = [
          "Michal 'vorner' Vaner <vorner@vorner.cz>"
          "Masaki Hara <ackie.h.gmai@gmail.com>"
        ];
        dependencies = [
          {
            name = "libc";
            packageId = "libc";
          }
        ];

      };
      "signature" = rec {
        crateName = "signature";
        version = "1.5.0";
        edition = "2018";
        sha256 = "1r4x94n6ibdd1f85cwmvi29jvyyf1l379n9yybb7jlg9lv0wcm7h";
        authors = [
          "RustCrypto Developers"
        ];
        features = {
          "default" = [ "std" ];
          "derive-preview" = [ "digest-preview" "signature_derive" ];
          "digest-preview" = [ "digest" ];
          "rand-preview" = [ "rand_core" ];
        };
        resolvedDefaultFeatures = [ "std" ];
      };
      "simple-error" = rec {
        crateName = "simple-error";
        version = "0.2.3";
        edition = "2015";
        sha256 = "06wh4dk25mz290r0qcvzw1j6vcb6931vlxbzj9fclwkpx6fa4iyc";
        authors = [
          "Wangshan Lu <wisagan@gmail.com>"
        ];

      };
      "slab" = rec {
        crateName = "slab";
        version = "0.4.5";
        edition = "2018";
        sha256 = "1ddg01hf8h4bpfm027h0snhb7jfcs1jzi497083y13q13vyr3vwx";
        authors = [
          "Carl Lerche <me@carllerche.com>"
        ];
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "smallvec 0.6.14" = rec {
        crateName = "smallvec";
        version = "0.6.14";
        edition = "2015";
        sha256 = "1q4hz0ssnv24s6fq5kfp2wzrrprrrjiwc42a0h7s7nwym3mwlzxr";
        libPath = "lib.rs";
        authors = [
          "Simon Sapin <simon.sapin@exyr.org>"
        ];
        dependencies = [
          {
            name = "maybe-uninit";
            packageId = "maybe-uninit";
          }
        ];
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "smallvec 1.8.0" = rec {
        crateName = "smallvec";
        version = "1.8.0";
        edition = "2018";
        sha256 = "10zf4fn63p2d6sx8qap3jvyarcfw563308x3431hd4c34r35gpgj";
        authors = [
          "The Servo Project Developers"
        ];
        features = {
          "const_new" = [ "const_generics" ];
        };
      };
      "snow" = rec {
        crateName = "snow";
        version = "0.8.0";
        edition = "2018";
        sha256 = "1dxbdf9k9gf4mk3whn9z8sdi1y8d4gn4hcrclcjzvxllbv1gfhk1";
        authors = [
          "Jake McGinty <me@jake.su>"
          "trevp"
        ];
        dependencies = [
          {
            name = "aes-gcm";
            packageId = "aes-gcm";
            optional = true;
          }
          {
            name = "blake2";
            packageId = "blake2 0.9.2";
            optional = true;
          }
          {
            name = "chacha20poly1305";
            packageId = "chacha20poly1305";
            optional = true;
          }
          {
            name = "rand";
            packageId = "rand 0.8.4";
            optional = true;
          }
          {
            name = "rand_core";
            packageId = "rand_core 0.6.3";
          }
          {
            name = "ring";
            packageId = "ring";
            optional = true;
            features = [ "std" ];
          }
          {
            name = "sha2";
            packageId = "sha2 0.9.9";
            optional = true;
          }
          {
            name = "subtle";
            packageId = "subtle 2.4.1";
          }
          {
            name = "x25519-dalek";
            packageId = "x25519-dalek";
            optional = true;
          }
        ];
        buildDependencies = [
          {
            name = "rustc_version";
            packageId = "rustc_version 0.3.3";
          }
        ];
        features = {
          "default" = [ "default-resolver" ];
          "default-resolver" = [ "aes-gcm" "chacha20poly1305" "blake2" "sha2" "x25519-dalek" "rand" ];
          "libsodium-accelerated" = [ "libsodium-resolver" "default-resolver" ];
          "libsodium-resolver" = [ "sodiumoxide" "byteorder" ];
          "nightly" = [ "blake2/simd_opt" "x25519-dalek/nightly" "subtle/nightly" ];
          "pqclean_kyber1024" = [ "pqcrypto-kyber" "pqcrypto-traits" "hfs" "default-resolver" ];
          "ring-accelerated" = [ "ring-resolver" "default-resolver" ];
          "ring-resolver" = [ "ring" ];
          "xchachapoly" = [ "chacha20poly1305" "default-resolver" ];
        };
        resolvedDefaultFeatures = [ "aes-gcm" "blake2" "chacha20poly1305" "default-resolver" "rand" "ring" "ring-resolver" "sha2" "x25519-dalek" ];
      };
      "socket2 0.3.19" = rec {
        crateName = "socket2";
        version = "0.3.19";
        edition = "2018";
        sha256 = "0vldz14mxqxnjqb6an2pj7mgclv7nrk45cpscwq7g3fj2c0mfbhj";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        dependencies = [
          {
            name = "cfg-if";
            packageId = "cfg-if 1.0.0";
            target = { target, features }: (target."unix" or false);
          }
          {
            name = "libc";
            packageId = "libc";
            target = { target, features }: (target."unix" or false);
            features = [ "align" ];
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.9";
            target = { target, features }: (target."windows" or false);
            features = [ "handleapi" "ws2def" "ws2ipdef" "ws2tcpip" "minwindef" ];
          }
        ];
        features = {
        };
      };
      "socket2 0.4.2" = rec {
        crateName = "socket2";
        version = "0.4.2";
        edition = "2018";
        sha256 = "05imvybc86slkbg6sj9rd1xy9a8ydn1v2bcqjqr346myqzk0zjax";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
          "Thomas de Zeeuw <thomasdezeeuw@gmail.com>"
        ];
        dependencies = [
          {
            name = "libc";
            packageId = "libc";
            target = { target, features }: (target."unix" or false);
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.9";
            target = { target, features }: (target."windows" or false);
            features = [ "handleapi" "ws2ipdef" "ws2tcpip" ];
          }
        ];
        features = {
        };
        resolvedDefaultFeatures = [ "all" ];
      };
      "soketto" = rec {
        crateName = "soketto";
        version = "0.4.2";
        edition = "2018";
        sha256 = "124waqfkd036xqfn40p63yihyiavwjrip3llyjcsdc2dsp9ixixm";
        authors = [
          "Parity Technologies <admin@parity.io>"
          "Jason Ozias <jason.g.ozias@gmail.com>"
        ];
        dependencies = [
          {
            name = "base64";
            packageId = "base64 0.12.3";
          }
          {
            name = "bytes";
            packageId = "bytes 0.5.6";
          }
          {
            name = "flate2";
            packageId = "flate2";
            optional = true;
            usesDefaultFeatures = false;
            features = [ "zlib" ];
          }
          {
            name = "futures";
            packageId = "futures 0.3.19";
            features = [ "unstable" "bilock" ];
          }
          {
            name = "httparse";
            packageId = "httparse";
          }
          {
            name = "log";
            packageId = "log 0.4.14";
          }
          {
            name = "rand";
            packageId = "rand 0.7.3";
          }
          {
            name = "sha-1";
            packageId = "sha-1 0.9.8";
          }
        ];
        features = {
          "deflate" = [ "flate2" ];
        };
        resolvedDefaultFeatures = [ "deflate" "flate2" ];
      };
      "sp-std" = rec {
        crateName = "sp-std";
        version = "3.0.0";
        edition = "2018";
        sha256 = "04lvscg2m0nmzswx2r3x2bcg7yw8fr1mnk89rdlyhppsfjliwf9m";
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "std" ];
      };
      "sparse-merkle-tree" = rec {
        crateName = "sparse-merkle-tree";
        version = "0.3.1-pre";
        edition = "2018";
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/heliaxdev/sparse-merkle-tree";
          rev = "be4b2293558361df2f452c60a3e90c6b5e52e225";
          sha256 = "0k9dpxdywmrk0zws14dibxkr47vgh9vvby53c1m1fdfwylymqc7k";
        };
        authors = [
          "jjy <jjyruby@gmail.com>"
        ];
        dependencies = [
          {
            name = "blake2b-rs";
            packageId = "blake2b-rs";
            optional = true;
          }
          {
            name = "borsh";
            packageId = "borsh";
            optional = true;
          }
          {
            name = "cfg-if";
            packageId = "cfg-if 1.0.0";
          }
          {
            name = "ics23";
            packageId = "ics23";
          }
          {
            name = "sha2";
            packageId = "sha2 0.9.9";
          }
        ];
        features = {
          "blake2b" = [ "blake2b-rs" ];
          "default" = [ "std" "blake2b" ];
        };
        resolvedDefaultFeatures = [ "blake2b" "blake2b-rs" "borsh" "default" "std" ];
      };
      "spin" = rec {
        crateName = "spin";
        version = "0.5.2";
        edition = "2015";
        sha256 = "0b84m6dbzrwf2kxylnw82d3dr8w06av7rfkr8s85fb5f43rwyqvf";
        authors = [
          "Mathijs van de Nes <git@mathijs.vd-nes.nl>"
          "John Ericson <git@JohnEricson.me>"
        ];

      };
      "sprs" = rec {
        crateName = "sprs";
        version = "0.7.1";
        edition = "2015";
        sha256 = "0mjya0yh3qrgdz698j7fk0qnpc8vxc78859rd034agc7i4a5fqzc";
        authors = [
          "Vincent Barrielle <vincent.barrielle@m4x.org>"
        ];
        dependencies = [
          {
            name = "ndarray";
            packageId = "ndarray";
          }
          {
            name = "num-complex";
            packageId = "num-complex 0.2.4";
          }
          {
            name = "num-traits";
            packageId = "num-traits 0.1.43";
          }
        ];
        features = {
          "default" = [ "alga" ];
        };
      };
      "stable_deref_trait" = rec {
        crateName = "stable_deref_trait";
        version = "1.2.0";
        edition = "2015";
        sha256 = "1lxjr8q2n534b2lhkxd6l6wcddzjvnksi58zv11f9y0jjmr15wd8";
        authors = [
          "Robert Grosse <n210241048576@gmail.com>"
        ];
        features = {
          "default" = [ "std" ];
          "std" = [ "alloc" ];
        };
        resolvedDefaultFeatures = [ "alloc" "std" ];
      };
      "static_assertions" = rec {
        crateName = "static_assertions";
        version = "1.1.0";
        edition = "2015";
        sha256 = "0gsl6xmw10gvn3zs1rv99laj5ig7ylffnh71f9l34js4nr4r7sx2";
        authors = [
          "Nikolai Vazquez"
        ];
        features = {
        };
      };
      "stderrlog" = rec {
        crateName = "stderrlog";
        version = "0.4.3";
        edition = "2015";
        sha256 = "09bzvmx2lzyycr1xfcvfwnvqsjg9kb4w22hb19bjqid5j2dyxr9j";
        authors = [
          "Doug Goldstein <cardoe@cardoe.com>"
        ];
        dependencies = [
          {
            name = "atty";
            packageId = "atty";
          }
          {
            name = "chrono";
            packageId = "chrono";
          }
          {
            name = "log";
            packageId = "log 0.4.14";
            features = [ "std" ];
          }
          {
            name = "termcolor";
            packageId = "termcolor";
          }
          {
            name = "thread_local";
            packageId = "thread_local 0.3.4";
          }
        ];

      };
      "strsim 0.10.0" = rec {
        crateName = "strsim";
        version = "0.10.0";
        edition = "2015";
        sha256 = "08s69r4rcrahwnickvi0kq49z524ci50capybln83mg6b473qivk";
        authors = [
          "Danny Guo <danny@dannyguo.com>"
        ];

      };
      "strsim 0.8.0" = rec {
        crateName = "strsim";
        version = "0.8.0";
        edition = "2015";
        sha256 = "0sjsm7hrvjdifz661pjxq5w4hf190hx53fra8dfvamacvff139cf";
        authors = [
          "Danny Guo <dannyguo91@gmail.com>"
        ];

      };
      "strum" = rec {
        crateName = "strum";
        version = "0.20.0";
        edition = "2018";
        sha256 = "0p5cslmdnz261kiwmm4h7qsmv9bh83r0f9lq6f2z2mxsnl4wa63k";
        authors = [
          "Peter Glotfelty <peter.glotfelty@microsoft.com>"
        ];
        dependencies = [
          {
            name = "strum_macros";
            packageId = "strum_macros";
            optional = true;
          }
        ];
        devDependencies = [
          {
            name = "strum_macros";
            packageId = "strum_macros";
          }
        ];
        features = {
          "derive" = [ "strum_macros" ];
        };
        resolvedDefaultFeatures = [ "derive" "strum_macros" ];
      };
      "strum_macros" = rec {
        crateName = "strum_macros";
        version = "0.20.1";
        edition = "2018";
        sha256 = "0j9ikvxlqzr667ghc045qkpwprjgcfmzgagln7maw4jigawcd2zf";
        procMacro = true;
        authors = [
          "Peter Glotfelty <peter.glotfelty@microsoft.com>"
        ];
        dependencies = [
          {
            name = "heck";
            packageId = "heck";
          }
          {
            name = "proc-macro2";
            packageId = "proc-macro2";
          }
          {
            name = "quote";
            packageId = "quote";
          }
          {
            name = "syn";
            packageId = "syn";
            features = [ "parsing" "extra-traits" ];
          }
        ];
        features = {
        };
      };
      "subproductdomain" = rec {
        crateName = "subproductdomain";
        version = "0.1.0";
        edition = "2018";
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/anoma/ferveo";
          rev = "8363c33d1cf79f93ce9fa89d4b5fe998a5a78c26";
          sha256 = "1b9594l8iiryjharsd8nl189qr3xajy4r5n0nwkmrsdg87sxhq9q";
        };
        authors = [
          "Heliax AG <hello@heliax.dev>"
        ];
        dependencies = [
          {
            name = "anyhow";
            packageId = "anyhow";
          }
          {
            name = "ark-ec";
            packageId = "ark-ec";
          }
          {
            name = "ark-ff";
            packageId = "ark-ff";
          }
          {
            name = "ark-poly";
            packageId = "ark-poly";
          }
          {
            name = "ark-serialize";
            packageId = "ark-serialize";
          }
          {
            name = "ark-std";
            packageId = "ark-std";
          }
        ];

      };
      "subtle 1.0.0" = rec {
        crateName = "subtle";
        version = "1.0.0";
        edition = "2015";
        sha256 = "1vm80mxbwfj334izwm8x8l65v1xl9hr0kwrg36r1rq565fkaarrd";
        authors = [
          "Isis Lovecruft <isis@patternsinthevoid.net>"
          "Henry de Valence <hdevalence@hdevalence.ca>"
        ];
        features = {
          "default" = [ "std" "i128" ];
        };
      };
      "subtle 2.4.1" = rec {
        crateName = "subtle";
        version = "2.4.1";
        edition = "2015";
        sha256 = "00b6jzh9gzb0h9n25g06nqr90z3xzqppfhhb260s1hjhh4pg7pkb";
        authors = [
          "Isis Lovecruft <isis@patternsinthevoid.net>"
          "Henry de Valence <hdevalence@hdevalence.ca>"
        ];
        features = {
          "default" = [ "std" "i128" ];
        };
        resolvedDefaultFeatures = [ "default" "i128" "std" ];
      };
      "subtle-encoding" = rec {
        crateName = "subtle-encoding";
        version = "0.5.1";
        edition = "2018";
        sha256 = "0icrwnjs67xf4k02x3yq5rgcf4ksvm8jc1a1aknmw31kp3bixjvx";
        authors = [
          "Tony Arcieri <tony@iqlusion.io>"
        ];
        dependencies = [
          {
            name = "zeroize";
            packageId = "zeroize";
            optional = true;
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "base64" = [ "zeroize" ];
          "bech32-preview" = [ "alloc" "zeroize" ];
          "default" = [ "base64" "hex" "std" ];
          "std" = [ "alloc" "zeroize" ];
        };
        resolvedDefaultFeatures = [ "alloc" "base64" "bech32-preview" "hex" "zeroize" ];
      };
      "subtle-ng" = rec {
        crateName = "subtle-ng";
        version = "2.5.0";
        edition = "2015";
        sha256 = "0hj1wp8xl64bjhbvlfffmllqy7wdw2b505f32gn3qqic4vmpcikk";
        authors = [
          "Isis Lovecruft <isis@patternsinthevoid.net>"
          "Henry de Valence <hdevalence@hdevalence.ca>"
        ];
        features = {
          "default" = [ "std" "i128" ];
        };
      };
      "syn" = rec {
        crateName = "syn";
        version = "1.0.86";
        edition = "2018";
        sha256 = "0sqwa4nqxzm89nj8xd8sk4iz0hbrw3mb17b6hyc2w2d0zzsb6rca";
        authors = [
          "David Tolnay <dtolnay@gmail.com>"
        ];
        dependencies = [
          {
            name = "proc-macro2";
            packageId = "proc-macro2";
            usesDefaultFeatures = false;
          }
          {
            name = "quote";
            packageId = "quote";
            optional = true;
            usesDefaultFeatures = false;
          }
          {
            name = "unicode-xid";
            packageId = "unicode-xid";
          }
        ];
        features = {
          "default" = [ "derive" "parsing" "printing" "clone-impls" "proc-macro" ];
          "printing" = [ "quote" ];
          "proc-macro" = [ "proc-macro2/proc-macro" "quote/proc-macro" ];
          "test" = [ "syn-test-suite/all-features" ];
        };
        resolvedDefaultFeatures = [ "clone-impls" "default" "derive" "extra-traits" "fold" "full" "parsing" "printing" "proc-macro" "quote" "visit" "visit-mut" ];
      };
      "synstructure" = rec {
        crateName = "synstructure";
        version = "0.12.6";
        edition = "2018";
        sha256 = "03r1lydbf3japnlpc4wka7y90pmz1i0danaj3f9a7b431akdlszk";
        authors = [
          "Nika Layzell <nika@thelayzells.com>"
        ];
        dependencies = [
          {
            name = "proc-macro2";
            packageId = "proc-macro2";
            usesDefaultFeatures = false;
          }
          {
            name = "quote";
            packageId = "quote";
            usesDefaultFeatures = false;
          }
          {
            name = "syn";
            packageId = "syn";
            usesDefaultFeatures = false;
            features = [ "derive" "parsing" "printing" "clone-impls" "visit" "extra-traits" ];
          }
          {
            name = "unicode-xid";
            packageId = "unicode-xid";
          }
        ];
        features = {
          "default" = [ "proc-macro" ];
          "proc-macro" = [ "proc-macro2/proc-macro" "syn/proc-macro" "quote/proc-macro" ];
        };
        resolvedDefaultFeatures = [ "default" "proc-macro" ];
      };
      "sysinfo" = rec {
        crateName = "sysinfo";
        version = "0.21.1";
        edition = "2018";
        sha256 = "04zmi5fr2r3yk4wf56ni0i9l0vnaimhs4hcqm1yg0qm4di52qv7v";type = [ "rlib" "cdylib" ];
        authors = [
          "Guillaume Gomez <guillaume1.gomez@gmail.com>"
        ];
        dependencies = [
          {
            name = "cfg-if";
            packageId = "cfg-if 1.0.0";
          }
          {
            name = "core-foundation-sys";
            packageId = "core-foundation-sys";
            target = { target, features }: ((target."os" == "macos") || (target."os" == "ios"));
          }
          {
            name = "libc";
            packageId = "libc";
            target = { target, features }: (!((target."os" == "unknown") || (target."arch" == "wasm32")));
          }
          {
            name = "ntapi";
            packageId = "ntapi";
            target = { target, features }: (target."windows" or false);
          }
          {
            name = "once_cell";
            packageId = "once_cell";
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.9";
            target = { target, features }: (target."windows" or false);
            features = [ "fileapi" "handleapi" "ifdef" "ioapiset" "minwindef" "pdh" "psapi" "synchapi" "sysinfoapi" "winbase" "winerror" "winioctl" "winnt" "oleauto" "wbemcli" "rpcdce" "combaseapi" "objidl" "powerbase" "netioapi" "lmcons" "lmaccess" "lmapibuf" "memoryapi" "shellapi" "std" ];
          }
        ];
        features = {
          "apple-app-store" = [ "apple-sandbox" ];
          "debug" = [ "libc/extra_traits" ];
          "default" = [ "multithread" ];
          "multithread" = [ "rayon" ];
        };
      };
      "tar" = rec {
        crateName = "tar";
        version = "0.4.38";
        edition = "2018";
        sha256 = "1ikiz14wbfmaaw5mrv93msa8v6n3i595z5kw9p0fdqa40dy80mab";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        dependencies = [
          {
            name = "filetime";
            packageId = "filetime";
          }
          {
            name = "libc";
            packageId = "libc";
            target = { target, features }: (target."unix" or false);
          }
          {
            name = "xattr";
            packageId = "xattr";
            optional = true;
            target = { target, features }: (target."unix" or false);
          }
        ];
        features = {
          "default" = [ "xattr" ];
        };
        resolvedDefaultFeatures = [ "default" "xattr" ];
      };
      "target-lexicon" = rec {
        crateName = "target-lexicon";
        version = "0.12.2";
        edition = "2018";
        sha256 = "1zsvillq0zsggg3fb0mfmcia0f68wfclahaqc0zgln14pkfzrgyr";
        authors = [
          "Dan Gohman <sunfish@mozilla.com>"
        ];
        features = {
        };
        resolvedDefaultFeatures = [ "default" ];
      };
      "tempfile" = rec {
        crateName = "tempfile";
        version = "3.3.0";
        edition = "2018";
        sha256 = "1r3rdp66f7w075mz6blh244syr3h0lbm07ippn7xrbgfxbs1xnsw";
        authors = [
          "Steven Allen <steven@stebalien.com>"
          "The Rust Project Developers"
          "Ashley Mannix <ashleymannix@live.com.au>"
          "Jason White <jasonaw0@gmail.com>"
        ];
        dependencies = [
          {
            name = "cfg-if";
            packageId = "cfg-if 1.0.0";
          }
          {
            name = "fastrand";
            packageId = "fastrand";
          }
          {
            name = "libc";
            packageId = "libc";
            target = { target, features }: ((target."unix" or false) || (target."os" == "wasi"));
          }
          {
            name = "redox_syscall";
            packageId = "redox_syscall 0.2.10";
            target = { target, features }: (target."os" == "redox");
          }
          {
            name = "remove_dir_all";
            packageId = "remove_dir_all";
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.9";
            target = { target, features }: (target."windows" or false);
            features = [ "fileapi" "handleapi" "winbase" ];
          }
        ];
        features = {
        };
      };
      "tendermint" = rec {
        crateName = "tendermint";
        version = "0.23.5";
        edition = "2018";
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/heliaxdev/tendermint-rs";
          rev = "a1439b37ac64fbcaf508021fc1e1aff07c18147e";
          sha256 = "1k1339kyk6n7j782l03mkn86p485zgikwapp7b6gdngywhzs5515";
        };
        authors = [
          "Informal Systems <hello@informal.systems>"
          "Ismail Khoffi <Ismail.Khoffi@gmail.com>"
          "ValarDragon <dojha12@gmail.com>"
          "Tony Arcieri <tony@iqlusion.io>"
        ];
        dependencies = [
          {
            name = "async-trait";
            packageId = "async-trait";
            usesDefaultFeatures = false;
          }
          {
            name = "bytes";
            packageId = "bytes 1.1.0";
            usesDefaultFeatures = false;
          }
          {
            name = "ed25519";
            packageId = "ed25519";
            usesDefaultFeatures = false;
          }
          {
            name = "ed25519-dalek";
            packageId = "ed25519-dalek";
            usesDefaultFeatures = false;
            features = [ "u64_backend" ];
          }
          {
            name = "flex-error";
            packageId = "flex-error";
            usesDefaultFeatures = false;
          }
          {
            name = "futures";
            packageId = "futures 0.3.19";
            usesDefaultFeatures = false;
          }
          {
            name = "num-traits";
            packageId = "num-traits 0.2.14";
            usesDefaultFeatures = false;
          }
          {
            name = "once_cell";
            packageId = "once_cell";
            usesDefaultFeatures = false;
          }
          {
            name = "prost";
            packageId = "prost 0.9.0";
            usesDefaultFeatures = false;
          }
          {
            name = "prost-types";
            packageId = "prost-types 0.9.0";
            usesDefaultFeatures = false;
          }
          {
            name = "serde";
            packageId = "serde 1.0.136";
            usesDefaultFeatures = false;
            features = [ "derive" ];
          }
          {
            name = "serde_bytes";
            packageId = "serde_bytes";
            usesDefaultFeatures = false;
          }
          {
            name = "serde_json";
            packageId = "serde_json";
            usesDefaultFeatures = false;
            features = [ "alloc" ];
          }
          {
            name = "serde_repr";
            packageId = "serde_repr";
            usesDefaultFeatures = false;
          }
          {
            name = "sha2";
            packageId = "sha2 0.9.9";
            usesDefaultFeatures = false;
          }
          {
            name = "signature";
            packageId = "signature";
            usesDefaultFeatures = false;
          }
          {
            name = "subtle";
            packageId = "subtle 2.4.1";
            usesDefaultFeatures = false;
          }
          {
            name = "subtle-encoding";
            packageId = "subtle-encoding";
            usesDefaultFeatures = false;
            features = [ "bech32-preview" ];
          }
          {
            name = "tendermint-proto";
            packageId = "tendermint-proto";
            usesDefaultFeatures = false;
          }
          {
            name = "time";
            packageId = "time 0.3.7";
            usesDefaultFeatures = false;
            features = [ "macros" "parsing" ];
          }
          {
            name = "zeroize";
            packageId = "zeroize";
            usesDefaultFeatures = false;
            features = [ "zeroize_derive" "alloc" ];
          }
        ];
        features = {
          "clock" = [ "time/std" ];
          "default" = [ "std" ];
          "secp256k1" = [ "k256" "ripemd160" ];
          "std" = [ "flex-error/std" "flex-error/eyre_tracer" "clock" ];
        };
        resolvedDefaultFeatures = [ "clock" "default" "std" ];
      };
      "tendermint-config" = rec {
        crateName = "tendermint-config";
        version = "0.23.5";
        edition = "2018";
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/heliaxdev/tendermint-rs";
          rev = "a1439b37ac64fbcaf508021fc1e1aff07c18147e";
          sha256 = "1k1339kyk6n7j782l03mkn86p485zgikwapp7b6gdngywhzs5515";
        };
        authors = [
          "Informal Systems <hello@informal.systems>"
        ];
        dependencies = [
          {
            name = "flex-error";
            packageId = "flex-error";
            usesDefaultFeatures = false;
          }
          {
            name = "serde";
            packageId = "serde 1.0.136";
            features = [ "derive" ];
          }
          {
            name = "serde_json";
            packageId = "serde_json";
          }
          {
            name = "tendermint";
            packageId = "tendermint";
            usesDefaultFeatures = false;
          }
          {
            name = "toml";
            packageId = "toml";
          }
          {
            name = "url";
            packageId = "url 2.2.2";
          }
        ];

      };
      "tendermint-light-client-verifier" = rec {
        crateName = "tendermint-light-client-verifier";
        version = "0.23.5";
        edition = "2021";
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/heliaxdev/tendermint-rs";
          rev = "a1439b37ac64fbcaf508021fc1e1aff07c18147e";
          sha256 = "1k1339kyk6n7j782l03mkn86p485zgikwapp7b6gdngywhzs5515";
        };
        authors = [
          "Informal Systems <hello@informal.systems>"
        ];
        dependencies = [
          {
            name = "derive_more";
            packageId = "derive_more";
            usesDefaultFeatures = false;
            features = [ "display" ];
          }
          {
            name = "flex-error";
            packageId = "flex-error";
            usesDefaultFeatures = false;
          }
          {
            name = "serde";
            packageId = "serde 1.0.136";
            usesDefaultFeatures = false;
          }
          {
            name = "tendermint";
            packageId = "tendermint";
            usesDefaultFeatures = false;
          }
          {
            name = "tendermint-rpc";
            packageId = "tendermint-rpc";
            usesDefaultFeatures = false;
          }
          {
            name = "time";
            packageId = "time 0.3.7";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "default" = [ "flex-error/std" "flex-error/eyre_tracer" ];
        };
      };
      "tendermint-proto" = rec {
        crateName = "tendermint-proto";
        version = "0.23.5";
        edition = "2018";
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/heliaxdev/tendermint-rs";
          rev = "a1439b37ac64fbcaf508021fc1e1aff07c18147e";
          sha256 = "1k1339kyk6n7j782l03mkn86p485zgikwapp7b6gdngywhzs5515";
        };
        authors = [
          "Informal Systems <hello@informal.systems>"
        ];
        dependencies = [
          {
            name = "bytes";
            packageId = "bytes 1.1.0";
            usesDefaultFeatures = false;
          }
          {
            name = "flex-error";
            packageId = "flex-error";
            usesDefaultFeatures = false;
          }
          {
            name = "num-derive";
            packageId = "num-derive";
            usesDefaultFeatures = false;
          }
          {
            name = "num-traits";
            packageId = "num-traits 0.2.14";
            usesDefaultFeatures = false;
          }
          {
            name = "prost";
            packageId = "prost 0.9.0";
            usesDefaultFeatures = false;
          }
          {
            name = "prost-types";
            packageId = "prost-types 0.9.0";
            usesDefaultFeatures = false;
          }
          {
            name = "serde";
            packageId = "serde 1.0.136";
            usesDefaultFeatures = false;
            features = [ "derive" ];
          }
          {
            name = "serde_bytes";
            packageId = "serde_bytes";
            usesDefaultFeatures = false;
            features = [ "alloc" ];
          }
          {
            name = "subtle-encoding";
            packageId = "subtle-encoding";
            usesDefaultFeatures = false;
            features = [ "hex" "base64" "alloc" ];
          }
          {
            name = "time";
            packageId = "time 0.3.7";
            usesDefaultFeatures = false;
            features = [ "macros" "parsing" ];
          }
        ];

      };
      "tendermint-rpc" = rec {
        crateName = "tendermint-rpc";
        version = "0.23.5";
        edition = "2018";
        crateBin = [];
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/heliaxdev/tendermint-rs";
          rev = "a1439b37ac64fbcaf508021fc1e1aff07c18147e";
          sha256 = "1k1339kyk6n7j782l03mkn86p485zgikwapp7b6gdngywhzs5515";
        };
        authors = [
          "Informal Systems <hello@informal.systems>"
          "Ismail Khoffi <Ismail.Khoffi@gmail.com>"
          "Alexander Simmerl <a.simmerl@gmail.com>"
        ];
        dependencies = [
          {
            name = "async-trait";
            packageId = "async-trait";
            optional = true;
            usesDefaultFeatures = false;
          }
          {
            name = "async-tungstenite";
            packageId = "async-tungstenite";
            optional = true;
            usesDefaultFeatures = false;
            features = [ "tokio-runtime" "tokio-rustls" ];
          }
          {
            name = "bytes";
            packageId = "bytes 1.1.0";
            usesDefaultFeatures = false;
          }
          {
            name = "flex-error";
            packageId = "flex-error";
            usesDefaultFeatures = false;
          }
          {
            name = "futures";
            packageId = "futures 0.3.19";
            optional = true;
            usesDefaultFeatures = false;
          }
          {
            name = "getrandom";
            packageId = "getrandom 0.2.4";
            usesDefaultFeatures = false;
            features = [ "js" ];
          }
          {
            name = "http";
            packageId = "http";
            optional = true;
            usesDefaultFeatures = false;
          }
          {
            name = "hyper";
            packageId = "hyper 0.14.16";
            optional = true;
            usesDefaultFeatures = false;
            features = [ "client" "http1" "http2" ];
          }
          {
            name = "hyper-proxy";
            packageId = "hyper-proxy";
            optional = true;
            usesDefaultFeatures = false;
            features = [ "rustls" ];
          }
          {
            name = "hyper-rustls";
            packageId = "hyper-rustls";
            optional = true;
            usesDefaultFeatures = false;
            features = [ "rustls-native-certs" "webpki-roots" "tokio-runtime" ];
          }
          {
            name = "peg";
            packageId = "peg";
            usesDefaultFeatures = false;
          }
          {
            name = "pin-project";
            packageId = "pin-project 1.0.10";
            usesDefaultFeatures = false;
          }
          {
            name = "serde";
            packageId = "serde 1.0.136";
            usesDefaultFeatures = false;
            features = [ "derive" ];
          }
          {
            name = "serde_bytes";
            packageId = "serde_bytes";
            usesDefaultFeatures = false;
          }
          {
            name = "serde_json";
            packageId = "serde_json";
            usesDefaultFeatures = false;
            features = [ "std" ];
          }
          {
            name = "subtle-encoding";
            packageId = "subtle-encoding";
            usesDefaultFeatures = false;
            features = [ "bech32-preview" ];
          }
          {
            name = "tendermint";
            packageId = "tendermint";
            usesDefaultFeatures = false;
          }
          {
            name = "tendermint-config";
            packageId = "tendermint-config";
            usesDefaultFeatures = false;
          }
          {
            name = "tendermint-proto";
            packageId = "tendermint-proto";
            usesDefaultFeatures = false;
          }
          {
            name = "thiserror";
            packageId = "thiserror";
            usesDefaultFeatures = false;
          }
          {
            name = "time";
            packageId = "time 0.3.7";
            usesDefaultFeatures = false;
            features = [ "macros" "parsing" ];
          }
          {
            name = "tokio";
            packageId = "tokio";
            optional = true;
            usesDefaultFeatures = false;
            features = [ "rt-multi-thread" ];
          }
          {
            name = "tracing";
            packageId = "tracing 0.1.31";
            optional = true;
            usesDefaultFeatures = false;
          }
          {
            name = "url";
            packageId = "url 2.2.2";
            usesDefaultFeatures = false;
          }
          {
            name = "uuid";
            packageId = "uuid";
            usesDefaultFeatures = false;
          }
          {
            name = "walkdir";
            packageId = "walkdir";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "cli" = [ "http-client" "structopt" "tracing-subscriber" "websocket-client" ];
          "default" = [ "flex-error/std" "flex-error/eyre_tracer" ];
          "http-client" = [ "async-trait" "futures" "http" "hyper" "hyper-proxy" "hyper-rustls" "tokio/fs" "tokio/macros" "tracing" ];
          "secp256k1" = [ "tendermint/secp256k1" ];
          "websocket-client" = [ "async-trait" "async-tungstenite" "futures" "tokio/rt-multi-thread" "tokio/fs" "tokio/macros" "tokio/sync" "tokio/time" "tracing" ];
        };
        resolvedDefaultFeatures = [ "async-trait" "async-tungstenite" "default" "futures" "http" "http-client" "hyper" "hyper-proxy" "hyper-rustls" "tokio" "tracing" "websocket-client" ];
      };
      "tendermint-testgen" = rec {
        crateName = "tendermint-testgen";
        version = "0.23.5";
        edition = "2018";
        crateBin = [];
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/heliaxdev/tendermint-rs";
          rev = "a1439b37ac64fbcaf508021fc1e1aff07c18147e";
          sha256 = "1k1339kyk6n7j782l03mkn86p485zgikwapp7b6gdngywhzs5515";
        };
        authors = [
          "Informal Systems <hello@informal.systems>"
        ];
        dependencies = [
          {
            name = "ed25519-dalek";
            packageId = "ed25519-dalek";
            usesDefaultFeatures = false;
          }
          {
            name = "gumdrop";
            packageId = "gumdrop";
            usesDefaultFeatures = false;
          }
          {
            name = "serde";
            packageId = "serde 1.0.136";
            usesDefaultFeatures = false;
            features = [ "derive" ];
          }
          {
            name = "serde_json";
            packageId = "serde_json";
            usesDefaultFeatures = false;
            features = [ "std" ];
          }
          {
            name = "simple-error";
            packageId = "simple-error";
            usesDefaultFeatures = false;
          }
          {
            name = "tempfile";
            packageId = "tempfile";
            usesDefaultFeatures = false;
          }
          {
            name = "tendermint";
            packageId = "tendermint";
            features = [ "clock" ];
          }
          {
            name = "time";
            packageId = "time 0.3.7";
            rename = "time";
            usesDefaultFeatures = false;
            features = [ "std" ];
          }
        ];

      };
      "term_size" = rec {
        crateName = "term_size";
        version = "0.3.2";
        edition = "2015";
        sha256 = "1n885cykajsppx86xl7d0dqkgmgsp8v914lvs12qzvd0dij2jh8y";
        authors = [
          "Kevin K. <kbknapp@gmail.com>"
          "Benjamin Sago <ogham@bsago.me>"
        ];
        dependencies = [
          {
            name = "libc";
            packageId = "libc";
            target = { target, features }: (!(target."os" == "windows"));
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.9";
            target = { target, features }: (target."os" == "windows");
            features = [ "wincon" "processenv" "winbase" ];
          }
        ];
        features = {
          "travis" = [ "nightly" ];
        };
        resolvedDefaultFeatures = [ "default" ];
      };
      "termcolor" = rec {
        crateName = "termcolor";
        version = "1.1.2";
        edition = "2018";
        sha256 = "1x65i1ny4m6z1by62ra6wdcrd557p2ysm866x0pg60zby2cxizid";
        authors = [
          "Andrew Gallant <jamslam@gmail.com>"
        ];
        dependencies = [
          {
            name = "winapi-util";
            packageId = "winapi-util";
            target = { target, features }: (target."windows" or false);
          }
        ];

      };
      "termion" = rec {
        crateName = "termion";
        version = "1.5.6";
        edition = "2015";
        sha256 = "0zk023f0zkws358ll399cawvwdnd0wg8wad4g61kz766xbi8aw87";
        authors = [
          "ticki <Ticki@users.noreply.github.com>"
          "gycos <alexandre.bury@gmail.com>"
          "IGI-111 <igi-111@protonmail.com>"
        ];
        dependencies = [
          {
            name = "libc";
            packageId = "libc";
            target = { target, features }: (!(target."os" == "redox"));
          }
          {
            name = "numtoa";
            packageId = "numtoa";
            features = [ "std" ];
          }
          {
            name = "redox_syscall";
            packageId = "redox_syscall 0.2.10";
            target = { target, features }: (target."os" == "redox");
          }
          {
            name = "redox_termios";
            packageId = "redox_termios";
            target = { target, features }: (target."os" == "redox");
          }
        ];

      };
      "termtree" = rec {
        crateName = "termtree";
        version = "0.2.4";
        edition = "2018";
        sha256 = "02y9lhad22p56y8pgwz04si2pd91nxcl5djmmall6v1vd2c9hzjh";

      };
      "test-log" = rec {
        crateName = "test-log";
        version = "0.2.8";
        edition = "2018";
        sha256 = "194i7mb4gi3a1mpid3n29q2xj8mr6l78qycc0wng8h4savncly7b";
        procMacro = true;
        authors = [
          "Daniel Mueller <deso@posteo.net>"
        ];
        dependencies = [
          {
            name = "proc-macro2";
            packageId = "proc-macro2";
          }
          {
            name = "quote";
            packageId = "quote";
          }
          {
            name = "syn";
            packageId = "syn";
            features = [ "full" ];
          }
        ];
        features = {
          "default" = [ "log" ];
        };
        resolvedDefaultFeatures = [ "trace" ];
      };
      "textwrap 0.11.0" = rec {
        crateName = "textwrap";
        version = "0.11.0";
        edition = "2015";
        sha256 = "0q5hky03ik3y50s9sz25r438bc4nwhqc6dqwynv4wylc807n29nk";
        authors = [
          "Martin Geisler <martin@geisler.net>"
        ];
        dependencies = [
          {
            name = "term_size";
            packageId = "term_size";
            optional = true;
          }
          {
            name = "unicode-width";
            packageId = "unicode-width";
          }
        ];

        resolvedDefaultFeatures = [ "term_size" ];
      };
      "textwrap 0.12.1" = rec {
        crateName = "textwrap";
        version = "0.12.1";
        edition = "2018";
        sha256 = "12978qmkl5gcp94lxndpvp9qxq8mxp7hm9xbrw3422dgikchhc10";
        authors = [
          "Martin Geisler <martin@geisler.net>"
        ];
        dependencies = [
          {
            name = "unicode-width";
            packageId = "unicode-width";
          }
        ];

      };
      "thiserror" = rec {
        crateName = "thiserror";
        version = "1.0.30";
        edition = "2018";
        sha256 = "05y4wm29ck8flwq5k1q6nhwh00a3b30cz3xr0qvnbwad5vjsnjw5";
        authors = [
          "David Tolnay <dtolnay@gmail.com>"
        ];
        dependencies = [
          {
            name = "thiserror-impl";
            packageId = "thiserror-impl";
          }
        ];

      };
      "thiserror-impl" = rec {
        crateName = "thiserror-impl";
        version = "1.0.30";
        edition = "2018";
        sha256 = "0jviwmvx6wzawsj6c9msic7h419wmsbjagl9dzhpydkzc8zzscma";
        procMacro = true;
        authors = [
          "David Tolnay <dtolnay@gmail.com>"
        ];
        dependencies = [
          {
            name = "proc-macro2";
            packageId = "proc-macro2";
          }
          {
            name = "quote";
            packageId = "quote";
          }
          {
            name = "syn";
            packageId = "syn";
          }
        ];

      };
      "thread_local 0.3.4" = rec {
        crateName = "thread_local";
        version = "0.3.4";
        edition = "2015";
        sha256 = "055vj0ddb6vh0zaqdlxssfqzzpgs4ll5l5j7nqvabdzfgasw95qn";
        authors = [
          "Amanieu d'Antras <amanieu@gmail.com>"
        ];
        dependencies = [
          {
            name = "lazy_static";
            packageId = "lazy_static 0.2.11";
          }
          {
            name = "unreachable";
            packageId = "unreachable";
          }
        ];

      };
      "thread_local 1.1.4" = rec {
        crateName = "thread_local";
        version = "1.1.4";
        edition = "2018";
        sha256 = "1001bvz6a688wf3izcrh3jqrkiqaarf44wf08azm071ig1xw45jm";
        authors = [
          "Amanieu d'Antras <amanieu@gmail.com>"
        ];
        dependencies = [
          {
            name = "once_cell";
            packageId = "once_cell";
          }
        ];

      };
      "time 0.1.44" = rec {
        crateName = "time";
        version = "0.1.44";
        edition = "2015";
        sha256 = "0m9jwy2pcmk232r3b9r80fs12mkckfjffjha4qfaxcdq9a8ydfbd";
        authors = [
          "The Rust Project Developers"
        ];
        dependencies = [
          {
            name = "libc";
            packageId = "libc";
          }
          {
            name = "wasi";
            packageId = "wasi 0.10.0+wasi-snapshot-preview1";
            target = { target, features }: (target."os" == "wasi");
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.9";
            target = { target, features }: (target."windows" or false);
            features = [ "std" "minwinbase" "minwindef" "ntdef" "profileapi" "sysinfoapi" "timezoneapi" ];
          }
        ];
        devDependencies = [
          {
            name = "winapi";
            packageId = "winapi 0.3.9";
            features = [ "std" "processthreadsapi" "winbase" ];
          }
        ];

      };
      "time 0.3.7" = rec {
        crateName = "time";
        version = "0.3.7";
        edition = "2018";
        sha256 = "0gbmwlkj15dfhbqvxlzji1ffc1lidblpgg1q3b3378hgyfcbqk00";
        authors = [
          "Jacob Pratt <open-source@jhpratt.dev>"
          "Time contributors"
        ];
        dependencies = [
          {
            name = "libc";
            packageId = "libc";
            target = { target, features }: (target."family" == "unix");
          }
          {
            name = "num_threads";
            packageId = "num_threads";
            target = { target, features }: (target."family" == "unix");
          }
          {
            name = "time-macros";
            packageId = "time-macros";
            optional = true;
          }
        ];
        features = {
          "default" = [ "std" ];
          "formatting" = [ "itoa" "std" ];
          "large-dates" = [ "time-macros/large-dates" ];
          "local-offset" = [ "std" ];
          "macros" = [ "time-macros" ];
          "quickcheck" = [ "quickcheck-dep" "alloc" ];
          "serde-human-readable" = [ "serde" "formatting" "parsing" ];
          "serde-well-known" = [ "serde/alloc" "formatting" "parsing" ];
          "std" = [ "alloc" ];
        };
        resolvedDefaultFeatures = [ "alloc" "macros" "parsing" "std" "time-macros" ];
      };
      "time-macros" = rec {
        crateName = "time-macros";
        version = "0.2.3";
        edition = "2018";
        sha256 = "1mj7pv8y9j2csrh1l8aabras36pgysbnfy18330srh4g8sihrsr5";
        procMacro = true;
        authors = [
          "Jacob Pratt <open-source@jhpratt.dev>"
          "Time contributors"
        ];
        features = {
        };
      };
      "tinyvec" = rec {
        crateName = "tinyvec";
        version = "1.5.1";
        edition = "2018";
        sha256 = "1lnqnva56673r0d40586rkzyl2qqcz19wm29q8h5a95n89d1s71c";
        authors = [
          "Lokathor <zefria@gmail.com>"
        ];
        dependencies = [
          {
            name = "tinyvec_macros";
            packageId = "tinyvec_macros";
            optional = true;
          }
        ];
        features = {
          "alloc" = [ "tinyvec_macros" ];
          "real_blackbox" = [ "criterion/real_blackbox" ];
          "rustc_1_55" = [ "rustc_1_40" ];
        };
        resolvedDefaultFeatures = [ "alloc" "default" "tinyvec_macros" ];
      };
      "tinyvec_macros" = rec {
        crateName = "tinyvec_macros";
        version = "0.1.0";
        edition = "2018";
        sha256 = "0p5zvgbas5nh403fbxica819mf3g83n8g2hzpfazfr56w6klv9yd";
        authors = [
          "Soveu <marx.tomasz@gmail.com>"
        ];

      };
      "tokio" = rec {
        crateName = "tokio";
        version = "1.16.1";
        edition = "2018";
        sha256 = "02pwb89x5lixdpfpxjdmngqwq782jfx1cxy5x04x7rjxc95sc9qc";
        authors = [
          "Tokio Contributors <team@tokio.rs>"
        ];
        dependencies = [
          {
            name = "bytes";
            packageId = "bytes 1.1.0";
            optional = true;
          }
          {
            name = "libc";
            packageId = "libc";
            optional = true;
            target = { target, features }: (target."unix" or false);
          }
          {
            name = "memchr";
            packageId = "memchr";
            optional = true;
          }
          {
            name = "mio";
            packageId = "mio 0.7.14";
            optional = true;
          }
          {
            name = "num_cpus";
            packageId = "num_cpus";
            optional = true;
          }
          {
            name = "once_cell";
            packageId = "once_cell";
            optional = true;
          }
          {
            name = "parking_lot";
            packageId = "parking_lot 0.11.2";
            optional = true;
          }
          {
            name = "pin-project-lite";
            packageId = "pin-project-lite 0.2.8";
          }
          {
            name = "signal-hook-registry";
            packageId = "signal-hook-registry";
            optional = true;
            target = { target, features }: (target."unix" or false);
          }
          {
            name = "tokio-macros";
            packageId = "tokio-macros";
            optional = true;
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.9";
            optional = true;
            usesDefaultFeatures = false;
            target = { target, features }: (target."windows" or false);
          }
        ];
        devDependencies = [
          {
            name = "libc";
            packageId = "libc";
            target = {target, features}: (target."unix" or false);
          }
        ];
        features = {
          "full" = [ "fs" "io-util" "io-std" "macros" "net" "parking_lot" "process" "rt" "rt-multi-thread" "signal" "sync" "time" ];
          "io-util" = [ "memchr" "bytes" ];
          "macros" = [ "tokio-macros" ];
          "net" = [ "libc" "mio/os-poll" "mio/os-util" "mio/tcp" "mio/udp" "mio/uds" "winapi/namedpipeapi" ];
          "process" = [ "bytes" "once_cell" "libc" "mio/os-poll" "mio/os-util" "mio/uds" "signal-hook-registry" "winapi/threadpoollegacyapiset" ];
          "rt-multi-thread" = [ "num_cpus" "rt" ];
          "signal" = [ "once_cell" "libc" "mio/os-poll" "mio/uds" "mio/os-util" "signal-hook-registry" "winapi/consoleapi" ];
          "test-util" = [ "rt" "sync" "time" ];
        };
        resolvedDefaultFeatures = [ "bytes" "default" "fs" "full" "io-std" "io-util" "libc" "macros" "memchr" "mio" "net" "num_cpus" "once_cell" "parking_lot" "process" "rt" "rt-multi-thread" "signal" "signal-hook-registry" "sync" "test-util" "time" "tokio-macros" "winapi" ];
      };
      "tokio-codec" = rec {
        crateName = "tokio-codec";
        version = "0.1.2";
        edition = "2015";
        sha256 = "0swpfngcb331lzggk6j68yks6w0bnw35vpl4hv8p03msc239kci5";
        authors = [
          "Carl Lerche <me@carllerche.com>"
          "Bryan Burgers <bryan@burgers.io>"
        ];
        dependencies = [
          {
            name = "bytes";
            packageId = "bytes 0.4.12";
          }
          {
            name = "futures";
            packageId = "futures 0.1.31";
          }
          {
            name = "tokio-io";
            packageId = "tokio-io";
          }
        ];

      };
      "tokio-executor" = rec {
        crateName = "tokio-executor";
        version = "0.1.10";
        edition = "2015";
        sha256 = "0w8n78d2vixs1vghqc4wy9w0d1h6qkli51c1yzhzbns88n7inbgv";
        authors = [
          "Carl Lerche <me@carllerche.com>"
        ];
        dependencies = [
          {
            name = "crossbeam-utils";
            packageId = "crossbeam-utils 0.7.2";
          }
          {
            name = "futures";
            packageId = "futures 0.1.31";
          }
        ];

      };
      "tokio-io" = rec {
        crateName = "tokio-io";
        version = "0.1.13";
        edition = "2015";
        sha256 = "0x06zyzinans1pn90g6i150lgixijdf1cg8y2gipjd09ms58dz2p";
        authors = [
          "Carl Lerche <me@carllerche.com>"
        ];
        dependencies = [
          {
            name = "bytes";
            packageId = "bytes 0.4.12";
          }
          {
            name = "futures";
            packageId = "futures 0.1.31";
          }
          {
            name = "log";
            packageId = "log 0.4.14";
          }
        ];

      };
      "tokio-io-timeout" = rec {
        crateName = "tokio-io-timeout";
        version = "1.2.0";
        edition = "2018";
        sha256 = "1gx84f92q1491vj4pkn81j8pz1s3pgwnbrsdhfsa2556mli41drh";
        authors = [
          "Steven Fackler <sfackler@gmail.com>"
        ];
        dependencies = [
          {
            name = "pin-project-lite";
            packageId = "pin-project-lite 0.2.8";
          }
          {
            name = "tokio";
            packageId = "tokio";
            features = [ "time" ];
          }
        ];
        devDependencies = [
          {
            name = "tokio";
            packageId = "tokio";
            features = [ "full" ];
          }
        ];

      };
      "tokio-macros" = rec {
        crateName = "tokio-macros";
        version = "1.7.0";
        edition = "2018";
        sha256 = "1ds34qsfvgf63cjgdx3gr4pl7i76fifyar15ksbillcc8hpzfmxm";
        procMacro = true;
        authors = [
          "Tokio Contributors <team@tokio.rs>"
        ];
        dependencies = [
          {
            name = "proc-macro2";
            packageId = "proc-macro2";
          }
          {
            name = "quote";
            packageId = "quote";
          }
          {
            name = "syn";
            packageId = "syn";
            features = [ "full" ];
          }
        ];

      };
      "tokio-native-tls" = rec {
        crateName = "tokio-native-tls";
        version = "0.3.0";
        edition = "2018";
        sha256 = "0yvikgmph2qjq0ni2h2wfaxkzhbnc09c2544av0zidyj1dk9bngp";
        authors = [
          "Tokio Contributors <team@tokio.rs>"
        ];
        dependencies = [
          {
            name = "native-tls";
            packageId = "native-tls";
          }
          {
            name = "tokio";
            packageId = "tokio";
          }
        ];
        devDependencies = [
          {
            name = "tokio";
            packageId = "tokio";
            features = [ "macros" "rt" "rt-multi-thread" "io-util" "net" ];
          }
        ];

      };
      "tokio-reactor" = rec {
        crateName = "tokio-reactor";
        version = "0.1.12";
        edition = "2015";
        sha256 = "0l8klnd41q55f3ialzz0lb7s5bfwa38nh86sa9vai2xsqh75kg09";
        authors = [
          "Carl Lerche <me@carllerche.com>"
        ];
        dependencies = [
          {
            name = "crossbeam-utils";
            packageId = "crossbeam-utils 0.7.2";
          }
          {
            name = "futures";
            packageId = "futures 0.1.31";
          }
          {
            name = "lazy_static";
            packageId = "lazy_static 1.4.0";
          }
          {
            name = "log";
            packageId = "log 0.4.14";
          }
          {
            name = "mio";
            packageId = "mio 0.6.23";
          }
          {
            name = "num_cpus";
            packageId = "num_cpus";
          }
          {
            name = "parking_lot";
            packageId = "parking_lot 0.9.0";
          }
          {
            name = "slab";
            packageId = "slab";
          }
          {
            name = "tokio-executor";
            packageId = "tokio-executor";
          }
          {
            name = "tokio-io";
            packageId = "tokio-io";
          }
          {
            name = "tokio-sync";
            packageId = "tokio-sync";
          }
        ];
        devDependencies = [
          {
            name = "num_cpus";
            packageId = "num_cpus";
          }
        ];

      };
      "tokio-rustls" = rec {
        crateName = "tokio-rustls";
        version = "0.22.0";
        edition = "2018";
        sha256 = "1dp1s2kai081f3fn9gjq92x2lw7lm7iqpcsl02cg2zg5fbg48s5w";
        authors = [
          "quininer kel <quininer@live.com>"
        ];
        dependencies = [
          {
            name = "rustls";
            packageId = "rustls";
          }
          {
            name = "tokio";
            packageId = "tokio";
          }
          {
            name = "webpki";
            packageId = "webpki";
          }
        ];
        devDependencies = [
          {
            name = "tokio";
            packageId = "tokio";
            features = [ "full" ];
          }
        ];
        features = {
          "dangerous_configuration" = [ "rustls/dangerous_configuration" ];
        };
      };
      "tokio-stream" = rec {
        crateName = "tokio-stream";
        version = "0.1.8";
        edition = "2018";
        sha256 = "1qwq0y21xprsql4v9y1cm1ymhgw66rznjmnjrjsii27zxy25852h";
        authors = [
          "Tokio Contributors <team@tokio.rs>"
        ];
        dependencies = [
          {
            name = "futures-core";
            packageId = "futures-core";
          }
          {
            name = "pin-project-lite";
            packageId = "pin-project-lite 0.2.8";
          }
          {
            name = "tokio";
            packageId = "tokio";
            features = [ "sync" ];
          }
        ];
        devDependencies = [
          {
            name = "tokio";
            packageId = "tokio";
            features = [ "full" "test-util" ];
          }
        ];
        features = {
          "default" = [ "time" ];
          "fs" = [ "tokio/fs" ];
          "io-util" = [ "tokio/io-util" ];
          "net" = [ "tokio/net" ];
          "signal" = [ "tokio/signal" ];
          "sync" = [ "tokio/sync" "tokio-util" ];
          "time" = [ "tokio/time" ];
        };
        resolvedDefaultFeatures = [ "default" "time" ];
      };
      "tokio-sync" = rec {
        crateName = "tokio-sync";
        version = "0.1.8";
        edition = "2015";
        sha256 = "1vkxz0y7qf9sshfpxvn506pvxy4vza8piavd8p64y5n85cam1zpd";
        authors = [
          "Carl Lerche <me@carllerche.com>"
        ];
        dependencies = [
          {
            name = "fnv";
            packageId = "fnv";
          }
          {
            name = "futures";
            packageId = "futures 0.1.31";
          }
        ];

      };
      "tokio-tcp" = rec {
        crateName = "tokio-tcp";
        version = "0.1.4";
        edition = "2015";
        sha256 = "0whzqnkyfym1ipzznibyjl3j9281walq4n0q5xs2xdz3cvniipwq";
        authors = [
          "Carl Lerche <me@carllerche.com>"
        ];
        dependencies = [
          {
            name = "bytes";
            packageId = "bytes 0.4.12";
          }
          {
            name = "futures";
            packageId = "futures 0.1.31";
          }
          {
            name = "iovec";
            packageId = "iovec";
          }
          {
            name = "mio";
            packageId = "mio 0.6.23";
          }
          {
            name = "tokio-io";
            packageId = "tokio-io";
          }
          {
            name = "tokio-reactor";
            packageId = "tokio-reactor";
          }
        ];

      };
      "tokio-test" = rec {
        crateName = "tokio-test";
        version = "0.4.2";
        edition = "2018";
        sha256 = "1qv3h6y0c87i22p3q6sqvq2a1y5lzim9abbzs4q6a5jymqkl6isk";
        authors = [
          "Tokio Contributors <team@tokio.rs>"
        ];
        dependencies = [
          {
            name = "async-stream";
            packageId = "async-stream";
          }
          {
            name = "bytes";
            packageId = "bytes 1.1.0";
          }
          {
            name = "futures-core";
            packageId = "futures-core";
          }
          {
            name = "tokio";
            packageId = "tokio";
            features = [ "rt" "sync" "time" "test-util" ];
          }
          {
            name = "tokio-stream";
            packageId = "tokio-stream";
          }
        ];
        devDependencies = [
          {
            name = "tokio";
            packageId = "tokio";
            features = [ "full" ];
          }
        ];

      };
      "tokio-tls" = rec {
        crateName = "tokio-tls";
        version = "0.2.1";
        edition = "2015";
        sha256 = "0z0gmvv7jrpan6y42p5f5wd48rqcd96igp592w1c5cr573c8qjrm";
        authors = [
          "Carl Lerche <me@carllerche.com>"
        ];
        dependencies = [
          {
            name = "futures";
            packageId = "futures 0.1.31";
          }
          {
            name = "native-tls";
            packageId = "native-tls";
          }
          {
            name = "tokio-io";
            packageId = "tokio-io";
          }
        ];

      };
      "tokio-util" = rec {
        crateName = "tokio-util";
        version = "0.6.9";
        edition = "2018";
        sha256 = "1h2cc3ickn6wj5c0bhw8v5drzrwr5r6n0rjbxgc6qdsx7scf36cy";
        authors = [
          "Tokio Contributors <team@tokio.rs>"
        ];
        dependencies = [
          {
            name = "bytes";
            packageId = "bytes 1.1.0";
          }
          {
            name = "futures-core";
            packageId = "futures-core";
          }
          {
            name = "futures-sink";
            packageId = "futures-sink";
          }
          {
            name = "log";
            packageId = "log 0.4.14";
          }
          {
            name = "pin-project-lite";
            packageId = "pin-project-lite 0.2.8";
          }
          {
            name = "tokio";
            packageId = "tokio";
            features = [ "sync" ];
          }
        ];
        devDependencies = [
          {
            name = "tokio";
            packageId = "tokio";
            features = [ "full" ];
          }
        ];
        features = {
          "__docs_rs" = [ "futures-util" ];
          "compat" = [ "futures-io" ];
          "full" = [ "codec" "compat" "io-util" "time" "net" "rt" ];
          "io-util" = [ "io" "tokio/rt" "tokio/io-util" ];
          "net" = [ "tokio/net" ];
          "rt" = [ "tokio/rt" ];
          "time" = [ "tokio/time" "slab" ];
        };
        resolvedDefaultFeatures = [ "codec" "default" ];
      };
      "toml" = rec {
        crateName = "toml";
        version = "0.5.8";
        edition = "2018";
        sha256 = "1apcmjrrjw429pjw7mqlmdwwd67g8305vwqy4kw3swr612bl44d3";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        dependencies = [
          {
            name = "serde";
            packageId = "serde 1.0.136";
          }
        ];
        features = {
          "preserve_order" = [ "indexmap" ];
        };
        resolvedDefaultFeatures = [ "default" ];
      };
      "tonic" = rec {
        crateName = "tonic";
        version = "0.6.2";
        edition = "2018";
        sha256 = "02jxiy0n2mw2c1fchykj3m18wp986685bji26px0z9qhkmjg827z";
        authors = [
          "Lucio Franco <luciofranco14@gmail.com>"
        ];
        dependencies = [
          {
            name = "async-stream";
            packageId = "async-stream";
          }
          {
            name = "async-trait";
            packageId = "async-trait";
            optional = true;
          }
          {
            name = "base64";
            packageId = "base64 0.13.0";
          }
          {
            name = "bytes";
            packageId = "bytes 1.1.0";
          }
          {
            name = "futures-core";
            packageId = "futures-core";
            usesDefaultFeatures = false;
          }
          {
            name = "futures-util";
            packageId = "futures-util";
            usesDefaultFeatures = false;
          }
          {
            name = "h2";
            packageId = "h2";
            optional = true;
          }
          {
            name = "http";
            packageId = "http";
          }
          {
            name = "http-body";
            packageId = "http-body";
          }
          {
            name = "hyper";
            packageId = "hyper 0.14.16";
            optional = true;
            features = [ "full" ];
          }
          {
            name = "hyper-timeout";
            packageId = "hyper-timeout";
            optional = true;
          }
          {
            name = "percent-encoding";
            packageId = "percent-encoding 2.1.0";
          }
          {
            name = "pin-project";
            packageId = "pin-project 1.0.10";
          }
          {
            name = "prost";
            packageId = "prost 0.9.0";
            rename = "prost1";
            optional = true;
          }
          {
            name = "prost-derive";
            packageId = "prost-derive 0.9.0";
            optional = true;
          }
          {
            name = "tokio";
            packageId = "tokio";
            optional = true;
            features = [ "net" ];
          }
          {
            name = "tokio-stream";
            packageId = "tokio-stream";
          }
          {
            name = "tokio-util";
            packageId = "tokio-util";
            features = [ "codec" ];
          }
          {
            name = "tower";
            packageId = "tower";
            optional = true;
            features = [ "balance" "buffer" "discover" "limit" "load" "make" "timeout" "util" ];
          }
          {
            name = "tower-layer";
            packageId = "tower-layer";
          }
          {
            name = "tower-service";
            packageId = "tower-service";
          }
          {
            name = "tracing";
            packageId = "tracing 0.1.31";
          }
          {
            name = "tracing-futures";
            packageId = "tracing-futures 0.2.5 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
          }
        ];
        devDependencies = [
          {
            name = "tokio";
            packageId = "tokio";
            features = [ "rt" "macros" ];
          }
          {
            name = "tower";
            packageId = "tower";
            features = [ "full" ];
          }
        ];
        features = {
          "codegen" = [ "async-trait" ];
          "compression" = [ "flate2" ];
          "default" = [ "transport" "codegen" "prost" ];
          "prost" = [ "prost1" "prost-derive" ];
          "tls" = [ "transport" "tokio-rustls" ];
          "tls-roots" = [ "tls-roots-common" "rustls-native-certs" ];
          "tls-roots-common" = [ "tls" ];
          "tls-webpki-roots" = [ "tls-roots-common" "webpki-roots" ];
          "transport" = [ "h2" "hyper" "tokio" "tower" "tracing-futures" "tokio/macros" "tokio/time" "hyper-timeout" ];
        };
        resolvedDefaultFeatures = [ "async-trait" "codegen" "default" "h2" "hyper" "hyper-timeout" "prost" "prost-derive" "prost1" "tokio" "tower" "tracing-futures" "transport" ];
      };
      "tonic-build" = rec {
        crateName = "tonic-build";
        version = "0.6.2";
        edition = "2018";
        sha256 = "0mx7bxsf8jsi6bfw3gp8hi2m3kdm71pxqc5jhik1hiz2znxg20wl";
        authors = [
          "Lucio Franco <luciofranco14@gmail.com>"
        ];
        dependencies = [
          {
            name = "proc-macro2";
            packageId = "proc-macro2";
          }
          {
            name = "prost-build";
            packageId = "prost-build 0.9.0";
            optional = true;
          }
          {
            name = "quote";
            packageId = "quote";
          }
          {
            name = "syn";
            packageId = "syn";
          }
        ];
        features = {
          "default" = [ "transport" "rustfmt" "prost" ];
          "prost" = [ "prost-build" ];
        };
        resolvedDefaultFeatures = [ "default" "prost" "prost-build" "rustfmt" "transport" ];
      };
      "tower" = rec {
        crateName = "tower";
        version = "0.4.11";
        edition = "2018";
        sha256 = "0sh6gkxy4xrs84mh7n896zkk7d5yp0fzxnsrvcdbv68ahvvbalan";
        authors = [
          "Tower Maintainers <team@tower-rs.com>"
        ];
        dependencies = [
          {
            name = "futures-core";
            packageId = "futures-core";
          }
          {
            name = "futures-util";
            packageId = "futures-util";
            optional = true;
            usesDefaultFeatures = false;
            features = [ "alloc" ];
          }
          {
            name = "hdrhistogram";
            packageId = "hdrhistogram";
            optional = true;
          }
          {
            name = "indexmap";
            packageId = "indexmap";
            optional = true;
          }
          {
            name = "pin-project";
            packageId = "pin-project 1.0.10";
          }
          {
            name = "pin-project-lite";
            packageId = "pin-project-lite 0.2.8";
          }
          {
            name = "rand";
            packageId = "rand 0.8.4";
            optional = true;
            features = [ "small_rng" ];
          }
          {
            name = "slab";
            packageId = "slab";
            optional = true;
          }
          {
            name = "tokio";
            packageId = "tokio";
            optional = true;
            features = [ "sync" ];
          }
          {
            name = "tokio-stream";
            packageId = "tokio-stream";
            optional = true;
          }
          {
            name = "tokio-util";
            packageId = "tokio-util";
            optional = true;
            usesDefaultFeatures = false;
          }
          {
            name = "tower-layer";
            packageId = "tower-layer";
          }
          {
            name = "tower-service";
            packageId = "tower-service";
          }
          {
            name = "tracing";
            packageId = "tracing 0.1.31";
            optional = true;
          }
        ];
        devDependencies = [
          {
            name = "hdrhistogram";
            packageId = "hdrhistogram";
          }
          {
            name = "tokio";
            packageId = "tokio";
            features = [ "macros" "sync" "test-util" "rt-multi-thread" ];
          }
          {
            name = "tokio-stream";
            packageId = "tokio-stream";
          }
        ];
        features = {
          "balance" = [ "discover" "load" "ready-cache" "make" "rand" "slab" "tokio-stream" ];
          "buffer" = [ "tokio/sync" "tokio/rt" "tokio-util" "tracing" ];
          "default" = [ "log" ];
          "filter" = [ "futures-util" ];
          "full" = [ "balance" "buffer" "discover" "filter" "hedge" "limit" "load" "load-shed" "make" "ready-cache" "reconnect" "retry" "spawn-ready" "steer" "timeout" "util" ];
          "hedge" = [ "util" "filter" "futures-util" "hdrhistogram" "tokio/time" "tracing" ];
          "limit" = [ "tokio/time" "tokio/sync" "tokio-util" "tracing" ];
          "load" = [ "tokio/time" "tracing" ];
          "log" = [ "tracing/log" ];
          "make" = [ "tokio/io-std" "futures-util" ];
          "ready-cache" = [ "futures-util" "indexmap" "tokio/sync" "tracing" ];
          "reconnect" = [ "make" "tokio/io-std" "tracing" ];
          "retry" = [ "tokio/time" ];
          "spawn-ready" = [ "futures-util" "tokio/sync" "tokio/rt" "util" "tracing" ];
          "steer" = [ "futures-util" ];
          "timeout" = [ "tokio/time" ];
          "util" = [ "futures-util" ];
        };
        resolvedDefaultFeatures = [ "balance" "buffer" "default" "discover" "filter" "full" "futures-util" "hdrhistogram" "hedge" "indexmap" "limit" "load" "load-shed" "log" "make" "rand" "ready-cache" "reconnect" "retry" "slab" "spawn-ready" "steer" "timeout" "tokio" "tokio-stream" "tokio-util" "tracing" "util" ];
      };
      "tower-abci" = rec {
        crateName = "tower-abci";
        version = "0.1.0";
        edition = "2018";
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/heliaxdev/tower-abci";
          rev = "73e43bf79fb21b4969cc09f79a0a40ce4cc7bb52";
          sha256 = "0z7inqi2kb303rlzwf6yizkblsy7xa31w0lcjis1k6islgvy2m8x";
        };
        authors = [
          "Henry de Valence <hdevalence@hdevalence.ca>"
        ];
        dependencies = [
          {
            name = "bytes";
            packageId = "bytes 1.1.0";
          }
          {
            name = "futures";
            packageId = "futures 0.3.19";
          }
          {
            name = "pin-project";
            packageId = "pin-project 1.0.10";
          }
          {
            name = "prost";
            packageId = "prost 0.9.0";
          }
          {
            name = "tendermint-proto";
            packageId = "tendermint-proto";
          }
          {
            name = "tokio";
            packageId = "tokio";
            features = [ "full" ];
          }
          {
            name = "tokio-stream";
            packageId = "tokio-stream";
          }
          {
            name = "tokio-util";
            packageId = "tokio-util";
            features = [ "codec" ];
          }
          {
            name = "tower";
            packageId = "tower";
            features = [ "full" ];
          }
          {
            name = "tracing";
            packageId = "tracing 0.1.30";
          }
          {
            name = "tracing-tower";
            packageId = "tracing-tower";
          }
        ];
        features = {
        };
      };
      "tower-layer" = rec {
        crateName = "tower-layer";
        version = "0.3.1";
        edition = "2018";
        sha256 = "0qiskpgz6zzy3a894vyr9yzq0i7q142rciggc3wv1rizdm3cjfrl";
        authors = [
          "Tower Maintainers <team@tower-rs.com>"
        ];

      };
      "tower-make" = rec {
        crateName = "tower-make";
        version = "0.3.0";
        edition = "2018";
        sha256 = "0rf9rnjiwffd6k12qkhhilj6l584ckvx9zvp92zn80sach6kfl6f";
        authors = [
          "Tower Maintainers <team@tower-rs.com>"
        ];
        dependencies = [
          {
            name = "tower-service";
            packageId = "tower-service";
          }
        ];
        features = {
          "connect" = [ "tokio" ];
        };
      };
      "tower-service" = rec {
        crateName = "tower-service";
        version = "0.3.1";
        edition = "2018";
        sha256 = "1iih764s3f6vlkspfmr72fkrs2lw1v3wiqmc6bd5zq1hdlfzs39n";
        authors = [
          "Tower Maintainers <team@tower-rs.com>"
        ];

      };
      "tracing 0.1.30" = rec {
        crateName = "tracing";
        version = "0.1.30";
        edition = "2018";
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/tokio-rs/tracing/";
          rev = "df4ba17d857db8ba1b553f7b293ac8ba967a42f8";
          sha256 = "1pxxhz7b6wf4lj58hliavd767ybkani5yr2gdm263mwv72m1smhy";
        };
        authors = [
          "Eliza Weisman <eliza@buoyant.io>"
          "Tokio Contributors <team@tokio.rs>"
        ];
        dependencies = [
          {
            name = "cfg-if";
            packageId = "cfg-if 1.0.0";
          }
          {
            name = "pin-project-lite";
            packageId = "pin-project-lite 0.2.8";
          }
          {
            name = "tracing-attributes";
            packageId = "tracing-attributes 0.1.19 (git+https://github.com/tokio-rs/tracing/?tag=tracing-0.1.30#df4ba17d857db8ba1b553f7b293ac8ba967a42f8)";
            optional = true;
          }
          {
            name = "tracing-core";
            packageId = "tracing-core 0.1.22 (git+https://github.com/tokio-rs/tracing/?tag=tracing-0.1.30#df4ba17d857db8ba1b553f7b293ac8ba967a42f8)";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "attributes" = [ "tracing-attributes" ];
          "default" = [ "std" "attributes" ];
          "log-always" = [ "log" ];
          "std" = [ "tracing-core/std" ];
          "valuable" = [ "tracing-core/valuable" ];
        };
        resolvedDefaultFeatures = [ "attributes" "default" "std" "tracing-attributes" ];
      };
      "tracing 0.1.31" = rec {
        crateName = "tracing";
        version = "0.1.31";
        edition = "2018";
        sha256 = "17wvxyppvkqgs1cc583sjrd4q8nirchks0vgff9xvlhcxyl51ipn";
        authors = [
          "Eliza Weisman <eliza@buoyant.io>"
          "Tokio Contributors <team@tokio.rs>"
        ];
        dependencies = [
          {
            name = "cfg-if";
            packageId = "cfg-if 1.0.0";
          }
          {
            name = "log";
            packageId = "log 0.4.14";
            optional = true;
          }
          {
            name = "pin-project-lite";
            packageId = "pin-project-lite 0.2.8";
          }
          {
            name = "tracing-attributes";
            packageId = "tracing-attributes 0.1.19 (git+https://github.com/tokio-rs/tracing/?tag=tracing-0.1.30#df4ba17d857db8ba1b553f7b293ac8ba967a42f8)";
            optional = true;
          }
          {
            name = "tracing-core";
            packageId = "tracing-core 0.1.22 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
          }
        ];
        devDependencies = [
          {
            name = "log";
            packageId = "log 0.4.14";
          }
        ];
        features = {
          "attributes" = [ "tracing-attributes" ];
          "default" = [ "std" "attributes" ];
          "log-always" = [ "log" ];
          "std" = [ "tracing-core/std" ];
          "valuable" = [ "tracing-core/valuable" ];
        };
        resolvedDefaultFeatures = [ "attributes" "default" "log" "std" "tracing-attributes" ];
      };
      "tracing-attributes 0.1.19 (git+https://github.com/tokio-rs/tracing/?tag=tracing-0.1.30#df4ba17d857db8ba1b553f7b293ac8ba967a42f8)" = rec {
        crateName = "tracing-attributes";
        version = "0.1.19";
        edition = "2018";
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/tokio-rs/tracing/";
          rev = "df4ba17d857db8ba1b553f7b293ac8ba967a42f8";
          sha256 = "1pxxhz7b6wf4lj58hliavd767ybkani5yr2gdm263mwv72m1smhy";
        };
        procMacro = true;
        authors = [
          "Tokio Contributors <team@tokio.rs>"
          "Eliza Weisman <eliza@buoyant.io>"
          "David Barsky <dbarsky@amazon.com>"
        ];
        dependencies = [
          {
            name = "proc-macro2";
            packageId = "proc-macro2";
          }
          {
            name = "quote";
            packageId = "quote";
          }
          {
            name = "syn";
            packageId = "syn";
            usesDefaultFeatures = false;
            features = [ "full" "parsing" "printing" "visit" "visit-mut" "clone-impls" "extra-traits" "proc-macro" ];
          }
        ];
        features = {
        };
      };
      "tracing-core 0.1.22 (git+https://github.com/tokio-rs/tracing/?tag=tracing-0.1.30#df4ba17d857db8ba1b553f7b293ac8ba967a42f8)" = rec {
        crateName = "tracing-core";
        version = "0.1.22";
        edition = "2018";
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/tokio-rs/tracing/";
          rev = "df4ba17d857db8ba1b553f7b293ac8ba967a42f8";
          sha256 = "1pxxhz7b6wf4lj58hliavd767ybkani5yr2gdm263mwv72m1smhy";
        };
        authors = [
          "Tokio Contributors <team@tokio.rs>"
        ];
        dependencies = [
          {
            name = "lazy_static";
            packageId = "lazy_static 1.4.0";
            optional = true;
          }
        ];
        features = {
          "default" = [ "std" "valuable/std" ];
          "std" = [ "lazy_static" ];
        };
        resolvedDefaultFeatures = [ "lazy_static" "std" ];
      };
      "tracing-core 0.1.22 (registry+https://github.com/rust-lang/crates.io-index)" = rec {
        crateName = "tracing-core";
        version = "0.1.22";
        edition = "2018";
        sha256 = "08wssa1n70vg02nfw6ykfzjhind88ws8vjqi64nsfch6718wpkq3";
        authors = [
          "Tokio Contributors <team@tokio.rs>"
        ];
        dependencies = [
          {
            name = "lazy_static";
            packageId = "lazy_static 1.4.0";
            optional = true;
          }
          {
            name = "valuable";
            packageId = "valuable";
            optional = true;
            usesDefaultFeatures = false;
            target = { target, features }: (target."tracing_unstable" or false);
          }
        ];
        features = {
          "default" = [ "std" "valuable/std" ];
          "std" = [ "lazy_static" ];
        };
        resolvedDefaultFeatures = [ "default" "lazy_static" "std" "valuable" ];
      };
      "tracing-error" = rec {
        crateName = "tracing-error";
        version = "0.1.2";
        edition = "2018";
        sha256 = "092y3357af6058mdw7nmr7sysqdka8b4cyaqz940fl2a7nwc1mxl";
        authors = [
          "Eliza Weisman <eliza@buoyant.io>"
          "Jane Lusby <jlusby@yaah.dev>"
          "Tokio Contributors <team@tokio.rs>"
        ];
        dependencies = [
          {
            name = "tracing";
            packageId = "tracing 0.1.31";
          }
          {
            name = "tracing-subscriber";
            packageId = "tracing-subscriber 0.2.25";
            usesDefaultFeatures = false;
            features = [ "registry" "fmt" ];
          }
        ];
        features = {
          "default" = [ "traced-error" ];
        };
        resolvedDefaultFeatures = [ "default" "traced-error" ];
      };
      "tracing-futures 0.2.5 (git+https://github.com/tokio-rs/tracing/?tag=tracing-0.1.30#df4ba17d857db8ba1b553f7b293ac8ba967a42f8)" = rec {
        crateName = "tracing-futures";
        version = "0.2.5";
        edition = "2018";
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/tokio-rs/tracing/";
          rev = "df4ba17d857db8ba1b553f7b293ac8ba967a42f8";
          sha256 = "1pxxhz7b6wf4lj58hliavd767ybkani5yr2gdm263mwv72m1smhy";
        };
        authors = [
          "Eliza Weisman <eliza@buoyant.io>"
          "Tokio Contributors <team@tokio.rs>"
        ];
        dependencies = [
          {
            name = "pin-project-lite";
            packageId = "pin-project-lite 0.2.8";
            optional = true;
          }
          {
            name = "tracing";
            packageId = "tracing 0.1.30";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "default" = [ "std-future" "std" ];
          "futures-01" = [ "futures_01" "std" ];
          "futures-03" = [ "std-future" "futures" "futures-task" "std" ];
          "std" = [ "tracing/std" ];
          "std-future" = [ "pin-project-lite" ];
        };
        resolvedDefaultFeatures = [ "default" "pin-project-lite" "std" "std-future" ];
      };
      "tracing-futures 0.2.5 (registry+https://github.com/rust-lang/crates.io-index)" = rec {
        crateName = "tracing-futures";
        version = "0.2.5";
        edition = "2018";
        sha256 = "1wimg0iwa2ldq7xv98lvivvf3q9ykfminig8r1bs0ig22np9bl4p";
        authors = [
          "Eliza Weisman <eliza@buoyant.io>"
          "Tokio Contributors <team@tokio.rs>"
        ];
        dependencies = [
          {
            name = "pin-project";
            packageId = "pin-project 1.0.10";
            optional = true;
          }
          {
            name = "tracing";
            packageId = "tracing 0.1.31";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "default" = [ "std-future" "std" ];
          "futures-01" = [ "futures_01" "std" ];
          "futures-03" = [ "std-future" "futures" "futures-task" "std" ];
          "std" = [ "tracing/std" ];
          "std-future" = [ "pin-project" ];
        };
        resolvedDefaultFeatures = [ "default" "pin-project" "std" "std-future" ];
      };
      "tracing-log" = rec {
        crateName = "tracing-log";
        version = "0.1.2";
        edition = "2018";
        sha256 = "1qv1cwvdqrgvizkszbff4fvkw0m3nn5yz68r3yaw2hcflivk94m6";
        authors = [
          "Tokio Contributors <team@tokio.rs>"
        ];
        dependencies = [
          {
            name = "lazy_static";
            packageId = "lazy_static 1.4.0";
          }
          {
            name = "log";
            packageId = "log 0.4.14";
          }
          {
            name = "tracing-core";
            packageId = "tracing-core 0.1.22 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        features = {
          "default" = [ "log-tracer" "trace-logger" "std" ];
          "std" = [ "log/std" ];
        };
        resolvedDefaultFeatures = [ "default" "log-tracer" "std" "trace-logger" ];
      };
      "tracing-subscriber 0.2.25" = rec {
        crateName = "tracing-subscriber";
        version = "0.2.25";
        edition = "2018";
        sha256 = "0wcc3sqckjsxaahd9jnc4cwa13m623lhk8fg8way9hn3k6m2w38f";
        authors = [
          "Eliza Weisman <eliza@buoyant.io>"
          "David Barsky <me@davidbarsky.com>"
          "Tokio Contributors <team@tokio.rs>"
        ];
        dependencies = [
          {
            name = "sharded-slab";
            packageId = "sharded-slab";
            optional = true;
          }
          {
            name = "thread_local";
            packageId = "thread_local 1.1.4";
            optional = true;
          }
          {
            name = "tracing-core";
            packageId = "tracing-core 0.1.22 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        features = {
          "ansi" = [ "fmt" "ansi_term" ];
          "default" = [ "env-filter" "smallvec" "fmt" "ansi" "chrono" "tracing-log" "json" ];
          "env-filter" = [ "matchers" "regex" "lazy_static" "tracing" ];
          "fmt" = [ "registry" ];
          "json" = [ "tracing-serde" "serde" "serde_json" ];
          "registry" = [ "sharded-slab" "thread_local" ];
        };
        resolvedDefaultFeatures = [ "fmt" "registry" "sharded-slab" "thread_local" ];
      };
      "tracing-subscriber 0.3.9" = rec {
        crateName = "tracing-subscriber";
        version = "0.3.9";
        edition = "2018";
        sha256 = "1kjx2pfdvbga9aw60vrf9h1x1a5qm763lgx7zf3ml0v2r6yvf2ly";
        authors = [
          "Eliza Weisman <eliza@buoyant.io>"
          "David Barsky <me@davidbarsky.com>"
          "Tokio Contributors <team@tokio.rs>"
        ];
        dependencies = [
          {
            name = "ansi_term";
            packageId = "ansi_term";
            optional = true;
          }
          {
            name = "lazy_static";
            packageId = "lazy_static 1.4.0";
            optional = true;
          }
          {
            name = "matchers";
            packageId = "matchers";
            optional = true;
          }
          {
            name = "regex";
            packageId = "regex";
            optional = true;
            usesDefaultFeatures = false;
            features = [ "std" ];
          }
          {
            name = "sharded-slab";
            packageId = "sharded-slab";
            optional = true;
          }
          {
            name = "smallvec";
            packageId = "smallvec 1.8.0";
            optional = true;
          }
          {
            name = "thread_local";
            packageId = "thread_local 1.1.4";
            optional = true;
          }
          {
            name = "tracing";
            packageId = "tracing 0.1.31";
            optional = true;
            usesDefaultFeatures = false;
          }
          {
            name = "tracing-core";
            packageId = "tracing-core 0.1.22 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "tracing-log";
            packageId = "tracing-log";
            optional = true;
            usesDefaultFeatures = false;
            features = [ "log-tracer" "std" ];
          }
        ];
        devDependencies = [
          {
            name = "regex";
            packageId = "regex";
            usesDefaultFeatures = false;
            features = [ "std" ];
          }
          {
            name = "tracing";
            packageId = "tracing 0.1.31";
          }
          {
            name = "tracing-log";
            packageId = "tracing-log";
          }
        ];
        features = {
          "ansi" = [ "fmt" "ansi_term" ];
          "default" = [ "smallvec" "fmt" "ansi" "tracing-log" "std" ];
          "env-filter" = [ "matchers" "regex" "lazy_static" "tracing" "std" ];
          "fmt" = [ "registry" "std" ];
          "json" = [ "tracing-serde" "serde" "serde_json" ];
          "local-time" = [ "time/local-offset" ];
          "registry" = [ "sharded-slab" "thread_local" "std" ];
          "std" = [ "alloc" "tracing-core/std" ];
          "valuable" = [ "tracing-core/valuable" "valuable_crate" "valuable-serde" "tracing-serde/valuable" ];
        };
        resolvedDefaultFeatures = [ "alloc" "ansi" "ansi_term" "default" "env-filter" "fmt" "lazy_static" "matchers" "regex" "registry" "sharded-slab" "smallvec" "std" "thread_local" "tracing" "tracing-log" ];
      };
      "tracing-tower" = rec {
        crateName = "tracing-tower";
        version = "0.1.0";
        edition = "2018";
        workspace_member = null;
        src = pkgs.fetchgit {
          url = "https://github.com/tokio-rs/tracing/";
          rev = "df4ba17d857db8ba1b553f7b293ac8ba967a42f8";
          sha256 = "1pxxhz7b6wf4lj58hliavd767ybkani5yr2gdm263mwv72m1smhy";
        };
        authors = [
          "Eliza Weisman <eliza@buoyant.io>"
        ];
        dependencies = [
          {
            name = "futures";
            packageId = "futures 0.3.19";
          }
          {
            name = "pin-project-lite";
            packageId = "pin-project-lite 0.2.8";
            optional = true;
          }
          {
            name = "tower-layer";
            packageId = "tower-layer";
            optional = true;
          }
          {
            name = "tower-make";
            packageId = "tower-make";
            rename = "tower_make";
            optional = true;
          }
          {
            name = "tower-service";
            packageId = "tower-service";
          }
          {
            name = "tracing";
            packageId = "tracing 0.1.30";
            usesDefaultFeatures = false;
            features = [ "std" ];
          }
          {
            name = "tracing-futures";
            packageId = "tracing-futures 0.2.5 (git+https://github.com/tokio-rs/tracing/?tag=tracing-0.1.30#df4ba17d857db8ba1b553f7b293ac8ba967a42f8)";
            features = [ "std-future" ];
          }
        ];
        features = {
          "default" = [ "tower-layer" "tower-make" ];
          "tower-make" = [ "tower_make" "pin-project-lite" ];
        };
        resolvedDefaultFeatures = [ "default" "pin-project-lite" "tower-layer" "tower-make" "tower_make" ];
      };
      "traitobject" = rec {
        crateName = "traitobject";
        version = "0.1.0";
        edition = "2015";
        sha256 = "0yb0n8822mr59j200fyr2fxgzzgqljyxflx9y8bdy3rlaqngilgg";
        authors = [
          "Jonathan Reem <jonathan.reem@gmail.com>"
        ];

      };
      "trust-dns-proto" = rec {
        crateName = "trust-dns-proto";
        version = "0.20.3";
        edition = "2018";
        sha256 = "1x039lizwifbpkh8x252w1sd027qd4zvxph94rp9l69qnifpy3dd";
        libName = "trust_dns_proto";
        authors = [
          "Benjamin Fry <benjaminfry@me.com>"
        ];
        dependencies = [
          {
            name = "async-trait";
            packageId = "async-trait";
          }
          {
            name = "cfg-if";
            packageId = "cfg-if 1.0.0";
          }
          {
            name = "data-encoding";
            packageId = "data-encoding";
          }
          {
            name = "enum-as-inner";
            packageId = "enum-as-inner";
          }
          {
            name = "futures-channel";
            packageId = "futures-channel";
            usesDefaultFeatures = false;
            features = [ "std" ];
          }
          {
            name = "futures-io";
            packageId = "futures-io";
            usesDefaultFeatures = false;
            features = [ "std" ];
          }
          {
            name = "futures-util";
            packageId = "futures-util";
            usesDefaultFeatures = false;
            features = [ "std" ];
          }
          {
            name = "idna";
            packageId = "idna 0.2.3";
          }
          {
            name = "ipnet";
            packageId = "ipnet";
          }
          {
            name = "lazy_static";
            packageId = "lazy_static 1.4.0";
          }
          {
            name = "log";
            packageId = "log 0.4.14";
          }
          {
            name = "rand";
            packageId = "rand 0.8.4";
          }
          {
            name = "smallvec";
            packageId = "smallvec 1.8.0";
          }
          {
            name = "thiserror";
            packageId = "thiserror";
          }
          {
            name = "tinyvec";
            packageId = "tinyvec";
            features = [ "alloc" ];
          }
          {
            name = "url";
            packageId = "url 2.2.2";
          }
        ];
        features = {
          "default" = [ "tokio-runtime" ];
          "dnssec-openssl" = [ "dnssec" "openssl" ];
          "dnssec-ring" = [ "dnssec" "ring" ];
          "mdns" = [ "socket2/reuseport" ];
          "serde-config" = [ "serde" ];
          "tokio-runtime" = [ "tokio/net" "tokio/rt" "tokio/time" "tokio/rt-multi-thread" ];
          "wasm-bindgen" = [ "wasm-bindgen-crate" "js-sys" ];
        };
      };
      "trust-dns-resolver" = rec {
        crateName = "trust-dns-resolver";
        version = "0.20.3";
        edition = "2018";
        sha256 = "0w4pd45d0gj431fs4cgqj62smy1n0rmy3gb7brrx0jx612v1gbgn";
        libName = "trust_dns_resolver";
        authors = [
          "Benjamin Fry <benjaminfry@me.com>"
        ];
        dependencies = [
          {
            name = "cfg-if";
            packageId = "cfg-if 1.0.0";
          }
          {
            name = "futures-util";
            packageId = "futures-util";
            usesDefaultFeatures = false;
            features = [ "std" ];
          }
          {
            name = "ipconfig";
            packageId = "ipconfig";
            optional = true;
            target = { target, features }: (target."windows" or false);
          }
          {
            name = "lazy_static";
            packageId = "lazy_static 1.4.0";
          }
          {
            name = "log";
            packageId = "log 0.4.14";
          }
          {
            name = "lru-cache";
            packageId = "lru-cache";
          }
          {
            name = "parking_lot";
            packageId = "parking_lot 0.11.2";
          }
          {
            name = "resolv-conf";
            packageId = "resolv-conf";
            optional = true;
            features = [ "system" ];
          }
          {
            name = "smallvec";
            packageId = "smallvec 1.8.0";
          }
          {
            name = "thiserror";
            packageId = "thiserror";
          }
          {
            name = "trust-dns-proto";
            packageId = "trust-dns-proto";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "backtrace" = [ "trust-dns-proto/backtrace" ];
          "default" = [ "system-config" "tokio-runtime" ];
          "dns-over-https-rustls" = [ "trust-dns-https" "dns-over-rustls" "dns-over-https" ];
          "dns-over-native-tls" = [ "dns-over-tls" "tokio-native-tls" "trust-dns-native-tls" ];
          "dns-over-openssl" = [ "dns-over-tls" "trust-dns-openssl" "tokio-openssl" ];
          "dns-over-rustls" = [ "dns-over-tls" "rustls" "tokio-rustls" "trust-dns-rustls" "webpki-roots" ];
          "dnssec-openssl" = [ "dnssec" "trust-dns-proto/dnssec-openssl" ];
          "dnssec-ring" = [ "dnssec" "trust-dns-proto/dnssec-ring" ];
          "mdns" = [ "trust-dns-proto/mdns" ];
          "serde-config" = [ "serde" "trust-dns-proto/serde-config" ];
          "system-config" = [ "ipconfig" "resolv-conf" ];
          "tokio-runtime" = [ "tokio/rt" "trust-dns-proto/tokio-runtime" ];
        };
        resolvedDefaultFeatures = [ "ipconfig" "resolv-conf" "system-config" ];
      };
      "try-lock" = rec {
        crateName = "try-lock";
        version = "0.2.3";
        edition = "2015";
        sha256 = "0hkn1ksmg5hdqgqdw1ahy5qk69f4crh2psf0v61qphyrf777nm2r";
        authors = [
          "Sean McArthur <sean@seanmonstar.com>"
        ];

      };
      "tungstenite 0.12.0" = rec {
        crateName = "tungstenite";
        version = "0.12.0";
        edition = "2018";
        sha256 = "093wzyi1405j9r4qdvrpkzmpnh4z18jr67amkbx7426px2bq5nla";
        authors = [
          "Alexey Galakhov"
          "Daniel Abramov"
        ];
        dependencies = [
          {
            name = "base64";
            packageId = "base64 0.13.0";
          }
          {
            name = "byteorder";
            packageId = "byteorder";
          }
          {
            name = "bytes";
            packageId = "bytes 1.1.0";
          }
          {
            name = "http";
            packageId = "http";
          }
          {
            name = "httparse";
            packageId = "httparse";
          }
          {
            name = "input_buffer";
            packageId = "input_buffer";
          }
          {
            name = "log";
            packageId = "log 0.4.14";
          }
          {
            name = "rand";
            packageId = "rand 0.8.4";
          }
          {
            name = "sha-1";
            packageId = "sha-1 0.9.8";
          }
          {
            name = "url";
            packageId = "url 2.2.2";
          }
          {
            name = "utf-8";
            packageId = "utf-8";
          }
        ];
        features = {
          "default" = [ "tls" ];
          "tls" = [ "native-tls" ];
          "tls-vendored" = [ "native-tls" "native-tls/vendored" ];
        };
      };
      "tungstenite 0.16.0" = rec {
        crateName = "tungstenite";
        version = "0.16.0";
        edition = "2018";
        sha256 = "1l9s7gi9kgl4zynhbyb7737lmwaxaim4b818lwi7y95f2hx73lva";
        authors = [
          "Alexey Galakhov"
          "Daniel Abramov"
        ];
        dependencies = [
          {
            name = "base64";
            packageId = "base64 0.13.0";
          }
          {
            name = "byteorder";
            packageId = "byteorder";
          }
          {
            name = "bytes";
            packageId = "bytes 1.1.0";
          }
          {
            name = "http";
            packageId = "http";
          }
          {
            name = "httparse";
            packageId = "httparse";
          }
          {
            name = "log";
            packageId = "log 0.4.14";
          }
          {
            name = "rand";
            packageId = "rand 0.8.4";
          }
          {
            name = "sha-1";
            packageId = "sha-1 0.9.8";
          }
          {
            name = "thiserror";
            packageId = "thiserror";
          }
          {
            name = "url";
            packageId = "url 2.2.2";
          }
          {
            name = "utf-8";
            packageId = "utf-8";
          }
        ];
        devDependencies = [
          {
            name = "rand";
            packageId = "rand 0.8.4";
          }
        ];
        features = {
          "__rustls-tls" = [ "rustls" "webpki" ];
          "native-tls" = [ "native-tls-crate" ];
          "native-tls-vendored" = [ "native-tls" "native-tls-crate/vendored" ];
          "rustls-tls-native-roots" = [ "__rustls-tls" "rustls-native-certs" ];
          "rustls-tls-webpki-roots" = [ "__rustls-tls" "webpki-roots" ];
        };
        resolvedDefaultFeatures = [ "default" ];
      };
      "typeable" = rec {
        crateName = "typeable";
        version = "0.1.2";
        edition = "2015";
        sha256 = "11w8dywgnm32hb291izjvh4zjd037ccnkk77ahk63l913zwzc40l";
        authors = [
          "Jonathan Reem <jonathan.reem@gmail.com>"
        ];

      };
      "typenum" = rec {
        crateName = "typenum";
        version = "1.15.0";
        edition = "2018";
        sha256 = "11yrvz1vd43gqv738yw1v75rzngjbs7iwcgzjy3cq5ywkv2imy6w";
        build = "build/main.rs";
        authors = [
          "Paho Lurie-Gregg <paho@paholg.com>"
          "Andre Bogus <bogusandre@gmail.com>"
        ];
        features = {
          "scale_info" = [ "scale-info/derive" ];
        };
      };
      "ucd-trie" = rec {
        crateName = "ucd-trie";
        version = "0.1.3";
        edition = "2018";
        sha256 = "072cblf8v3wzyaz3lhbpzgil4s03dpzg1ppy3gqx2l4v622y3pjn";
        authors = [
          "Andrew Gallant <jamslam@gmail.com>"
        ];
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "uint" = rec {
        crateName = "uint";
        version = "0.9.2";
        edition = "2021";
        sha256 = "0fja18mjzallvyk9pl5i3jj7yshmvnclc4pzd55cghp8pwz426qv";
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "byteorder";
            packageId = "byteorder";
            usesDefaultFeatures = false;
          }
          {
            name = "crunchy";
            packageId = "crunchy";
            usesDefaultFeatures = false;
          }
          {
            name = "hex";
            packageId = "hex";
            usesDefaultFeatures = false;
          }
          {
            name = "static_assertions";
            packageId = "static_assertions";
          }
        ];
        features = {
          "default" = [ "std" ];
          "quickcheck" = [ "qc" "rand07" ];
          "std" = [ "byteorder/std" "crunchy/std" "hex/std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "unicase" = rec {
        crateName = "unicase";
        version = "1.4.2";
        edition = "2015";
        sha256 = "0cwazh4qsmm9msckjk86zc1z35xg7hjxjykrgjalzdv367w6aivz";
        authors = [
          "Sean McArthur <sean.monstar@gmail.com>"
        ];
        buildDependencies = [
          {
            name = "version_check";
            packageId = "version_check 0.1.5";
          }
        ];
        features = {
          "heap_size" = [ "heapsize" "heapsize_plugin" ];
        };
      };
      "unicode-bidi" = rec {
        crateName = "unicode-bidi";
        version = "0.3.7";
        edition = "2018";
        sha256 = "13v7v8pp7mdqqf0ypk73va78c3b4xzpryvbls9p47nz3cd34008s";
        libName = "unicode_bidi";
        authors = [
          "The Servo Project Developers"
        ];
        features = {
          "default" = [ "std" ];
          "flame_it" = [ "flame" "flamer" ];
          "with_serde" = [ "serde" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "unicode-normalization" = rec {
        crateName = "unicode-normalization";
        version = "0.1.19";
        edition = "2018";
        sha256 = "1yabhmg8zlcksda3ajly9hpbzqgbhknxwch8dwkfkaa1569r0ifm";
        authors = [
          "kwantam <kwantam@gmail.com>"
          "Manish Goregaokar <manishsmail@gmail.com>"
        ];
        dependencies = [
          {
            name = "tinyvec";
            packageId = "tinyvec";
            features = [ "alloc" ];
          }
        ];
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "unicode-segmentation" = rec {
        crateName = "unicode-segmentation";
        version = "1.8.0";
        edition = "2018";
        sha256 = "0nrqfgxkh00wb5dhl0874z20789i2yjimp6ndgh4ay4yjjd895c8";
        authors = [
          "kwantam <kwantam@gmail.com>"
          "Manish Goregaokar <manishsmail@gmail.com>"
        ];
        features = {
        };
      };
      "unicode-width" = rec {
        crateName = "unicode-width";
        version = "0.1.9";
        edition = "2015";
        sha256 = "0wq9wl69wlp6zwlxp660g9p4hm5gk91chwk14dp1gl9bxba45mry";
        authors = [
          "kwantam <kwantam@gmail.com>"
          "Manish Goregaokar <manishsmail@gmail.com>"
        ];
        features = {
          "rustc-dep-of-std" = [ "std" "core" "compiler_builtins" ];
        };
        resolvedDefaultFeatures = [ "default" ];
      };
      "unicode-xid" = rec {
        crateName = "unicode-xid";
        version = "0.2.2";
        edition = "2015";
        sha256 = "1wrkgcw557v311dkdb6n2hrix9dm2qdsb1zpw7pn79l03zb85jwc";
        authors = [
          "erick.tryzelaar <erick.tryzelaar@gmail.com>"
          "kwantam <kwantam@gmail.com>"
          "Manish Goregaokar <manishsmail@gmail.com>"
        ];
        features = {
        };
        resolvedDefaultFeatures = [ "default" ];
      };
      "universal-hash" = rec {
        crateName = "universal-hash";
        version = "0.4.1";
        edition = "2018";
        sha256 = "01av09i0rqcl8f0xgvn2g07kzyafgbiwdhkfwq0m14kyd67lw8cz";
        authors = [
          "RustCrypto Developers"
        ];
        dependencies = [
          {
            name = "generic-array";
            packageId = "generic-array 0.14.5";
          }
          {
            name = "subtle";
            packageId = "subtle 2.4.1";
            usesDefaultFeatures = false;
          }
        ];
        features = {
        };
      };
      "unreachable" = rec {
        crateName = "unreachable";
        version = "1.0.0";
        edition = "2015";
        sha256 = "0mps2il4xy2mjqc3appas27hhn2xmvixc3bzzhfrjj74gy3i0a1q";
        authors = [
          "Jonathan Reem <jonathan.reem@gmail.com>"
        ];
        dependencies = [
          {
            name = "void";
            packageId = "void";
            usesDefaultFeatures = false;
          }
        ];

      };
      "unsigned-varint 0.5.1" = rec {
        crateName = "unsigned-varint";
        version = "0.5.1";
        edition = "2018";
        sha256 = "0ddc36m85jw5bzl2gjnhazi283r4qdsrnmdf77zavbq5ybdyxzgp";
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        features = {
          "codec" = [ "std" "bytes" "tokio-util" ];
          "futures" = [ "std" "futures-io" "futures-util" ];
          "futures-codec" = [ "std" "bytes" "futures_codec" ];
        };
        resolvedDefaultFeatures = [ "std" ];
      };
      "unsigned-varint 0.7.1" = rec {
        crateName = "unsigned-varint";
        version = "0.7.1";
        edition = "2018";
        sha256 = "0dn8q6rrxky2jd5zg9ba0nppfki7iz1khc74606ink2yyk3qssnq";
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "asynchronous-codec";
            packageId = "asynchronous-codec";
            optional = true;
          }
          {
            name = "bytes";
            packageId = "bytes 1.1.0";
            optional = true;
          }
          {
            name = "futures-io";
            packageId = "futures-io";
            optional = true;
          }
          {
            name = "futures-util";
            packageId = "futures-util";
            optional = true;
            features = [ "io" ];
          }
        ];
        features = {
          "asynchronous_codec" = [ "std" "bytes" "asynchronous-codec" ];
          "codec" = [ "std" "bytes" "tokio-util" ];
          "futures" = [ "std" "futures-io" "futures-util" ];
        };
        resolvedDefaultFeatures = [ "asynchronous-codec" "asynchronous_codec" "bytes" "futures" "futures-io" "futures-util" "std" ];
      };
      "untrusted" = rec {
        crateName = "untrusted";
        version = "0.7.1";
        edition = "2018";
        sha256 = "0jkbqaj9d3v5a91pp3wp9mffvng1nhycx6sh4qkdd9qyr62ccmm1";
        libPath = "src/untrusted.rs";
        authors = [
          "Brian Smith <brian@briansmith.org>"
        ];

      };
      "url 1.7.2" = rec {
        crateName = "url";
        version = "1.7.2";
        edition = "2015";
        sha256 = "0nim1c90mxpi9wgdw2xh8dqd72vlklwlzam436akcrhjac6pqknx";
        authors = [
          "The rust-url developers"
        ];
        dependencies = [
          {
            name = "idna";
            packageId = "idna 0.1.5";
          }
          {
            name = "matches";
            packageId = "matches";
          }
          {
            name = "percent-encoding";
            packageId = "percent-encoding 1.0.1";
          }
        ];
        features = {
          "heap_size" = [ "heapsize" ];
          "query_encoding" = [ "encoding" ];
        };
      };
      "url 2.2.2" = rec {
        crateName = "url";
        version = "2.2.2";
        edition = "2018";
        sha256 = "132pzpvfvpw33gjlzqd55n5iag9qddzffq8qbp1myfykna1w61x5";
        authors = [
          "The rust-url developers"
        ];
        dependencies = [
          {
            name = "form_urlencoded";
            packageId = "form_urlencoded";
          }
          {
            name = "idna";
            packageId = "idna 0.2.3";
          }
          {
            name = "matches";
            packageId = "matches";
          }
          {
            name = "percent-encoding";
            packageId = "percent-encoding 2.1.0";
          }
        ];

      };
      "utf-8" = rec {
        crateName = "utf-8";
        version = "0.7.6";
        edition = "2015";
        sha256 = "1a9ns3fvgird0snjkd3wbdhwd3zdpc2h5gpyybrfr6ra5pkqxk09";
        libName = "utf8";
        authors = [
          "Simon Sapin <simon.sapin@exyr.org>"
        ];

      };
      "utf8-width" = rec {
        crateName = "utf8-width";
        version = "0.1.5";
        edition = "2018";
        sha256 = "0ax3y087ga8r2aap2h36jhmcapfvbly97mac3shxzy3y8mzxgxvw";
        authors = [
          "Magic Len <len@magiclen.org>"
        ];

      };
      "uuid" = rec {
        crateName = "uuid";
        version = "0.8.2";
        edition = "2018";
        sha256 = "1dy4ldcp7rnzjy56dxh7d2sgrcvn4q77y0a8r0a48946h66zjp5w";
        authors = [
          "Ashley Mannix<ashleymannix@live.com.au>"
          "Christopher Armstrong"
          "Dylan DPC<dylan.dpc@gmail.com>"
          "Hunar Roop Kahlon<hunar.roop@gmail.com>"
        ];
        dependencies = [
          {
            name = "getrandom";
            packageId = "getrandom 0.2.4";
            optional = true;
          }
        ];
        features = {
          "default" = [ "std" ];
          "guid" = [ "winapi" ];
          "stdweb" = [ "getrandom" "getrandom/js" ];
          "v3" = [ "md5" ];
          "v4" = [ "getrandom" ];
          "v5" = [ "sha1" ];
          "wasm-bindgen" = [ "getrandom" "getrandom/js" ];
        };
        resolvedDefaultFeatures = [ "default" "getrandom" "std" "v4" ];
      };
      "valuable" = rec {
        crateName = "valuable";
        version = "0.1.0";
        edition = "2018";
        sha256 = "0v9gp3nkjbl30z0fd56d8mx7w1csk86wwjhfjhr400wh9mfpw2w3";
        features = {
          "default" = [ "std" ];
          "derive" = [ "valuable-derive" ];
          "std" = [ "alloc" ];
        };
        resolvedDefaultFeatures = [ "alloc" "std" ];
      };
      "value-bag" = rec {
        crateName = "value-bag";
        version = "1.0.0-alpha.8";
        edition = "2018";
        sha256 = "0gr6w3mmx6ld13kmg36dbk9vncy57azrhc33lgxynqfw65vkz4kr";
        authors = [
          "Ashley Mannix <ashleymannix@live.com.au>"
        ];
        dependencies = [
          {
            name = "ctor";
            packageId = "ctor";
          }
        ];
        buildDependencies = [
          {
            name = "version_check";
            packageId = "version_check 0.9.4";
            rename = "rustc";
          }
        ];
        features = {
          "error" = [ "std" "sval1_lib/std" ];
          "serde" = [ "serde1" ];
          "serde1" = [ "serde1_lib" "sval1_lib/serde1" "sval1_lib/alloc" "erased-serde1/alloc" "serde1_fmt" ];
          "sval" = [ "sval1" ];
          "sval1" = [ "sval1_lib" ];
          "test" = [ "std" ];
        };
      };
      "vcpkg" = rec {
        crateName = "vcpkg";
        version = "0.2.15";
        edition = "2015";
        sha256 = "09i4nf5y8lig6xgj3f7fyrvzd3nlaw4znrihw8psidvv5yk4xkdc";
        authors = [
          "Jim McGrath <jimmc2@gmail.com>"
        ];

      };
      "vec_map" = rec {
        crateName = "vec_map";
        version = "0.8.2";
        edition = "2015";
        sha256 = "1481w9g1dw9rxp3l6snkdqihzyrd2f8vispzqmwjwsdyhw8xzggi";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
          "Jorge Aparicio <japaricious@gmail.com>"
          "Alexis Beingessner <a.beingessner@gmail.com>"
          "Brian Anderson <>"
          "tbu- <>"
          "Manish Goregaokar <>"
          "Aaron Turon <aturon@mozilla.com>"
          "Adolfo Ochagavía <>"
          "Niko Matsakis <>"
          "Steven Fackler <>"
          "Chase Southwood <csouth3@illinois.edu>"
          "Eduard Burtescu <>"
          "Florian Wilkens <>"
          "Félix Raimundo <>"
          "Tibor Benke <>"
          "Markus Siemens <markus@m-siemens.de>"
          "Josh Branchaud <jbranchaud@gmail.com>"
          "Huon Wilson <dbau.pp@gmail.com>"
          "Corey Farwell <coref@rwell.org>"
          "Aaron Liblong <>"
          "Nick Cameron <nrc@ncameron.org>"
          "Patrick Walton <pcwalton@mimiga.net>"
          "Felix S Klock II <>"
          "Andrew Paseltiner <apaseltiner@gmail.com>"
          "Sean McArthur <sean.monstar@gmail.com>"
          "Vadim Petrochenkov <>"
        ];
        features = {
          "eders" = [ "serde" ];
        };
      };
      "version_check 0.1.5" = rec {
        crateName = "version_check";
        version = "0.1.5";
        edition = "2015";
        sha256 = "1pf91pvj8n6akh7w6j5ypka6aqz08b3qpzgs0ak2kjf4frkiljwi";
        authors = [
          "Sergio Benitez <sb@sergio.bz>"
        ];

      };
      "version_check 0.9.4" = rec {
        crateName = "version_check";
        version = "0.9.4";
        edition = "2015";
        sha256 = "0gs8grwdlgh0xq660d7wr80x14vxbizmd8dbp29p2pdncx8lp1s9";
        authors = [
          "Sergio Benitez <sb@sergio.bz>"
        ];

      };
      "void" = rec {
        crateName = "void";
        version = "1.0.2";
        edition = "2015";
        sha256 = "0zc8f0ksxvmhvgx4fdg0zyn6vdnbxd2xv9hfx4nhzg6kbs4f80ka";
        authors = [
          "Jonathan Reem <jonathan.reem@gmail.com>"
        ];
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "vswhom" = rec {
        crateName = "vswhom";
        version = "0.1.0";
        edition = "2015";
        sha256 = "12v0fjjzxdc3y5c0lcwycfhphz7zf2s06hl5krwhawah0xzrp5xy";
        authors = [
          "nabijaczleweli <nabijaczleweli@gmail.com>"
        ];
        dependencies = [
          {
            name = "libc";
            packageId = "libc";
            target = { target, features }: (target."os" == "windows");
          }
          {
            name = "vswhom-sys";
            packageId = "vswhom-sys";
          }
        ];

      };
      "vswhom-sys" = rec {
        crateName = "vswhom-sys";
        version = "0.1.0";
        edition = "2015";
        sha256 = "0clm4dx4amwlhg5lkh52fmvvwq6c7s7b9xqljw39mryhsc158bzw";
        authors = [
          "nabijaczleweli <nabijaczleweli@gmail.com>"
        ];
        dependencies = [
          {
            name = "libc";
            packageId = "libc";
          }
        ];
        buildDependencies = [
          {
            name = "cc";
            packageId = "cc";
            target = {target, features}: (target."os" == "windows");
          }
        ];

      };
      "wait-timeout" = rec {
        crateName = "wait-timeout";
        version = "0.2.0";
        edition = "2015";
        crateBin = [];
        sha256 = "1xpkk0j5l9pfmjfh1pi0i89invlavfrd9av5xp0zhxgb29dhy84z";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        dependencies = [
          {
            name = "libc";
            packageId = "libc";
            target = { target, features }: (target."unix" or false);
          }
        ];

      };
      "waker-fn" = rec {
        crateName = "waker-fn";
        version = "1.1.0";
        edition = "2018";
        sha256 = "1jpfiis0frk2b36krqvk8264kgxk2dyhfzjsr8g3wah1nii2qnwx";
        authors = [
          "Stjepan Glavina <stjepang@gmail.com>"
        ];

      };
      "walkdir" = rec {
        crateName = "walkdir";
        version = "2.3.2";
        edition = "2018";
        sha256 = "0mnszy33685v8y9js8mw6x2p3iddqs8vfj7n2dhqddnlbirz5340";
        authors = [
          "Andrew Gallant <jamslam@gmail.com>"
        ];
        dependencies = [
          {
            name = "same-file";
            packageId = "same-file";
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.9";
            target = { target, features }: (target."windows" or false);
            features = [ "std" "winnt" ];
          }
          {
            name = "winapi-util";
            packageId = "winapi-util";
            target = { target, features }: (target."windows" or false);
          }
        ];

      };
      "want" = rec {
        crateName = "want";
        version = "0.3.0";
        edition = "2018";
        sha256 = "181b2zmwfq389x9n2g1n37cvcvvdand832zz6v8i1l8wrdlaks0w";
        authors = [
          "Sean McArthur <sean@seanmonstar.com>"
        ];
        dependencies = [
          {
            name = "log";
            packageId = "log 0.4.14";
          }
          {
            name = "try-lock";
            packageId = "try-lock";
          }
        ];

      };
      "wasi 0.10.0+wasi-snapshot-preview1" = rec {
        crateName = "wasi";
        version = "0.10.0+wasi-snapshot-preview1";
        edition = "2018";
        sha256 = "07y3l8mzfzzz4cj09c8y90yak4hpsi9g7pllyzpr6xvwrabka50s";
        authors = [
          "The Cranelift Project Developers"
        ];
        features = {
          "default" = [ "std" ];
          "rustc-dep-of-std" = [ "compiler_builtins" "core" "rustc-std-workspace-alloc" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "wasi 0.9.0+wasi-snapshot-preview1" = rec {
        crateName = "wasi";
        version = "0.9.0+wasi-snapshot-preview1";
        edition = "2018";
        sha256 = "06g5v3vrdapfzvfq662cij7v8a1flwr2my45nnncdv2galrdzkfc";
        authors = [
          "The Cranelift Project Developers"
        ];
        features = {
          "default" = [ "std" ];
          "rustc-dep-of-std" = [ "compiler_builtins" "core" "rustc-std-workspace-alloc" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
      "wasm-bindgen" = rec {
        crateName = "wasm-bindgen";
        version = "0.2.79";
        edition = "2018";
        sha256 = "01kc4lj2vlf0ra2w63izrgdlv8p6f8p15086hhyqln6q4dsazw95";
        authors = [
          "The wasm-bindgen Developers"
        ];
        dependencies = [
          {
            name = "cfg-if";
            packageId = "cfg-if 1.0.0";
          }
          {
            name = "wasm-bindgen-macro";
            packageId = "wasm-bindgen-macro";
          }
        ];
        features = {
          "default" = [ "spans" "std" ];
          "enable-interning" = [ "std" ];
          "serde-serialize" = [ "serde" "serde_json" "std" ];
          "spans" = [ "wasm-bindgen-macro/spans" ];
          "strict-macro" = [ "wasm-bindgen-macro/strict-macro" ];
          "xxx_debug_only_print_generated_code" = [ "wasm-bindgen-macro/xxx_debug_only_print_generated_code" ];
        };
        resolvedDefaultFeatures = [ "default" "spans" "std" ];
      };
      "wasm-bindgen-backend" = rec {
        crateName = "wasm-bindgen-backend";
        version = "0.2.79";
        edition = "2018";
        sha256 = "1jpdrl5jj01961jxhmvj7v25ws928fyfj8ms7izifnhg0ggw08cb";
        authors = [
          "The wasm-bindgen Developers"
        ];
        dependencies = [
          {
            name = "bumpalo";
            packageId = "bumpalo";
          }
          {
            name = "lazy_static";
            packageId = "lazy_static 1.4.0";
          }
          {
            name = "log";
            packageId = "log 0.4.14";
          }
          {
            name = "proc-macro2";
            packageId = "proc-macro2";
          }
          {
            name = "quote";
            packageId = "quote";
          }
          {
            name = "syn";
            packageId = "syn";
            features = [ "full" ];
          }
          {
            name = "wasm-bindgen-shared";
            packageId = "wasm-bindgen-shared";
          }
        ];
        features = {
          "extra-traits" = [ "syn/extra-traits" ];
        };
        resolvedDefaultFeatures = [ "spans" ];
      };
      "wasm-bindgen-futures" = rec {
        crateName = "wasm-bindgen-futures";
        version = "0.4.29";
        edition = "2018";
        sha256 = "15bk4rjqny6drwgv7r47dj5wxaq9j5rrkfb6wb3x7c9i18kyrdif";
        authors = [
          "The wasm-bindgen Developers"
        ];
        dependencies = [
          {
            name = "cfg-if";
            packageId = "cfg-if 1.0.0";
          }
          {
            name = "js-sys";
            packageId = "js-sys";
          }
          {
            name = "wasm-bindgen";
            packageId = "wasm-bindgen";
          }
          {
            name = "web-sys";
            packageId = "web-sys";
            target = { target, features }: (builtins.elem "atomics" targetFeatures);
            features = [ "MessageEvent" "Worker" ];
          }
        ];
        features = {
          "futures-core-03-stream" = [ "futures-core" ];
        };
      };
      "wasm-bindgen-macro" = rec {
        crateName = "wasm-bindgen-macro";
        version = "0.2.79";
        edition = "2018";
        sha256 = "00gdh0dlf2r77mxwh08q0z01vz2z7mvrllmj4gjjx9a0kvb06hig";
        procMacro = true;
        authors = [
          "The wasm-bindgen Developers"
        ];
        dependencies = [
          {
            name = "quote";
            packageId = "quote";
          }
          {
            name = "wasm-bindgen-macro-support";
            packageId = "wasm-bindgen-macro-support";
          }
        ];
        features = {
          "spans" = [ "wasm-bindgen-macro-support/spans" ];
          "strict-macro" = [ "wasm-bindgen-macro-support/strict-macro" ];
        };
        resolvedDefaultFeatures = [ "spans" ];
      };
      "wasm-bindgen-macro-support" = rec {
        crateName = "wasm-bindgen-macro-support";
        version = "0.2.79";
        edition = "2018";
        sha256 = "1g1fjqvrkrf3j20z8nxsf60cypxg9dfvpbachl2b53908q6s7a5z";
        authors = [
          "The wasm-bindgen Developers"
        ];
        dependencies = [
          {
            name = "proc-macro2";
            packageId = "proc-macro2";
          }
          {
            name = "quote";
            packageId = "quote";
          }
          {
            name = "syn";
            packageId = "syn";
            features = [ "visit" "full" ];
          }
          {
            name = "wasm-bindgen-backend";
            packageId = "wasm-bindgen-backend";
          }
          {
            name = "wasm-bindgen-shared";
            packageId = "wasm-bindgen-shared";
          }
        ];
        features = {
          "extra-traits" = [ "syn/extra-traits" ];
          "spans" = [ "wasm-bindgen-backend/spans" ];
        };
        resolvedDefaultFeatures = [ "spans" ];
      };
      "wasm-bindgen-shared" = rec {
        crateName = "wasm-bindgen-shared";
        version = "0.2.79";
        edition = "2018";
        sha256 = "18h67l9b9jn06iw9r2p7bh9i0brh24lilcp4f26f4f24bh1qv59x";
        authors = [
          "The wasm-bindgen Developers"
        ];

      };
      "wasm-timer" = rec {
        crateName = "wasm-timer";
        version = "0.2.5";
        edition = "2018";
        sha256 = "0zsyijv3wgj9p4q47a4awla8j4kw33jd7da2fsd1wml0nh6wn3my";
        authors = [
          "Pierre Krieger <pierre.krieger1708@gmail.com>"
        ];
        dependencies = [
          {
            name = "futures";
            packageId = "futures 0.3.19";
          }
          {
            name = "js-sys";
            packageId = "js-sys";
            target = { target, features }: ((target."arch" == "wasm32") && (target."os" == "unknown"));
          }
          {
            name = "parking_lot";
            packageId = "parking_lot 0.11.2";
          }
          {
            name = "pin-utils";
            packageId = "pin-utils";
          }
          {
            name = "wasm-bindgen";
            packageId = "wasm-bindgen";
            target = { target, features }: ((target."arch" == "wasm32") && (target."os" == "unknown"));
          }
          {
            name = "wasm-bindgen-futures";
            packageId = "wasm-bindgen-futures";
            target = { target, features }: ((target."arch" == "wasm32") && (target."os" == "unknown"));
          }
          {
            name = "web-sys";
            packageId = "web-sys";
            target = { target, features }: ((target."arch" == "wasm32") && (target."os" == "unknown"));
            features = [ "Performance" "Window" ];
          }
        ];

      };
      "wasmer" = rec {
        crateName = "wasmer";
        version = "2.2.0";
        edition = "2018";
        sha256 = "0451xwfc1zpjdzxwg8ll3z7jkdzyzl4s1r0bxpw3hgyv8vwdzixz";
        authors = [
          "Wasmer Engineering Team <engineering@wasmer.io>"
        ];
        dependencies = [
          {
            name = "cfg-if";
            packageId = "cfg-if 1.0.0";
          }
          {
            name = "indexmap";
            packageId = "indexmap";
            features = [ "serde-1" ];
          }
          {
            name = "js-sys";
            packageId = "js-sys";
            target = { target, features }: (target."arch" == "wasm32");
          }
          {
            name = "loupe";
            packageId = "loupe";
            target = { target, features }: (!(target."arch" == "wasm32"));
          }
          {
            name = "more-asserts";
            packageId = "more-asserts";
          }
          {
            name = "target-lexicon";
            packageId = "target-lexicon";
            usesDefaultFeatures = false;
            target = { target, features }: (!(target."arch" == "wasm32"));
          }
          {
            name = "thiserror";
            packageId = "thiserror";
          }
          {
            name = "wasm-bindgen";
            packageId = "wasm-bindgen";
            target = { target, features }: (target."arch" == "wasm32");
          }
          {
            name = "wasmer-compiler";
            packageId = "wasmer-compiler";
            target = { target, features }: (!(target."arch" == "wasm32"));
          }
          {
            name = "wasmer-compiler-cranelift";
            packageId = "wasmer-compiler-cranelift";
            optional = true;
            target = { target, features }: (!(target."arch" == "wasm32"));
          }
          {
            name = "wasmer-derive";
            packageId = "wasmer-derive";
            target = { target, features }: (!(target."arch" == "wasm32"));
          }
          {
            name = "wasmer-derive";
            packageId = "wasmer-derive";
            target = { target, features }: (target."arch" == "wasm32");
          }
          {
            name = "wasmer-engine";
            packageId = "wasmer-engine";
            target = { target, features }: (!(target."arch" == "wasm32"));
          }
          {
            name = "wasmer-engine-dylib";
            packageId = "wasmer-engine-dylib";
            optional = true;
            target = { target, features }: (!(target."arch" == "wasm32"));
          }
          {
            name = "wasmer-engine-universal";
            packageId = "wasmer-engine-universal";
            optional = true;
            target = { target, features }: (!(target."arch" == "wasm32"));
          }
          {
            name = "wasmer-types";
            packageId = "wasmer-types";
            target = { target, features }: (!(target."arch" == "wasm32"));
          }
          {
            name = "wasmer-types";
            packageId = "wasmer-types";
            usesDefaultFeatures = false;
            target = { target, features }: (target."arch" == "wasm32");
            features = [ "std" ];
          }
          {
            name = "wasmer-vm";
            packageId = "wasmer-vm";
            target = { target, features }: (!(target."arch" == "wasm32"));
          }
          {
            name = "wat";
            packageId = "wat";
            optional = true;
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.9";
            target = { target, features }: ((!(target."arch" == "wasm32")) && (target."os" == "windows"));
          }
        ];
        devDependencies = [
          {
            name = "wat";
            packageId = "wat";
            target = {target, features}: (!(target."arch" == "wasm32"));
          }
          {
            name = "wat";
            packageId = "wat";
            target = {target, features}: (target."arch" == "wasm32");
          }
        ];
        features = {
          "compiler" = [ "sys" "wasmer-compiler/translator" "wasmer-engine-universal/compiler" "wasmer-engine-dylib/compiler" ];
          "core" = [ "hashbrown" ];
          "cranelift" = [ "compiler" "wasmer-compiler-cranelift" ];
          "default" = [ "sys-default" ];
          "default-cranelift" = [ "default-compiler" "cranelift" ];
          "default-dylib" = [ "default-engine" "dylib" ];
          "default-llvm" = [ "default-compiler" "llvm" ];
          "default-singlepass" = [ "default-compiler" "singlepass" ];
          "default-universal" = [ "default-engine" "universal" ];
          "dylib" = [ "engine" "wasmer-engine-dylib" ];
          "engine" = [ "sys" ];
          "experimental-reference-types-extern-ref" = [ "sys" "wasmer-types/experimental-reference-types-extern-ref" ];
          "jit" = [ "universal" ];
          "js-default" = [ "js" "std" "wasm-types-polyfill" ];
          "llvm" = [ "compiler" "wasmer-compiler-llvm" ];
          "native" = [ "dylib" ];
          "singlepass" = [ "compiler" "wasmer-compiler-singlepass" ];
          "sys-default" = [ "sys" "wat" "default-cranelift" "default-universal" ];
          "universal" = [ "engine" "wasmer-engine-universal" ];
          "wasm-types-polyfill" = [ "js" "wasmparser" ];
        };
        resolvedDefaultFeatures = [ "compiler" "cranelift" "default" "default-compiler" "default-cranelift" "default-engine" "default-universal" "engine" "sys" "sys-default" "universal" "wasmer-compiler-cranelift" "wasmer-engine-dylib" "wasmer-engine-universal" "wat" ];
      };
      "wasmer-cache" = rec {
        crateName = "wasmer-cache";
        version = "2.2.0";
        edition = "2018";
        sha256 = "1mg9sk1gnx42ibggh4vp7d52z3wx9cs3dhn4c779n2zkigkhsjl3";
        authors = [
          "Wasmer Engineering Team <engineering@wasmer.io>"
        ];
        dependencies = [
          {
            name = "blake3";
            packageId = "blake3";
          }
          {
            name = "hex";
            packageId = "hex";
          }
          {
            name = "thiserror";
            packageId = "thiserror";
          }
          {
            name = "wasmer";
            packageId = "wasmer";
            usesDefaultFeatures = false;
            features = [ "sys" ];
          }
        ];
        features = {
          "blake3-pure" = [ "blake3/pure" ];
        };
      };
      "wasmer-compiler" = rec {
        crateName = "wasmer-compiler";
        version = "2.2.0";
        edition = "2018";
        sha256 = "0gg6h0di6dn551jy253sdhm2c1431bnf7l60ds1d7nhn5grap4cc";
        authors = [
          "Wasmer Engineering Team <engineering@wasmer.io>"
        ];
        dependencies = [
          {
            name = "enumset";
            packageId = "enumset";
          }
          {
            name = "loupe";
            packageId = "loupe";
          }
          {
            name = "rkyv";
            packageId = "rkyv";
            optional = true;
          }
          {
            name = "serde";
            packageId = "serde 1.0.136";
            optional = true;
            features = [ "derive" ];
          }
          {
            name = "serde_bytes";
            packageId = "serde_bytes";
            optional = true;
          }
          {
            name = "smallvec";
            packageId = "smallvec 1.8.0";
          }
          {
            name = "target-lexicon";
            packageId = "target-lexicon";
            usesDefaultFeatures = false;
          }
          {
            name = "thiserror";
            packageId = "thiserror";
          }
          {
            name = "wasmer-types";
            packageId = "wasmer-types";
            usesDefaultFeatures = false;
          }
          {
            name = "wasmer-vm";
            packageId = "wasmer-vm";
          }
          {
            name = "wasmparser";
            packageId = "wasmparser 0.78.2";
            optional = true;
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "core" = [ "hashbrown" "wasmer-types/core" ];
          "default" = [ "std" "enable-serde" "enable-rkyv" ];
          "enable-rkyv" = [ "rkyv" "wasmer-vm/enable-rkyv" "wasmer-types/enable-rkyv" ];
          "enable-serde" = [ "serde" "serde_bytes" "wasmer-types/enable-serde" ];
          "std" = [ "wasmer-types/std" ];
          "translator" = [ "wasmparser" ];
        };
        resolvedDefaultFeatures = [ "default" "enable-rkyv" "enable-serde" "rkyv" "serde" "serde_bytes" "std" "translator" "wasmparser" ];
      };
      "wasmer-compiler-cranelift" = rec {
        crateName = "wasmer-compiler-cranelift";
        version = "2.2.0";
        edition = "2018";
        sha256 = "1ar3jfi1b7bga23h54460k3vw1fqr8k28i0bgsd16qxijvsa293n";
        authors = [
          "Wasmer Engineering Team <engineering@wasmer.io>"
        ];
        dependencies = [
          {
            name = "cranelift-codegen";
            packageId = "cranelift-codegen";
            usesDefaultFeatures = false;
            features = [ "x86" "arm64" ];
          }
          {
            name = "cranelift-entity";
            packageId = "cranelift-entity";
            usesDefaultFeatures = false;
          }
          {
            name = "cranelift-frontend";
            packageId = "cranelift-frontend";
            usesDefaultFeatures = false;
          }
          {
            name = "gimli";
            packageId = "gimli 0.25.0";
            optional = true;
          }
          {
            name = "loupe";
            packageId = "loupe";
          }
          {
            name = "more-asserts";
            packageId = "more-asserts";
          }
          {
            name = "rayon";
            packageId = "rayon";
          }
          {
            name = "smallvec";
            packageId = "smallvec 1.8.0";
          }
          {
            name = "target-lexicon";
            packageId = "target-lexicon";
            usesDefaultFeatures = false;
          }
          {
            name = "tracing";
            packageId = "tracing 0.1.31";
          }
          {
            name = "wasmer-compiler";
            packageId = "wasmer-compiler";
            usesDefaultFeatures = false;
            features = [ "translator" ];
          }
          {
            name = "wasmer-types";
            packageId = "wasmer-types";
            usesDefaultFeatures = false;
            features = [ "std" ];
          }
          {
            name = "wasmer-vm";
            packageId = "wasmer-vm";
          }
        ];
        devDependencies = [
          {
            name = "cranelift-codegen";
            packageId = "cranelift-codegen";
            features = [ "all-arch" ];
          }
        ];
        features = {
          "core" = [ "hashbrown" "cranelift-codegen/core" "cranelift-frontend/core" ];
          "default" = [ "std" "unwind" ];
          "std" = [ "cranelift-codegen/std" "cranelift-frontend/std" "wasmer-compiler/std" "wasmer-types/std" ];
          "unwind" = [ "cranelift-codegen/unwind" "gimli" ];
        };
        resolvedDefaultFeatures = [ "default" "gimli" "std" "unwind" ];
      };
      "wasmer-compiler-singlepass" = rec {
        crateName = "wasmer-compiler-singlepass";
        version = "2.2.0";
        edition = "2018";
        sha256 = "1yj0plsbdq6b6z8pfby58icis51lbk1wmgxfxl4hwjzvix9w2qsb";
        authors = [
          "Wasmer Engineering Team <engineering@wasmer.io>"
        ];
        dependencies = [
          {
            name = "byteorder";
            packageId = "byteorder";
          }
          {
            name = "dynasm";
            packageId = "dynasm";
          }
          {
            name = "dynasmrt";
            packageId = "dynasmrt";
          }
          {
            name = "lazy_static";
            packageId = "lazy_static 1.4.0";
          }
          {
            name = "loupe";
            packageId = "loupe";
          }
          {
            name = "more-asserts";
            packageId = "more-asserts";
          }
          {
            name = "rayon";
            packageId = "rayon";
            optional = true;
          }
          {
            name = "smallvec";
            packageId = "smallvec 1.8.0";
          }
          {
            name = "wasmer-compiler";
            packageId = "wasmer-compiler";
            usesDefaultFeatures = false;
            features = [ "translator" ];
          }
          {
            name = "wasmer-types";
            packageId = "wasmer-types";
            usesDefaultFeatures = false;
            features = [ "std" ];
          }
          {
            name = "wasmer-vm";
            packageId = "wasmer-vm";
          }
        ];
        features = {
          "core" = [ "hashbrown" "wasmer-types/core" ];
          "default" = [ "std" "rayon" "avx" ];
          "std" = [ "wasmer-compiler/std" "wasmer-types/std" ];
        };
        resolvedDefaultFeatures = [ "avx" "default" "rayon" "std" ];
      };
      "wasmer-derive" = rec {
        crateName = "wasmer-derive";
        version = "2.2.0";
        edition = "2018";
        sha256 = "12bzzrf3jssdw8i5ym8dgqspjwh0yghyfvbwq6k8mxg0rssj6fwk";
        procMacro = true;
        authors = [
          "Wasmer Engineering Team <engineering@wasmer.io>"
        ];
        dependencies = [
          {
            name = "proc-macro-error";
            packageId = "proc-macro-error";
          }
          {
            name = "proc-macro2";
            packageId = "proc-macro2";
          }
          {
            name = "quote";
            packageId = "quote";
          }
          {
            name = "syn";
            packageId = "syn";
            features = [ "full" "extra-traits" ];
          }
        ];

      };
      "wasmer-engine" = rec {
        crateName = "wasmer-engine";
        version = "2.2.0";
        edition = "2018";
        sha256 = "0h2nnlcggpw1kahfavwb547cjvhcz6mxbkr0hgd0qqchvz20mns1";
        authors = [
          "Wasmer Engineering Team <engineering@wasmer.io>"
        ];
        dependencies = [
          {
            name = "backtrace";
            packageId = "backtrace";
          }
          {
            name = "enumset";
            packageId = "enumset";
          }
          {
            name = "lazy_static";
            packageId = "lazy_static 1.4.0";
          }
          {
            name = "loupe";
            packageId = "loupe";
          }
          {
            name = "memmap2";
            packageId = "memmap2";
          }
          {
            name = "more-asserts";
            packageId = "more-asserts";
          }
          {
            name = "rustc-demangle";
            packageId = "rustc-demangle";
          }
          {
            name = "serde";
            packageId = "serde 1.0.136";
            features = [ "derive" "rc" ];
          }
          {
            name = "serde_bytes";
            packageId = "serde_bytes";
          }
          {
            name = "target-lexicon";
            packageId = "target-lexicon";
            usesDefaultFeatures = false;
          }
          {
            name = "thiserror";
            packageId = "thiserror";
          }
          {
            name = "wasmer-compiler";
            packageId = "wasmer-compiler";
          }
          {
            name = "wasmer-types";
            packageId = "wasmer-types";
          }
          {
            name = "wasmer-vm";
            packageId = "wasmer-vm";
          }
        ];

      };
      "wasmer-engine-dylib" = rec {
        crateName = "wasmer-engine-dylib";
        version = "2.2.0";
        edition = "2018";
        sha256 = "0qhiad7z8r618sph32rl2ih4b7ycq9xggjmfib41rhva6prq65jr";
        authors = [
          "Wasmer Engineering Team <engineering@wasmer.io>"
        ];
        dependencies = [
          {
            name = "cfg-if";
            packageId = "cfg-if 1.0.0";
          }
          {
            name = "enum-iterator";
            packageId = "enum-iterator";
          }
          {
            name = "enumset";
            packageId = "enumset";
          }
          {
            name = "leb128";
            packageId = "leb128";
          }
          {
            name = "libloading";
            packageId = "libloading";
          }
          {
            name = "loupe";
            packageId = "loupe";
          }
          {
            name = "object";
            packageId = "object 0.28.3";
            usesDefaultFeatures = false;
            features = [ "write" ];
          }
          {
            name = "rkyv";
            packageId = "rkyv";
          }
          {
            name = "serde";
            packageId = "serde 1.0.136";
            features = [ "derive" "rc" ];
          }
          {
            name = "tempfile";
            packageId = "tempfile";
          }
          {
            name = "tracing";
            packageId = "tracing 0.1.31";
            features = [ "log" ];
          }
          {
            name = "wasmer-compiler";
            packageId = "wasmer-compiler";
          }
          {
            name = "wasmer-engine";
            packageId = "wasmer-engine";
          }
          {
            name = "wasmer-object";
            packageId = "wasmer-object";
          }
          {
            name = "wasmer-types";
            packageId = "wasmer-types";
          }
          {
            name = "wasmer-vm";
            packageId = "wasmer-vm";
            features = [ "enable-rkyv" ];
          }
          {
            name = "which";
            packageId = "which";
          }
        ];
        features = {
          "compiler" = [ "wasmer-compiler/translator" ];
        };
        resolvedDefaultFeatures = [ "compiler" ];
      };
      "wasmer-engine-universal" = rec {
        crateName = "wasmer-engine-universal";
        version = "2.2.0";
        edition = "2018";
        sha256 = "1hgh3969f05wvg3whdfh0zrp85brgi5k9pm6k5q451wv7q8dxkyw";
        authors = [
          "Wasmer Engineering Team <engineering@wasmer.io>"
        ];
        dependencies = [
          {
            name = "cfg-if";
            packageId = "cfg-if 1.0.0";
          }
          {
            name = "enum-iterator";
            packageId = "enum-iterator";
          }
          {
            name = "enumset";
            packageId = "enumset";
          }
          {
            name = "leb128";
            packageId = "leb128";
          }
          {
            name = "loupe";
            packageId = "loupe";
          }
          {
            name = "region";
            packageId = "region";
          }
          {
            name = "rkyv";
            packageId = "rkyv";
          }
          {
            name = "wasmer-compiler";
            packageId = "wasmer-compiler";
            features = [ "translator" "enable-rkyv" ];
          }
          {
            name = "wasmer-engine";
            packageId = "wasmer-engine";
          }
          {
            name = "wasmer-types";
            packageId = "wasmer-types";
            features = [ "enable-rkyv" ];
          }
          {
            name = "wasmer-vm";
            packageId = "wasmer-vm";
            features = [ "enable-rkyv" ];
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.9";
            target = { target, features }: (target."os" == "windows");
            features = [ "winnt" "impl-default" ];
          }
        ];
        features = {
          "compiler" = [ "wasmer-compiler/translator" ];
        };
        resolvedDefaultFeatures = [ "compiler" ];
      };
      "wasmer-object" = rec {
        crateName = "wasmer-object";
        version = "2.2.0";
        edition = "2018";
        sha256 = "0h4h4am8d5c0q0gqxmwf6cw62yy6z4p112921y2bv619b42l030x";
        authors = [
          "Wasmer Engineering Team <engineering@wasmer.io>"
        ];
        dependencies = [
          {
            name = "object";
            packageId = "object 0.28.3";
            usesDefaultFeatures = false;
            features = [ "write" ];
          }
          {
            name = "thiserror";
            packageId = "thiserror";
          }
          {
            name = "wasmer-compiler";
            packageId = "wasmer-compiler";
            usesDefaultFeatures = false;
            features = [ "std" "translator" ];
          }
          {
            name = "wasmer-types";
            packageId = "wasmer-types";
          }
        ];

      };
      "wasmer-types" = rec {
        crateName = "wasmer-types";
        version = "2.2.0";
        edition = "2018";
        sha256 = "0ghfjnmq0bf1p6q0ddl76vd6b715gma42g42b5msfrc22x7qbssd";
        authors = [
          "Wasmer Engineering Team <engineering@wasmer.io>"
        ];
        dependencies = [
          {
            name = "indexmap";
            packageId = "indexmap";
            features = [ "serde-1" ];
          }
          {
            name = "loupe";
            packageId = "loupe";
            features = [ "enable-indexmap" ];
          }
          {
            name = "rkyv";
            packageId = "rkyv";
            optional = true;
          }
          {
            name = "serde";
            packageId = "serde 1.0.136";
            optional = true;
            usesDefaultFeatures = false;
            features = [ "derive" "rc" ];
          }
          {
            name = "thiserror";
            packageId = "thiserror";
          }
        ];
        features = {
          "default" = [ "std" "enable-serde" "enable-rkyv" ];
          "enable-rkyv" = [ "rkyv" ];
          "enable-serde" = [ "serde" "serde/std" ];
        };
        resolvedDefaultFeatures = [ "default" "enable-rkyv" "enable-serde" "rkyv" "serde" "std" ];
      };
      "wasmer-vm" = rec {
        crateName = "wasmer-vm";
        version = "2.2.0";
        edition = "2018";
        sha256 = "0w0yrkx7xz58rzasqsf4h8yzhlnsfc266zlj6cj10jmikjc5rg2x";
        authors = [
          "Wasmer Engineering Team <engineering@wasmer.io>"
        ];
        dependencies = [
          {
            name = "backtrace";
            packageId = "backtrace";
          }
          {
            name = "cfg-if";
            packageId = "cfg-if 1.0.0";
          }
          {
            name = "enum-iterator";
            packageId = "enum-iterator";
          }
          {
            name = "indexmap";
            packageId = "indexmap";
            features = [ "serde-1" ];
          }
          {
            name = "libc";
            packageId = "libc";
            usesDefaultFeatures = false;
          }
          {
            name = "loupe";
            packageId = "loupe";
            features = [ "enable-indexmap" ];
          }
          {
            name = "memoffset";
            packageId = "memoffset";
          }
          {
            name = "more-asserts";
            packageId = "more-asserts";
          }
          {
            name = "region";
            packageId = "region";
          }
          {
            name = "rkyv";
            packageId = "rkyv";
            optional = true;
          }
          {
            name = "serde";
            packageId = "serde 1.0.136";
            features = [ "derive" "rc" ];
          }
          {
            name = "thiserror";
            packageId = "thiserror";
          }
          {
            name = "wasmer-types";
            packageId = "wasmer-types";
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.9";
            target = { target, features }: (target."os" == "windows");
            features = [ "winbase" "memoryapi" "errhandlingapi" ];
          }
        ];
        buildDependencies = [
          {
            name = "cc";
            packageId = "cc";
          }
        ];
        features = {
          "enable-rkyv" = [ "rkyv" ];
        };
        resolvedDefaultFeatures = [ "default" "enable-rkyv" "rkyv" ];
      };
      "wasmparser 0.78.2" = rec {
        crateName = "wasmparser";
        version = "0.78.2";
        edition = "2018";
        sha256 = "0rgx29yg656rrwras0k0blqy8k414bxfbf7abh2qpkz5g164s52j";
        authors = [
          "Yury Delendik <ydelendik@mozilla.com>"
        ];
        features = {
        };
      };
      "wasmparser 0.83.0" = rec {
        crateName = "wasmparser";
        version = "0.83.0";
        edition = "2018";
        sha256 = "0yhx2kq7da4sdglh1x1di4xxg33k7lwddpd3ri46bp9abk2xg3ki";
        authors = [
          "Yury Delendik <ydelendik@mozilla.com>"
        ];
        features = {
        };
      };
      "wast" = rec {
        crateName = "wast";
        version = "39.0.0";
        edition = "2018";
        sha256 = "01fxycnka12j7x0fkzkwkak1ylrn4kjy7vkg30hp89ib8d9vvfz9";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        dependencies = [
          {
            name = "leb128";
            packageId = "leb128";
          }
          {
            name = "memchr";
            packageId = "memchr";
          }
          {
            name = "unicode-width";
            packageId = "unicode-width";
          }
        ];
        features = {
          "default" = [ "wasm-module" ];
        };
        resolvedDefaultFeatures = [ "default" "wasm-module" ];
      };
      "wat" = rec {
        crateName = "wat";
        version = "1.0.41";
        edition = "2018";
        sha256 = "0c0qwqzxvwil8shw7da0c0ryb4iygkr1g1km52gwd5sg94jyv65b";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        dependencies = [
          {
            name = "wast";
            packageId = "wast";
          }
        ];

      };
      "watchexec" = rec {
        crateName = "watchexec";
        version = "1.15.0";
        edition = "2018";
        crateBin = [];
        sha256 = "0pvmh97vp9w55p5l262gknqzx7rm2p7v8bhwvzd40hlz5dzvl3va";
        authors = [
          "Matt Green <mattgreenrocks@gmail.com>"
          "Félix Saparelli <felix@passcod.name>"
        ];
        dependencies = [
          {
            name = "clap";
            packageId = "clap 2.34.0";
            usesDefaultFeatures = false;
            features = [ "wrap_help" ];
          }
          {
            name = "derive_builder";
            packageId = "derive_builder";
          }
          {
            name = "env_logger";
            packageId = "env_logger";
            usesDefaultFeatures = false;
          }
          {
            name = "glob";
            packageId = "glob";
          }
          {
            name = "globset";
            packageId = "globset";
          }
          {
            name = "lazy_static";
            packageId = "lazy_static 1.4.0";
          }
          {
            name = "log";
            packageId = "log 0.4.14";
          }
          {
            name = "nix";
            packageId = "nix 0.20.0";
            target = { target, features }: (target."unix" or false);
          }
          {
            name = "notify";
            packageId = "notify";
          }
          {
            name = "walkdir";
            packageId = "walkdir";
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.9";
            target = { target, features }: (target."windows" or false);
            features = [ "ioapiset" "jobapi2" "tlhelp32" ];
          }
        ];
        buildDependencies = [
          {
            name = "embed-resource";
            packageId = "embed-resource";
          }
        ];

      };
      "web-sys" = rec {
        crateName = "web-sys";
        version = "0.3.56";
        edition = "2018";
        sha256 = "1sxqmwq773ss5m6vz7z95fdm6bqlix0s2awsy0j5gllxy8cv6q60";
        authors = [
          "The wasm-bindgen Developers"
        ];
        dependencies = [
          {
            name = "js-sys";
            packageId = "js-sys";
          }
          {
            name = "wasm-bindgen";
            packageId = "wasm-bindgen";
          }
        ];
        features = {
          "AbortSignal" = [ "EventTarget" ];
          "AnalyserNode" = [ "AudioNode" "EventTarget" ];
          "Animation" = [ "EventTarget" ];
          "AnimationEvent" = [ "Event" ];
          "AnimationPlaybackEvent" = [ "Event" ];
          "Attr" = [ "EventTarget" "Node" ];
          "AudioBufferSourceNode" = [ "AudioNode" "AudioScheduledSourceNode" "EventTarget" ];
          "AudioContext" = [ "BaseAudioContext" "EventTarget" ];
          "AudioDestinationNode" = [ "AudioNode" "EventTarget" ];
          "AudioNode" = [ "EventTarget" ];
          "AudioProcessingEvent" = [ "Event" ];
          "AudioScheduledSourceNode" = [ "AudioNode" "EventTarget" ];
          "AudioStreamTrack" = [ "EventTarget" "MediaStreamTrack" ];
          "AudioTrackList" = [ "EventTarget" ];
          "AudioWorklet" = [ "Worklet" ];
          "AudioWorkletGlobalScope" = [ "WorkletGlobalScope" ];
          "AudioWorkletNode" = [ "AudioNode" "EventTarget" ];
          "AuthenticatorAssertionResponse" = [ "AuthenticatorResponse" ];
          "AuthenticatorAttestationResponse" = [ "AuthenticatorResponse" ];
          "BaseAudioContext" = [ "EventTarget" ];
          "BatteryManager" = [ "EventTarget" ];
          "BeforeUnloadEvent" = [ "Event" ];
          "BiquadFilterNode" = [ "AudioNode" "EventTarget" ];
          "BlobEvent" = [ "Event" ];
          "Bluetooth" = [ "EventTarget" ];
          "BluetoothAdvertisingEvent" = [ "Event" ];
          "BluetoothDevice" = [ "EventTarget" ];
          "BluetoothPermissionResult" = [ "EventTarget" "PermissionStatus" ];
          "BluetoothRemoteGattCharacteristic" = [ "EventTarget" ];
          "BluetoothRemoteGattService" = [ "EventTarget" ];
          "BroadcastChannel" = [ "EventTarget" ];
          "CanvasCaptureMediaStream" = [ "EventTarget" "MediaStream" ];
          "CdataSection" = [ "CharacterData" "EventTarget" "Node" "Text" ];
          "ChannelMergerNode" = [ "AudioNode" "EventTarget" ];
          "ChannelSplitterNode" = [ "AudioNode" "EventTarget" ];
          "CharacterData" = [ "EventTarget" "Node" ];
          "ChromeWorker" = [ "EventTarget" "Worker" ];
          "Clipboard" = [ "EventTarget" ];
          "ClipboardEvent" = [ "Event" ];
          "CloseEvent" = [ "Event" ];
          "Comment" = [ "CharacterData" "EventTarget" "Node" ];
          "CompositionEvent" = [ "Event" "UiEvent" ];
          "ConstantSourceNode" = [ "AudioNode" "AudioScheduledSourceNode" "EventTarget" ];
          "ConvolverNode" = [ "AudioNode" "EventTarget" ];
          "CssAnimation" = [ "Animation" "EventTarget" ];
          "CssConditionRule" = [ "CssGroupingRule" "CssRule" ];
          "CssCounterStyleRule" = [ "CssRule" ];
          "CssFontFaceRule" = [ "CssRule" ];
          "CssFontFeatureValuesRule" = [ "CssRule" ];
          "CssGroupingRule" = [ "CssRule" ];
          "CssImportRule" = [ "CssRule" ];
          "CssKeyframeRule" = [ "CssRule" ];
          "CssKeyframesRule" = [ "CssRule" ];
          "CssMediaRule" = [ "CssConditionRule" "CssGroupingRule" "CssRule" ];
          "CssNamespaceRule" = [ "CssRule" ];
          "CssPageRule" = [ "CssRule" ];
          "CssStyleRule" = [ "CssRule" ];
          "CssStyleSheet" = [ "StyleSheet" ];
          "CssSupportsRule" = [ "CssConditionRule" "CssGroupingRule" "CssRule" ];
          "CssTransition" = [ "Animation" "EventTarget" ];
          "CustomEvent" = [ "Event" ];
          "DedicatedWorkerGlobalScope" = [ "EventTarget" "WorkerGlobalScope" ];
          "DelayNode" = [ "AudioNode" "EventTarget" ];
          "DeviceLightEvent" = [ "Event" ];
          "DeviceMotionEvent" = [ "Event" ];
          "DeviceOrientationEvent" = [ "Event" ];
          "DeviceProximityEvent" = [ "Event" ];
          "Document" = [ "EventTarget" "Node" ];
          "DocumentFragment" = [ "EventTarget" "Node" ];
          "DocumentTimeline" = [ "AnimationTimeline" ];
          "DocumentType" = [ "EventTarget" "Node" ];
          "DomMatrix" = [ "DomMatrixReadOnly" ];
          "DomPoint" = [ "DomPointReadOnly" ];
          "DomRect" = [ "DomRectReadOnly" ];
          "DomRequest" = [ "EventTarget" ];
          "DragEvent" = [ "Event" "MouseEvent" "UiEvent" ];
          "DynamicsCompressorNode" = [ "AudioNode" "EventTarget" ];
          "Element" = [ "EventTarget" "Node" ];
          "ErrorEvent" = [ "Event" ];
          "EventSource" = [ "EventTarget" ];
          "ExtendableEvent" = [ "Event" ];
          "ExtendableMessageEvent" = [ "Event" "ExtendableEvent" ];
          "FetchEvent" = [ "Event" "ExtendableEvent" ];
          "FetchObserver" = [ "EventTarget" ];
          "File" = [ "Blob" ];
          "FileReader" = [ "EventTarget" ];
          "FileSystemDirectoryEntry" = [ "FileSystemEntry" ];
          "FileSystemFileEntry" = [ "FileSystemEntry" ];
          "FocusEvent" = [ "Event" "UiEvent" ];
          "FontFaceSet" = [ "EventTarget" ];
          "FontFaceSetLoadEvent" = [ "Event" ];
          "GainNode" = [ "AudioNode" "EventTarget" ];
          "GamepadAxisMoveEvent" = [ "Event" "GamepadEvent" ];
          "GamepadButtonEvent" = [ "Event" "GamepadEvent" ];
          "GamepadEvent" = [ "Event" ];
          "GpuDevice" = [ "EventTarget" ];
          "GpuUncapturedErrorEvent" = [ "Event" ];
          "HashChangeEvent" = [ "Event" ];
          "Hid" = [ "EventTarget" ];
          "HidConnectionEvent" = [ "Event" ];
          "HidDevice" = [ "EventTarget" ];
          "HidInputReportEvent" = [ "Event" ];
          "HtmlAnchorElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlAreaElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlAudioElement" = [ "Element" "EventTarget" "HtmlElement" "HtmlMediaElement" "Node" ];
          "HtmlBaseElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlBodyElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlBrElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlButtonElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlCanvasElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlDListElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlDataElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlDataListElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlDetailsElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlDialogElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlDirectoryElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlDivElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlDocument" = [ "Document" "EventTarget" "Node" ];
          "HtmlElement" = [ "Element" "EventTarget" "Node" ];
          "HtmlEmbedElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlFieldSetElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlFontElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlFormControlsCollection" = [ "HtmlCollection" ];
          "HtmlFormElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlFrameElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlFrameSetElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlHeadElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlHeadingElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlHrElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlHtmlElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlIFrameElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlImageElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlInputElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlLabelElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlLegendElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlLiElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlLinkElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlMapElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlMediaElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlMenuElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlMenuItemElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlMetaElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlMeterElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlModElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlOListElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlObjectElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlOptGroupElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlOptionElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlOptionsCollection" = [ "HtmlCollection" ];
          "HtmlOutputElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlParagraphElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlParamElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlPictureElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlPreElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlProgressElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlQuoteElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlScriptElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlSelectElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlSlotElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlSourceElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlSpanElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlStyleElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlTableCaptionElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlTableCellElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlTableColElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlTableElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlTableRowElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlTableSectionElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlTemplateElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlTextAreaElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlTimeElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlTitleElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlTrackElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlUListElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlUnknownElement" = [ "Element" "EventTarget" "HtmlElement" "Node" ];
          "HtmlVideoElement" = [ "Element" "EventTarget" "HtmlElement" "HtmlMediaElement" "Node" ];
          "IdbCursorWithValue" = [ "IdbCursor" ];
          "IdbDatabase" = [ "EventTarget" ];
          "IdbFileHandle" = [ "EventTarget" ];
          "IdbFileRequest" = [ "DomRequest" "EventTarget" ];
          "IdbLocaleAwareKeyRange" = [ "IdbKeyRange" ];
          "IdbMutableFile" = [ "EventTarget" ];
          "IdbOpenDbRequest" = [ "EventTarget" "IdbRequest" ];
          "IdbRequest" = [ "EventTarget" ];
          "IdbTransaction" = [ "EventTarget" ];
          "IdbVersionChangeEvent" = [ "Event" ];
          "IirFilterNode" = [ "AudioNode" "EventTarget" ];
          "ImageCaptureErrorEvent" = [ "Event" ];
          "InputEvent" = [ "Event" "UiEvent" ];
          "KeyboardEvent" = [ "Event" "UiEvent" ];
          "KeyframeEffect" = [ "AnimationEffect" ];
          "LocalMediaStream" = [ "EventTarget" "MediaStream" ];
          "MediaDevices" = [ "EventTarget" ];
          "MediaElementAudioSourceNode" = [ "AudioNode" "EventTarget" ];
          "MediaEncryptedEvent" = [ "Event" ];
          "MediaKeyError" = [ "Event" ];
          "MediaKeyMessageEvent" = [ "Event" ];
          "MediaKeySession" = [ "EventTarget" ];
          "MediaQueryList" = [ "EventTarget" ];
          "MediaQueryListEvent" = [ "Event" ];
          "MediaRecorder" = [ "EventTarget" ];
          "MediaRecorderErrorEvent" = [ "Event" ];
          "MediaSource" = [ "EventTarget" ];
          "MediaStream" = [ "EventTarget" ];
          "MediaStreamAudioDestinationNode" = [ "AudioNode" "EventTarget" ];
          "MediaStreamAudioSourceNode" = [ "AudioNode" "EventTarget" ];
          "MediaStreamEvent" = [ "Event" ];
          "MediaStreamTrack" = [ "EventTarget" ];
          "MediaStreamTrackEvent" = [ "Event" ];
          "MessageEvent" = [ "Event" ];
          "MessagePort" = [ "EventTarget" ];
          "MidiAccess" = [ "EventTarget" ];
          "MidiConnectionEvent" = [ "Event" ];
          "MidiInput" = [ "EventTarget" "MidiPort" ];
          "MidiMessageEvent" = [ "Event" ];
          "MidiOutput" = [ "EventTarget" "MidiPort" ];
          "MidiPort" = [ "EventTarget" ];
          "MouseEvent" = [ "Event" "UiEvent" ];
          "MouseScrollEvent" = [ "Event" "MouseEvent" "UiEvent" ];
          "MutationEvent" = [ "Event" ];
          "NetworkInformation" = [ "EventTarget" ];
          "Node" = [ "EventTarget" ];
          "Notification" = [ "EventTarget" ];
          "NotificationEvent" = [ "Event" "ExtendableEvent" ];
          "OfflineAudioCompletionEvent" = [ "Event" ];
          "OfflineAudioContext" = [ "BaseAudioContext" "EventTarget" ];
          "OfflineResourceList" = [ "EventTarget" ];
          "OffscreenCanvas" = [ "EventTarget" ];
          "OscillatorNode" = [ "AudioNode" "AudioScheduledSourceNode" "EventTarget" ];
          "PageTransitionEvent" = [ "Event" ];
          "PaintWorkletGlobalScope" = [ "WorkletGlobalScope" ];
          "PannerNode" = [ "AudioNode" "EventTarget" ];
          "PaymentMethodChangeEvent" = [ "Event" "PaymentRequestUpdateEvent" ];
          "PaymentRequestUpdateEvent" = [ "Event" ];
          "Performance" = [ "EventTarget" ];
          "PerformanceMark" = [ "PerformanceEntry" ];
          "PerformanceMeasure" = [ "PerformanceEntry" ];
          "PerformanceNavigationTiming" = [ "PerformanceEntry" "PerformanceResourceTiming" ];
          "PerformanceResourceTiming" = [ "PerformanceEntry" ];
          "PermissionStatus" = [ "EventTarget" ];
          "PointerEvent" = [ "Event" "MouseEvent" "UiEvent" ];
          "PopStateEvent" = [ "Event" ];
          "PopupBlockedEvent" = [ "Event" ];
          "PresentationAvailability" = [ "EventTarget" ];
          "PresentationConnection" = [ "EventTarget" ];
          "PresentationConnectionAvailableEvent" = [ "Event" ];
          "PresentationConnectionCloseEvent" = [ "Event" ];
          "PresentationConnectionList" = [ "EventTarget" ];
          "PresentationRequest" = [ "EventTarget" ];
          "ProcessingInstruction" = [ "CharacterData" "EventTarget" "Node" ];
          "ProgressEvent" = [ "Event" ];
          "PromiseRejectionEvent" = [ "Event" ];
          "PublicKeyCredential" = [ "Credential" ];
          "PushEvent" = [ "Event" "ExtendableEvent" ];
          "RadioNodeList" = [ "NodeList" ];
          "RtcDataChannel" = [ "EventTarget" ];
          "RtcDataChannelEvent" = [ "Event" ];
          "RtcPeerConnection" = [ "EventTarget" ];
          "RtcPeerConnectionIceEvent" = [ "Event" ];
          "RtcTrackEvent" = [ "Event" ];
          "RtcdtmfSender" = [ "EventTarget" ];
          "RtcdtmfToneChangeEvent" = [ "Event" ];
          "Screen" = [ "EventTarget" ];
          "ScreenOrientation" = [ "EventTarget" ];
          "ScriptProcessorNode" = [ "AudioNode" "EventTarget" ];
          "ScrollAreaEvent" = [ "Event" "UiEvent" ];
          "SecurityPolicyViolationEvent" = [ "Event" ];
          "ServiceWorker" = [ "EventTarget" ];
          "ServiceWorkerContainer" = [ "EventTarget" ];
          "ServiceWorkerGlobalScope" = [ "EventTarget" "WorkerGlobalScope" ];
          "ServiceWorkerRegistration" = [ "EventTarget" ];
          "ShadowRoot" = [ "DocumentFragment" "EventTarget" "Node" ];
          "SharedWorker" = [ "EventTarget" ];
          "SharedWorkerGlobalScope" = [ "EventTarget" "WorkerGlobalScope" ];
          "SourceBuffer" = [ "EventTarget" ];
          "SourceBufferList" = [ "EventTarget" ];
          "SpeechRecognition" = [ "EventTarget" ];
          "SpeechRecognitionError" = [ "Event" ];
          "SpeechRecognitionEvent" = [ "Event" ];
          "SpeechSynthesis" = [ "EventTarget" ];
          "SpeechSynthesisErrorEvent" = [ "Event" "SpeechSynthesisEvent" ];
          "SpeechSynthesisEvent" = [ "Event" ];
          "SpeechSynthesisUtterance" = [ "EventTarget" ];
          "StereoPannerNode" = [ "AudioNode" "EventTarget" ];
          "StorageEvent" = [ "Event" ];
          "SvgAnimateElement" = [ "Element" "EventTarget" "Node" "SvgAnimationElement" "SvgElement" ];
          "SvgAnimateMotionElement" = [ "Element" "EventTarget" "Node" "SvgAnimationElement" "SvgElement" ];
          "SvgAnimateTransformElement" = [ "Element" "EventTarget" "Node" "SvgAnimationElement" "SvgElement" ];
          "SvgAnimationElement" = [ "Element" "EventTarget" "Node" "SvgElement" ];
          "SvgCircleElement" = [ "Element" "EventTarget" "Node" "SvgElement" "SvgGeometryElement" "SvgGraphicsElement" ];
          "SvgClipPathElement" = [ "Element" "EventTarget" "Node" "SvgElement" ];
          "SvgComponentTransferFunctionElement" = [ "Element" "EventTarget" "Node" "SvgElement" ];
          "SvgDefsElement" = [ "Element" "EventTarget" "Node" "SvgElement" "SvgGraphicsElement" ];
          "SvgDescElement" = [ "Element" "EventTarget" "Node" "SvgElement" ];
          "SvgElement" = [ "Element" "EventTarget" "Node" ];
          "SvgEllipseElement" = [ "Element" "EventTarget" "Node" "SvgElement" "SvgGeometryElement" "SvgGraphicsElement" ];
          "SvgFilterElement" = [ "Element" "EventTarget" "Node" "SvgElement" ];
          "SvgForeignObjectElement" = [ "Element" "EventTarget" "Node" "SvgElement" "SvgGraphicsElement" ];
          "SvgGeometryElement" = [ "Element" "EventTarget" "Node" "SvgElement" "SvgGraphicsElement" ];
          "SvgGradientElement" = [ "Element" "EventTarget" "Node" "SvgElement" ];
          "SvgGraphicsElement" = [ "Element" "EventTarget" "Node" "SvgElement" ];
          "SvgImageElement" = [ "Element" "EventTarget" "Node" "SvgElement" "SvgGraphicsElement" ];
          "SvgLineElement" = [ "Element" "EventTarget" "Node" "SvgElement" "SvgGeometryElement" "SvgGraphicsElement" ];
          "SvgLinearGradientElement" = [ "Element" "EventTarget" "Node" "SvgElement" "SvgGradientElement" ];
          "SvgMarkerElement" = [ "Element" "EventTarget" "Node" "SvgElement" ];
          "SvgMaskElement" = [ "Element" "EventTarget" "Node" "SvgElement" ];
          "SvgMetadataElement" = [ "Element" "EventTarget" "Node" "SvgElement" ];
          "SvgPathElement" = [ "Element" "EventTarget" "Node" "SvgElement" "SvgGeometryElement" "SvgGraphicsElement" ];
          "SvgPathSegArcAbs" = [ "SvgPathSeg" ];
          "SvgPathSegArcRel" = [ "SvgPathSeg" ];
          "SvgPathSegClosePath" = [ "SvgPathSeg" ];
          "SvgPathSegCurvetoCubicAbs" = [ "SvgPathSeg" ];
          "SvgPathSegCurvetoCubicRel" = [ "SvgPathSeg" ];
          "SvgPathSegCurvetoCubicSmoothAbs" = [ "SvgPathSeg" ];
          "SvgPathSegCurvetoCubicSmoothRel" = [ "SvgPathSeg" ];
          "SvgPathSegCurvetoQuadraticAbs" = [ "SvgPathSeg" ];
          "SvgPathSegCurvetoQuadraticRel" = [ "SvgPathSeg" ];
          "SvgPathSegCurvetoQuadraticSmoothAbs" = [ "SvgPathSeg" ];
          "SvgPathSegCurvetoQuadraticSmoothRel" = [ "SvgPathSeg" ];
          "SvgPathSegLinetoAbs" = [ "SvgPathSeg" ];
          "SvgPathSegLinetoHorizontalAbs" = [ "SvgPathSeg" ];
          "SvgPathSegLinetoHorizontalRel" = [ "SvgPathSeg" ];
          "SvgPathSegLinetoRel" = [ "SvgPathSeg" ];
          "SvgPathSegLinetoVerticalAbs" = [ "SvgPathSeg" ];
          "SvgPathSegLinetoVerticalRel" = [ "SvgPathSeg" ];
          "SvgPathSegMovetoAbs" = [ "SvgPathSeg" ];
          "SvgPathSegMovetoRel" = [ "SvgPathSeg" ];
          "SvgPatternElement" = [ "Element" "EventTarget" "Node" "SvgElement" ];
          "SvgPolygonElement" = [ "Element" "EventTarget" "Node" "SvgElement" "SvgGeometryElement" "SvgGraphicsElement" ];
          "SvgPolylineElement" = [ "Element" "EventTarget" "Node" "SvgElement" "SvgGeometryElement" "SvgGraphicsElement" ];
          "SvgRadialGradientElement" = [ "Element" "EventTarget" "Node" "SvgElement" "SvgGradientElement" ];
          "SvgRectElement" = [ "Element" "EventTarget" "Node" "SvgElement" "SvgGeometryElement" "SvgGraphicsElement" ];
          "SvgScriptElement" = [ "Element" "EventTarget" "Node" "SvgElement" ];
          "SvgSetElement" = [ "Element" "EventTarget" "Node" "SvgAnimationElement" "SvgElement" ];
          "SvgStopElement" = [ "Element" "EventTarget" "Node" "SvgElement" ];
          "SvgStyleElement" = [ "Element" "EventTarget" "Node" "SvgElement" ];
          "SvgSwitchElement" = [ "Element" "EventTarget" "Node" "SvgElement" "SvgGraphicsElement" ];
          "SvgSymbolElement" = [ "Element" "EventTarget" "Node" "SvgElement" ];
          "SvgTextContentElement" = [ "Element" "EventTarget" "Node" "SvgElement" "SvgGraphicsElement" ];
          "SvgTextElement" = [ "Element" "EventTarget" "Node" "SvgElement" "SvgGraphicsElement" "SvgTextContentElement" "SvgTextPositioningElement" ];
          "SvgTextPathElement" = [ "Element" "EventTarget" "Node" "SvgElement" "SvgGraphicsElement" "SvgTextContentElement" ];
          "SvgTextPositioningElement" = [ "Element" "EventTarget" "Node" "SvgElement" "SvgGraphicsElement" "SvgTextContentElement" ];
          "SvgTitleElement" = [ "Element" "EventTarget" "Node" "SvgElement" ];
          "SvgUseElement" = [ "Element" "EventTarget" "Node" "SvgElement" "SvgGraphicsElement" ];
          "SvgViewElement" = [ "Element" "EventTarget" "Node" "SvgElement" ];
          "SvgaElement" = [ "Element" "EventTarget" "Node" "SvgElement" "SvgGraphicsElement" ];
          "SvgfeBlendElement" = [ "Element" "EventTarget" "Node" "SvgElement" ];
          "SvgfeColorMatrixElement" = [ "Element" "EventTarget" "Node" "SvgElement" ];
          "SvgfeComponentTransferElement" = [ "Element" "EventTarget" "Node" "SvgElement" ];
          "SvgfeCompositeElement" = [ "Element" "EventTarget" "Node" "SvgElement" ];
          "SvgfeConvolveMatrixElement" = [ "Element" "EventTarget" "Node" "SvgElement" ];
          "SvgfeDiffuseLightingElement" = [ "Element" "EventTarget" "Node" "SvgElement" ];
          "SvgfeDisplacementMapElement" = [ "Element" "EventTarget" "Node" "SvgElement" ];
          "SvgfeDistantLightElement" = [ "Element" "EventTarget" "Node" "SvgElement" ];
          "SvgfeDropShadowElement" = [ "Element" "EventTarget" "Node" "SvgElement" ];
          "SvgfeFloodElement" = [ "Element" "EventTarget" "Node" "SvgElement" ];
          "SvgfeFuncAElement" = [ "Element" "EventTarget" "Node" "SvgComponentTransferFunctionElement" "SvgElement" ];
          "SvgfeFuncBElement" = [ "Element" "EventTarget" "Node" "SvgComponentTransferFunctionElement" "SvgElement" ];
          "SvgfeFuncGElement" = [ "Element" "EventTarget" "Node" "SvgComponentTransferFunctionElement" "SvgElement" ];
          "SvgfeFuncRElement" = [ "Element" "EventTarget" "Node" "SvgComponentTransferFunctionElement" "SvgElement" ];
          "SvgfeGaussianBlurElement" = [ "Element" "EventTarget" "Node" "SvgElement" ];
          "SvgfeImageElement" = [ "Element" "EventTarget" "Node" "SvgElement" ];
          "SvgfeMergeElement" = [ "Element" "EventTarget" "Node" "SvgElement" ];
          "SvgfeMergeNodeElement" = [ "Element" "EventTarget" "Node" "SvgElement" ];
          "SvgfeMorphologyElement" = [ "Element" "EventTarget" "Node" "SvgElement" ];
          "SvgfeOffsetElement" = [ "Element" "EventTarget" "Node" "SvgElement" ];
          "SvgfePointLightElement" = [ "Element" "EventTarget" "Node" "SvgElement" ];
          "SvgfeSpecularLightingElement" = [ "Element" "EventTarget" "Node" "SvgElement" ];
          "SvgfeSpotLightElement" = [ "Element" "EventTarget" "Node" "SvgElement" ];
          "SvgfeTileElement" = [ "Element" "EventTarget" "Node" "SvgElement" ];
          "SvgfeTurbulenceElement" = [ "Element" "EventTarget" "Node" "SvgElement" ];
          "SvggElement" = [ "Element" "EventTarget" "Node" "SvgElement" "SvgGraphicsElement" ];
          "SvgmPathElement" = [ "Element" "EventTarget" "Node" "SvgElement" ];
          "SvgsvgElement" = [ "Element" "EventTarget" "Node" "SvgElement" "SvgGraphicsElement" ];
          "SvgtSpanElement" = [ "Element" "EventTarget" "Node" "SvgElement" "SvgGraphicsElement" "SvgTextContentElement" "SvgTextPositioningElement" ];
          "TcpServerSocket" = [ "EventTarget" ];
          "TcpServerSocketEvent" = [ "Event" ];
          "TcpSocket" = [ "EventTarget" ];
          "TcpSocketErrorEvent" = [ "Event" ];
          "TcpSocketEvent" = [ "Event" ];
          "Text" = [ "CharacterData" "EventTarget" "Node" ];
          "TextTrack" = [ "EventTarget" ];
          "TextTrackCue" = [ "EventTarget" ];
          "TextTrackList" = [ "EventTarget" ];
          "TimeEvent" = [ "Event" ];
          "TouchEvent" = [ "Event" "UiEvent" ];
          "TrackEvent" = [ "Event" ];
          "TransitionEvent" = [ "Event" ];
          "UiEvent" = [ "Event" ];
          "Usb" = [ "EventTarget" ];
          "UsbConnectionEvent" = [ "Event" ];
          "UsbPermissionResult" = [ "EventTarget" "PermissionStatus" ];
          "UserProximityEvent" = [ "Event" ];
          "ValueEvent" = [ "Event" ];
          "VideoStreamTrack" = [ "EventTarget" "MediaStreamTrack" ];
          "VideoTrackList" = [ "EventTarget" ];
          "VrDisplay" = [ "EventTarget" ];
          "VttCue" = [ "EventTarget" "TextTrackCue" ];
          "WakeLockSentinel" = [ "EventTarget" ];
          "WaveShaperNode" = [ "AudioNode" "EventTarget" ];
          "WebGlContextEvent" = [ "Event" ];
          "WebKitCssMatrix" = [ "DomMatrix" "DomMatrixReadOnly" ];
          "WebSocket" = [ "EventTarget" ];
          "WheelEvent" = [ "Event" "MouseEvent" "UiEvent" ];
          "Window" = [ "EventTarget" ];
          "WindowClient" = [ "Client" ];
          "Worker" = [ "EventTarget" ];
          "WorkerDebuggerGlobalScope" = [ "EventTarget" ];
          "WorkerGlobalScope" = [ "EventTarget" ];
          "XmlDocument" = [ "Document" "EventTarget" "Node" ];
          "XmlHttpRequest" = [ "EventTarget" "XmlHttpRequestEventTarget" ];
          "XmlHttpRequestEventTarget" = [ "EventTarget" ];
          "XmlHttpRequestUpload" = [ "EventTarget" "XmlHttpRequestEventTarget" ];
          "Xr" = [ "EventTarget" ];
          "XrBoundedReferenceSpace" = [ "EventTarget" "XrReferenceSpace" "XrSpace" ];
          "XrInputSourceEvent" = [ "Event" ];
          "XrInputSourcesChangeEvent" = [ "Event" ];
          "XrReferenceSpace" = [ "EventTarget" "XrSpace" ];
          "XrReferenceSpaceEvent" = [ "Event" ];
          "XrSession" = [ "EventTarget" ];
          "XrSessionEvent" = [ "Event" ];
          "XrSpace" = [ "EventTarget" ];
          "XrViewerPose" = [ "XrPose" ];
        };
        resolvedDefaultFeatures = [ "Blob" "BlobPropertyBag" "Crypto" "Event" "EventTarget" "File" "FormData" "Headers" "MessageEvent" "Performance" "Request" "RequestCredentials" "RequestInit" "RequestMode" "Response" "ServiceWorkerGlobalScope" "Window" "Worker" "WorkerGlobalScope" ];
      };
      "webpki" = rec {
        crateName = "webpki";
        version = "0.21.4";
        edition = "2018";
        sha256 = "1sm4i8c5bw3bdhi7mjk0wpvwx55hvsmyn0k2lpa4cb161038rqxq";
        libPath = "src/webpki.rs";
        authors = [
          "Brian Smith <brian@briansmith.org>"
        ];
        dependencies = [
          {
            name = "ring";
            packageId = "ring";
            usesDefaultFeatures = false;
            features = [ "alloc" ];
          }
          {
            name = "untrusted";
            packageId = "untrusted";
          }
        ];
        features = {
          "default" = [ "std" "trust_anchor_util" ];
          "trust_anchor_util" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" "trust_anchor_util" ];
      };
      "webpki-roots" = rec {
        crateName = "webpki-roots";
        version = "0.21.1";
        edition = "2018";
        crateBin = [];
        sha256 = "0h49lkr7hrxpyr0xg1nph4m3v1l6rhg8ax9n8msvfwz48hsibgma";
        authors = [
          "Joseph Birr-Pixton <jpixton@gmail.com>"
        ];
        dependencies = [
          {
            name = "webpki";
            packageId = "webpki";
          }
        ];

      };
      "websocket" = rec {
        crateName = "websocket";
        version = "0.26.2";
        edition = "2018";
        sha256 = "0dynvkqp850ib65rk205kfg2mxjk4f5b7azcv18xqvi8fmmvwfkj";
        authors = [
          "cyderize <admin@cyderize.org>"
          "Michael Eden <themichaeleden@gmail.com>"
        ];
        dependencies = [
          {
            name = "bytes";
            packageId = "bytes 0.4.12";
            optional = true;
          }
          {
            name = "futures";
            packageId = "futures 0.1.31";
            optional = true;
          }
          {
            name = "hyper";
            packageId = "hyper 0.10.16";
          }
          {
            name = "native-tls";
            packageId = "native-tls";
            optional = true;
          }
          {
            name = "rand";
            packageId = "rand 0.6.5";
          }
          {
            name = "tokio-codec";
            packageId = "tokio-codec";
            optional = true;
          }
          {
            name = "tokio-io";
            packageId = "tokio-io";
            optional = true;
          }
          {
            name = "tokio-reactor";
            packageId = "tokio-reactor";
            optional = true;
          }
          {
            name = "tokio-tcp";
            packageId = "tokio-tcp";
            optional = true;
          }
          {
            name = "tokio-tls";
            packageId = "tokio-tls";
            optional = true;
          }
          {
            name = "unicase";
            packageId = "unicase";
          }
          {
            name = "url";
            packageId = "url 1.7.2";
          }
          {
            name = "websocket-base";
            packageId = "websocket-base";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "async" = [ "bytes" "futures" "tokio-io" "tokio-tcp" "tokio-reactor" "tokio-codec" "websocket-base/async" ];
          "async-ssl" = [ "native-tls" "tokio-tls" "async" "websocket-base/async-ssl" ];
          "default" = [ "sync" "sync-ssl" "async" "async-ssl" ];
          "nightly" = [ "hyper/nightly" ];
          "sync" = [ "websocket-base/sync" ];
          "sync-ssl" = [ "native-tls" "sync" "websocket-base/sync-ssl" ];
        };
        resolvedDefaultFeatures = [ "async" "async-ssl" "bytes" "default" "futures" "native-tls" "sync" "sync-ssl" "tokio-codec" "tokio-io" "tokio-reactor" "tokio-tcp" "tokio-tls" ];
      };
      "websocket-base" = rec {
        crateName = "websocket-base";
        version = "0.26.2";
        edition = "2018";
        sha256 = "0xi7yrzqw36nlg8wqgavf04znm99jcwrcf2n86l0v4zz0pakygs0";
        authors = [
          "cyderize <admin@cyderize.org>"
          "Michael Eden <themichaeleden@gmail.com>"
        ];
        dependencies = [
          {
            name = "base64";
            packageId = "base64 0.10.1";
          }
          {
            name = "bitflags";
            packageId = "bitflags";
          }
          {
            name = "byteorder";
            packageId = "byteorder";
          }
          {
            name = "bytes";
            packageId = "bytes 0.4.12";
            optional = true;
          }
          {
            name = "futures";
            packageId = "futures 0.1.31";
            optional = true;
          }
          {
            name = "native-tls";
            packageId = "native-tls";
            optional = true;
          }
          {
            name = "rand";
            packageId = "rand 0.6.5";
          }
          {
            name = "sha-1";
            packageId = "sha-1 0.8.2";
          }
          {
            name = "tokio-codec";
            packageId = "tokio-codec";
            optional = true;
          }
          {
            name = "tokio-io";
            packageId = "tokio-io";
            optional = true;
          }
          {
            name = "tokio-tcp";
            packageId = "tokio-tcp";
            optional = true;
          }
          {
            name = "tokio-tls";
            packageId = "tokio-tls";
            optional = true;
          }
        ];
        features = {
          "async" = [ "tokio-codec" "tokio-io" "tokio-tcp" "bytes" "futures" ];
          "async-ssl" = [ "native-tls" "tokio-tls" "async" ];
          "default" = [ "sync" "async" "sync-ssl" "async-ssl" ];
          "sync-ssl" = [ "native-tls" "sync" ];
        };
        resolvedDefaultFeatures = [ "async" "async-ssl" "bytes" "futures" "native-tls" "sync" "sync-ssl" "tokio-codec" "tokio-io" "tokio-tcp" "tokio-tls" ];
      };
      "wepoll-ffi" = rec {
        crateName = "wepoll-ffi";
        version = "0.1.2";
        edition = "2018";
        sha256 = "1yxpkva08d5f6ih3b5hdb8h45mkz3jq3dh1bzjspfhy6qpnzshyp";
        authors = [
          "Philip Degarmo <aclysma@gmail.com>"
        ];
        buildDependencies = [
          {
            name = "cc";
            packageId = "cc";
          }
        ];
        features = {
        };
        resolvedDefaultFeatures = [ "null-overlapped-wakeups-patch" ];
      };
      "which" = rec {
        crateName = "which";
        version = "4.2.4";
        edition = "2018";
        sha256 = "1ln1wmhb6k3al9zhbw8rzidr1imni55ajr3840hg474jgr47wnia";
        authors = [
          "Harry Fei <tiziyuanfang@gmail.com>"
        ];
        dependencies = [
          {
            name = "either";
            packageId = "either";
          }
          {
            name = "lazy_static";
            packageId = "lazy_static 1.4.0";
            target = { target, features }: (target."windows" or false);
          }
          {
            name = "libc";
            packageId = "libc";
          }
        ];

      };
      "widestring" = rec {
        crateName = "widestring";
        version = "0.4.3";
        edition = "2015";
        sha256 = "0z3ba8qrxb62vpfgk7n2xs2grm9kdaj1cz4q8s0gs8fx8h0r8s61";
        authors = [
          "Kathryn Long <squeeself@gmail.com>"
        ];
        features = {
          "default" = [ "std" ];
          "std" = [ "alloc" ];
        };
        resolvedDefaultFeatures = [ "alloc" "default" "std" ];
      };
      "winapi 0.2.8" = rec {
        crateName = "winapi";
        version = "0.2.8";
        edition = "2015";
        sha256 = "0yh816lh6lf56dpsgxy189c2ai1z3j8mw9si6izqb6wsjkbcjz8n";
        authors = [
          "Peter Atashian <retep998@gmail.com>"
        ];

      };
      "winapi 0.3.9" = rec {
        crateName = "winapi";
        version = "0.3.9";
        edition = "2015";
        sha256 = "06gl025x418lchw1wxj64ycr7gha83m44cjr5sarhynd9xkrm0sw";
        authors = [
          "Peter Atashian <retep998@gmail.com>"
        ];
        dependencies = [
          {
            name = "winapi-i686-pc-windows-gnu";
            packageId = "winapi-i686-pc-windows-gnu";
            target = { target, features }: (stdenv.hostPlatform.config == "i686-pc-windows-gnu");
          }
          {
            name = "winapi-x86_64-pc-windows-gnu";
            packageId = "winapi-x86_64-pc-windows-gnu";
            target = { target, features }: (stdenv.hostPlatform.config == "x86_64-pc-windows-gnu");
          }
        ];
        features = {
          "debug" = [ "impl-debug" ];
        };
        resolvedDefaultFeatures = [ "basetsd" "cfg" "combaseapi" "consoleapi" "errhandlingapi" "evntrace" "fileapi" "handleapi" "ifdef" "impl-debug" "impl-default" "in6addr" "inaddr" "ioapiset" "jobapi2" "knownfolders" "libloaderapi" "lmaccess" "lmapibuf" "lmcons" "memoryapi" "minschannel" "minwinbase" "minwindef" "mstcpip" "mswsock" "namedpipeapi" "netioapi" "ntdef" "ntsecapi" "ntstatus" "objbase" "objidl" "oleauto" "pdh" "powerbase" "processenv" "profileapi" "psapi" "rpcdce" "schannel" "securitybaseapi" "shellapi" "shlobj" "sspi" "std" "synchapi" "sysinfoapi" "threadpoollegacyapiset" "timezoneapi" "tlhelp32" "wbemcli" "winbase" "wincon" "wincrypt" "windef" "winerror" "winioctl" "winnt" "winreg" "winsock2" "winuser" "ws2def" "ws2ipdef" "ws2tcpip" "wtypesbase" ];
      };
      "winapi-build" = rec {
        crateName = "winapi-build";
        version = "0.1.1";
        edition = "2015";
        sha256 = "1g4rqsgjky0a7530qajn2bbfcrl2v0zb39idgdws9b1l7gp5wc9d";
        libName = "build";
        authors = [
          "Peter Atashian <retep998@gmail.com>"
        ];

      };
      "winapi-i686-pc-windows-gnu" = rec {
        crateName = "winapi-i686-pc-windows-gnu";
        version = "0.4.0";
        edition = "2015";
        sha256 = "1dmpa6mvcvzz16zg6d5vrfy4bxgg541wxrcip7cnshi06v38ffxc";
        authors = [
          "Peter Atashian <retep998@gmail.com>"
        ];

      };
      "winapi-util" = rec {
        crateName = "winapi-util";
        version = "0.1.5";
        edition = "2018";
        sha256 = "0y71bp7f6d536czj40dhqk0d55wfbbwqfp2ymqf1an5ibgl6rv3h";
        authors = [
          "Andrew Gallant <jamslam@gmail.com>"
        ];
        dependencies = [
          {
            name = "winapi";
            packageId = "winapi 0.3.9";
            target = { target, features }: (target."windows" or false);
            features = [ "std" "consoleapi" "errhandlingapi" "fileapi" "minwindef" "processenv" "winbase" "wincon" "winerror" "winnt" ];
          }
        ];

      };
      "winapi-x86_64-pc-windows-gnu" = rec {
        crateName = "winapi-x86_64-pc-windows-gnu";
        version = "0.4.0";
        edition = "2015";
        sha256 = "0gqq64czqb64kskjryj8isp62m2sgvx25yyj3kpc2myh85w24bki";
        authors = [
          "Peter Atashian <retep998@gmail.com>"
        ];

      };
      "winreg 0.10.1" = rec {
        crateName = "winreg";
        version = "0.10.1";
        edition = "2015";
        sha256 = "17c6h02z88ijjba02bnxi5k94q5cz490nf3njh9yypf8fbig9l40";
        authors = [
          "Igor Shaula <gentoo90@gmail.com>"
        ];
        dependencies = [
          {
            name = "winapi";
            packageId = "winapi 0.3.9";
            features = [ "impl-default" "impl-debug" "minwindef" "minwinbase" "timezoneapi" "winerror" "winnt" "winreg" "handleapi" ];
          }
        ];
        features = {
          "serialization-serde" = [ "transactions" "serde" ];
          "transactions" = [ "winapi/ktmw32" ];
        };
      };
      "winreg 0.6.2" = rec {
        crateName = "winreg";
        version = "0.6.2";
        edition = "2015";
        sha256 = "1jdcqr6zmvwyrp87h48miasfdvv16gjsb60rc8dy2kqwb3mnv65j";
        authors = [
          "Igor Shaula <gentoo90@gmail.com>"
        ];
        dependencies = [
          {
            name = "winapi";
            packageId = "winapi 0.3.9";
            features = [ "impl-default" "impl-debug" "minwindef" "minwinbase" "timezoneapi" "winerror" "winnt" "winreg" "handleapi" ];
          }
        ];
        features = {
          "serialization-serde" = [ "transactions" "serde" ];
          "transactions" = [ "winapi/ktmw32" ];
        };
      };
      "winreg 0.7.0" = rec {
        crateName = "winreg";
        version = "0.7.0";
        edition = "2015";
        sha256 = "0sdxcyvda4v1v6a0k1j2v1400z3ng323k9a56gxvkq51x21dn801";
        authors = [
          "Igor Shaula <gentoo90@gmail.com>"
        ];
        dependencies = [
          {
            name = "winapi";
            packageId = "winapi 0.3.9";
            features = [ "impl-default" "impl-debug" "minwindef" "minwinbase" "timezoneapi" "winerror" "winnt" "winreg" "handleapi" ];
          }
        ];
        features = {
          "serialization-serde" = [ "transactions" "serde" ];
          "transactions" = [ "winapi/ktmw32" ];
        };
      };
      "ws2_32-sys" = rec {
        crateName = "ws2_32-sys";
        version = "0.2.1";
        edition = "2015";
        sha256 = "0ppscg5qfqaw0gzwv2a4nhn5bn01ff9iwn6ysqnzm4n8s3myz76m";
        libName = "ws2_32";
        authors = [
          "Peter Atashian <retep998@gmail.com>"
        ];
        dependencies = [
          {
            name = "winapi";
            packageId = "winapi 0.2.8";
          }
        ];
        buildDependencies = [
          {
            name = "winapi-build";
            packageId = "winapi-build";
          }
        ];

      };
      "x25519-dalek" = rec {
        crateName = "x25519-dalek";
        version = "1.2.0";
        edition = "2018";
        sha256 = "0xz0m1pczss9r25d1r52420dl2picdypbcn5ycmlwssp9awvd4i3";
        authors = [
          "Isis Lovecruft <isis@patternsinthevoid.net>"
          "DebugSteven <debugsteven@gmail.com>"
          "Henry de Valence <hdevalence@hdevalence.ca>"
        ];
        dependencies = [
          {
            name = "curve25519-dalek";
            packageId = "curve25519-dalek";
            usesDefaultFeatures = false;
          }
          {
            name = "rand_core";
            packageId = "rand_core 0.5.1";
            usesDefaultFeatures = false;
          }
          {
            name = "zeroize";
            packageId = "zeroize";
            usesDefaultFeatures = false;
            features = [ "zeroize_derive" ];
          }
        ];
        features = {
          "default" = [ "std" "u64_backend" ];
          "fiat_u32_backend" = [ "curve25519-dalek/fiat_u32_backend" ];
          "fiat_u64_backend" = [ "curve25519-dalek/fiat_u64_backend" ];
          "nightly" = [ "curve25519-dalek/nightly" ];
          "serde" = [ "our_serde" "curve25519-dalek/serde" ];
          "std" = [ "curve25519-dalek/std" ];
          "u32_backend" = [ "curve25519-dalek/u32_backend" ];
          "u64_backend" = [ "curve25519-dalek/u64_backend" ];
        };
        resolvedDefaultFeatures = [ "default" "std" "u64_backend" ];
      };
      "xattr" = rec {
        crateName = "xattr";
        version = "0.2.2";
        edition = "2015";
        sha256 = "0k556fb6f5jc907975j9c8iynl2fqz3rf0w6fiig83i4yi0kfk14";
        authors = [
          "Steven Allen <steven@stebalien.com>"
        ];
        dependencies = [
          {
            name = "libc";
            packageId = "libc";
          }
        ];
        features = {
          "default" = [ "unsupported" ];
        };
        resolvedDefaultFeatures = [ "default" "unsupported" ];
      };
      "yaml-rust" = rec {
        crateName = "yaml-rust";
        version = "0.4.5";
        edition = "2018";
        sha256 = "118wbqrr4n6wgk5rjjnlrdlahawlxc1bdsx146mwk8f79in97han";
        authors = [
          "Yuheng Chen <yuhengchen@sensetime.com>"
        ];
        dependencies = [
          {
            name = "linked-hash-map";
            packageId = "linked-hash-map";
          }
        ];

      };
      "yamux" = rec {
        crateName = "yamux";
        version = "0.9.0";
        edition = "2018";
        sha256 = "01y1crk8b1aifr67shqi276cllqvbh8rzrjbc4yfdmcd427h5ng7";
        authors = [
          "Parity Technologies <admin@parity.io>"
        ];
        dependencies = [
          {
            name = "futures";
            packageId = "futures 0.3.19";
            usesDefaultFeatures = false;
            features = [ "std" ];
          }
          {
            name = "log";
            packageId = "log 0.4.14";
          }
          {
            name = "nohash-hasher";
            packageId = "nohash-hasher";
          }
          {
            name = "parking_lot";
            packageId = "parking_lot 0.11.2";
          }
          {
            name = "rand";
            packageId = "rand 0.8.4";
          }
          {
            name = "static_assertions";
            packageId = "static_assertions";
          }
        ];
        devDependencies = [
          {
            name = "futures";
            packageId = "futures 0.3.19";
          }
        ];

      };
      "zeroize" = rec {
        crateName = "zeroize";
        version = "1.3.0";
        edition = "2018";
        sha256 = "1z8yix823b6lz878qwg6bvwhg3lb0cbw3c9yij9p8mbv7zdzfmj7";
        authors = [
          "Tony Arcieri <tony@iqlusion.io>"
        ];
        dependencies = [
          {
            name = "zeroize_derive";
            packageId = "zeroize_derive";
            optional = true;
          }
        ];
        features = {
          "default" = [ "alloc" ];
        };
        resolvedDefaultFeatures = [ "alloc" "default" "zeroize_derive" ];
      };
      "zeroize_derive" = rec {
        crateName = "zeroize_derive";
        version = "1.3.1";
        edition = "2018";
        sha256 = "1nzdqyryjnqcrqz0vhddpkd8sybhn0bd8rbd6l33rdhhxwzz3s41";
        procMacro = true;
        authors = [
          "The RustCrypto Project Developers"
        ];
        dependencies = [
          {
            name = "proc-macro2";
            packageId = "proc-macro2";
          }
          {
            name = "quote";
            packageId = "quote";
          }
          {
            name = "syn";
            packageId = "syn";
          }
          {
            name = "synstructure";
            packageId = "synstructure";
          }
        ];

      };
    };

    #
# crate2nix/default.nix (excerpt start)
#

  /* Target (platform) data for conditional dependencies.
    This corresponds roughly to what buildRustCrate is setting.
  */
  defaultTarget = {
    unix = true;
    windows = false;
    fuchsia = true;
    test = false;

    # This doesn't appear to be officially documented anywhere yet.
    # See https://github.com/rust-lang-nursery/rust-forge/issues/101.
    os =
      if stdenv.hostPlatform.isDarwin
      then "macos"
      else stdenv.hostPlatform.parsed.kernel.name;
    arch = stdenv.hostPlatform.parsed.cpu.name;
    family = "unix";
    env = "gnu";
    endian =
      if stdenv.hostPlatform.parsed.cpu.significantByte.name == "littleEndian"
      then "little" else "big";
    pointer_width = toString stdenv.hostPlatform.parsed.cpu.bits;
    vendor = stdenv.hostPlatform.parsed.vendor.name;
    debug_assertions = false;
  };

  /* Filters common temp files and build files. */
  # TODO(pkolloch): Substitute with gitignore filter
  sourceFilter = name: type:
    let
      baseName = builtins.baseNameOf (builtins.toString name);
    in
      ! (
        # Filter out git
        baseName == ".gitignore"
        || (type == "directory" && baseName == ".git")

        # Filter out build results
        || (
          type == "directory" && (
            baseName == "target"
            || baseName == "_site"
            || baseName == ".sass-cache"
            || baseName == ".jekyll-metadata"
            || baseName == "build-artifacts"
          )
        )

        # Filter out nix-build result symlinks
        || (
          type == "symlink" && lib.hasPrefix "result" baseName
        )

        # Filter out IDE config
        || (
          type == "directory" && (
            baseName == ".idea" || baseName == ".vscode"
          )
        ) || lib.hasSuffix ".iml" baseName

        # Filter out nix build files
        || baseName == "Cargo.nix"

        # Filter out editor backup / swap files.
        || lib.hasSuffix "~" baseName
        || builtins.match "^\\.sw[a-z]$$" baseName != null
        || builtins.match "^\\..*\\.sw[a-z]$$" baseName != null
        || lib.hasSuffix ".tmp" baseName
        || lib.hasSuffix ".bak" baseName
        || baseName == "tests.nix"
      );

  /* Returns a crate which depends on successful test execution
    of crate given as the second argument.

    testCrateFlags: list of flags to pass to the test exectuable
    testInputs: list of packages that should be available during test execution
  */
  crateWithTest = { crate, testCrate, testCrateFlags, testInputs, testPreRun, testPostRun }:
    assert builtins.typeOf testCrateFlags == "list";
    assert builtins.typeOf testInputs == "list";
    assert builtins.typeOf testPreRun == "string";
    assert builtins.typeOf testPostRun == "string";
    let
      # override the `crate` so that it will build and execute tests instead of
      # building the actual lib and bin targets We just have to pass `--test`
      # to rustc and it will do the right thing.  We execute the tests and copy
      # their log and the test executables to $out for later inspection.
      test =
        let
          drv = testCrate.override
            (
              _: {
                buildTests = true;
              }
            );
          # If the user hasn't set any pre/post commands, we don't want to
          # insert empty lines. This means that any existing users of crate2nix
          # don't get a spurious rebuild unless they set these explicitly.
          testCommand = pkgs.lib.concatStringsSep "\n"
            (pkgs.lib.filter (s: s != "") [
              testPreRun
              "$f $testCrateFlags 2>&1 | tee -a $out"
              testPostRun
            ]);
        in
        pkgs.runCommand "run-tests-${testCrate.name}"
          {
            inherit testCrateFlags;
            buildInputs = testInputs;
          } ''
          set -ex

          export RUST_BACKTRACE=1

          # recreate a file hierarchy as when running tests with cargo

          # the source for test data
          ${pkgs.xorg.lndir}/bin/lndir ${crate.src}

          # build outputs
          testRoot=target/debug
          mkdir -p $testRoot

          # executables of the crate
          # we copy to prevent std::env::current_exe() to resolve to a store location
          for i in ${crate}/bin/*; do
            cp "$i" "$testRoot"
          done
          chmod +w -R .

          # test harness executables are suffixed with a hash, like cargo does
          # this allows to prevent name collision with the main
          # executables of the crate
          hash=$(basename $out)
          for file in ${drv}/tests/*; do
            f=$testRoot/$(basename $file)-$hash
            cp $file $f
            ${testCommand}
          done
        '';
    in
    pkgs.runCommand "${crate.name}-linked"
      {
        inherit (crate) outputs crateName;
        passthru = (crate.passthru or { }) // {
          inherit test;
        };
      } ''
      echo tested by ${test}
      ${lib.concatMapStringsSep "\n" (output: "ln -s ${crate.${output}} ${"$"}${output}") crate.outputs}
    '';

  /* A restricted overridable version of builtRustCratesWithFeatures. */
  buildRustCrateWithFeatures =
    { packageId
    , features ? rootFeatures
    , crateOverrides ? defaultCrateOverrides
    , buildRustCrateForPkgsFunc ? null
    , runTests ? false
    , testCrateFlags ? [ ]
    , testInputs ? [ ]
      # Any command to run immediatelly before a test is executed.
    , testPreRun ? ""
      # Any command run immediatelly after a test is executed.
    , testPostRun ? ""
    }:
    lib.makeOverridable
      (
        { features
        , crateOverrides
        , runTests
        , testCrateFlags
        , testInputs
        , testPreRun
        , testPostRun
        }:
        let
          buildRustCrateForPkgsFuncOverriden =
            if buildRustCrateForPkgsFunc != null
            then buildRustCrateForPkgsFunc
            else
              (
                if crateOverrides == pkgs.defaultCrateOverrides
                then buildRustCrateForPkgs
                else
                  pkgs: (buildRustCrateForPkgs pkgs).override {
                    defaultCrateOverrides = crateOverrides;
                  }
              );
          builtRustCrates = builtRustCratesWithFeatures {
            inherit packageId features;
            buildRustCrateForPkgsFunc = buildRustCrateForPkgsFuncOverriden;
            runTests = false;
          };
          builtTestRustCrates = builtRustCratesWithFeatures {
            inherit packageId features;
            buildRustCrateForPkgsFunc = buildRustCrateForPkgsFuncOverriden;
            runTests = true;
          };
          drv = builtRustCrates.crates.${packageId};
          testDrv = builtTestRustCrates.crates.${packageId};
          derivation =
            if runTests then
              crateWithTest
                {
                  crate = drv;
                  testCrate = testDrv;
                  inherit testCrateFlags testInputs testPreRun testPostRun;
                }
            else drv;
        in
        derivation
      )
      { inherit features crateOverrides runTests testCrateFlags testInputs testPreRun testPostRun; };

  /* Returns an attr set with packageId mapped to the result of buildRustCrateForPkgsFunc
    for the corresponding crate.
  */
  builtRustCratesWithFeatures =
    { packageId
    , features
    , crateConfigs ? crates
    , buildRustCrateForPkgsFunc
    , runTests
    , target ? defaultTarget
    } @ args:
      assert (builtins.isAttrs crateConfigs);
      assert (builtins.isString packageId);
      assert (builtins.isList features);
      assert (builtins.isAttrs target);
      assert (builtins.isBool runTests);
      let
        rootPackageId = packageId;
        mergedFeatures = mergePackageFeatures
          (
            args // {
              inherit rootPackageId;
              target = target // { test = runTests; };
            }
          );
        # Memoize built packages so that reappearing packages are only built once.
        builtByPackageIdByPkgs = mkBuiltByPackageIdByPkgs pkgs;
        mkBuiltByPackageIdByPkgs = pkgs:
          let
            self = {
              crates = lib.mapAttrs (packageId: value: buildByPackageIdForPkgsImpl self pkgs packageId) crateConfigs;
              build = mkBuiltByPackageIdByPkgs pkgs.buildPackages;
            };
          in
          self;
        buildByPackageIdForPkgsImpl = self: pkgs: packageId:
          let
            features = mergedFeatures."${packageId}" or [ ];
            crateConfig' = crateConfigs."${packageId}";
            crateConfig =
              builtins.removeAttrs crateConfig' [ "resolvedDefaultFeatures" "devDependencies" ];
            devDependencies =
              lib.optionals
                (runTests && packageId == rootPackageId)
                (crateConfig'.devDependencies or [ ]);
            dependencies =
              dependencyDerivations {
                inherit features target;
                buildByPackageId = depPackageId:
                  # proc_macro crates must be compiled for the build architecture
                  if crateConfigs.${depPackageId}.procMacro or false
                  then self.build.crates.${depPackageId}
                  else self.crates.${depPackageId};
                dependencies =
                  (crateConfig.dependencies or [ ])
                  ++ devDependencies;
              };
            buildDependencies =
              dependencyDerivations {
                inherit features target;
                buildByPackageId = depPackageId:
                  self.build.crates.${depPackageId};
                dependencies = crateConfig.buildDependencies or [ ];
              };
            filterEnabledDependenciesForThis = dependencies: filterEnabledDependencies {
              inherit dependencies features target;
            };
            dependenciesWithRenames =
              lib.filter (d: d ? "rename")
                (
                  filterEnabledDependenciesForThis
                    (
                      (crateConfig.buildDependencies or [ ])
                      ++ (crateConfig.dependencies or [ ])
                      ++ devDependencies
                    )
                );
            # Crate renames have the form:
            #
            # {
            #    crate_name = [
            #       { version = "1.2.3"; rename = "crate_name01"; }
            #    ];
            #    # ...
            # }
            crateRenames =
              let
                grouped =
                  lib.groupBy
                    (dependency: dependency.name)
                    dependenciesWithRenames;
                versionAndRename = dep:
                  let
                    package = crateConfigs."${dep.packageId}";
                  in
                  { inherit (dep) rename; version = package.version; };
              in
              lib.mapAttrs (name: choices: builtins.map versionAndRename choices) grouped;
          in
          buildRustCrateForPkgsFunc pkgs
            (
              crateConfig // {
                src = crateConfig.src or (
                  pkgs.fetchurl rec {
                    name = "${crateConfig.crateName}-${crateConfig.version}.tar.gz";
                    # https://www.pietroalbini.org/blog/downloading-crates-io/
                    # Not rate-limited, CDN URL.
                    url = "https://static.crates.io/crates/${crateConfig.crateName}/${crateConfig.crateName}-${crateConfig.version}.crate";
                    sha256 =
                      assert (lib.assertMsg (crateConfig ? sha256) "Missing sha256 for ${name}");
                      crateConfig.sha256;
                  }
                );
                extraRustcOpts = lib.lists.optional (targetFeatures != [ ]) "-C target-feature=${lib.concatMapStringsSep "," (x: "+${x}") targetFeatures}";
                inherit features dependencies buildDependencies crateRenames release;
              }
            );
      in
      builtByPackageIdByPkgs;

  /* Returns the actual derivations for the given dependencies. */
  dependencyDerivations =
    { buildByPackageId
    , features
    , dependencies
    , target
    }:
      assert (builtins.isList features);
      assert (builtins.isList dependencies);
      assert (builtins.isAttrs target);
      let
        enabledDependencies = filterEnabledDependencies {
          inherit dependencies features target;
        };
        depDerivation = dependency: buildByPackageId dependency.packageId;
      in
      map depDerivation enabledDependencies;

  /* Returns a sanitized version of val with all values substituted that cannot
    be serialized as JSON.
  */
  sanitizeForJson = val:
    if builtins.isAttrs val
    then lib.mapAttrs (n: v: sanitizeForJson v) val
    else if builtins.isList val
    then builtins.map sanitizeForJson val
    else if builtins.isFunction val
    then "function"
    else val;

  /* Returns various tools to debug a crate. */
  debugCrate = { packageId, target ? defaultTarget }:
    assert (builtins.isString packageId);
    let
      debug = rec {
        # The built tree as passed to buildRustCrate.
        buildTree = buildRustCrateWithFeatures {
          buildRustCrateForPkgsFunc = _: lib.id;
          inherit packageId;
        };
        sanitizedBuildTree = sanitizeForJson buildTree;
        dependencyTree = sanitizeForJson
          (
            buildRustCrateWithFeatures {
              buildRustCrateForPkgsFunc = _: crate: {
                "01_crateName" = crate.crateName or false;
                "02_features" = crate.features or [ ];
                "03_dependencies" = crate.dependencies or [ ];
              };
              inherit packageId;
            }
          );
        mergedPackageFeatures = mergePackageFeatures {
          features = rootFeatures;
          inherit packageId target;
        };
        diffedDefaultPackageFeatures = diffDefaultPackageFeatures {
          inherit packageId target;
        };
      };
    in
    { internal = debug; };

  /* Returns differences between cargo default features and crate2nix default
    features.

    This is useful for verifying the feature resolution in crate2nix.
  */
  diffDefaultPackageFeatures =
    { crateConfigs ? crates
    , packageId
    , target
    }:
      assert (builtins.isAttrs crateConfigs);
      let
        prefixValues = prefix: lib.mapAttrs (n: v: { "${prefix}" = v; });
        mergedFeatures =
          prefixValues
            "crate2nix"
            (mergePackageFeatures { inherit crateConfigs packageId target; features = [ "default" ]; });
        configs = prefixValues "cargo" crateConfigs;
        combined = lib.foldAttrs (a: b: a // b) { } [ mergedFeatures configs ];
        onlyInCargo =
          builtins.attrNames
            (lib.filterAttrs (n: v: !(v ? "crate2nix") && (v ? "cargo")) combined);
        onlyInCrate2Nix =
          builtins.attrNames
            (lib.filterAttrs (n: v: (v ? "crate2nix") && !(v ? "cargo")) combined);
        differentFeatures = lib.filterAttrs
          (
            n: v:
              (v ? "crate2nix")
              && (v ? "cargo")
              && (v.crate2nix.features or [ ]) != (v."cargo".resolved_default_features or [ ])
          )
          combined;
      in
      builtins.toJSON {
        inherit onlyInCargo onlyInCrate2Nix differentFeatures;
      };

  /* Returns an attrset mapping packageId to the list of enabled features.

    If multiple paths to a dependency enable different features, the
    corresponding feature sets are merged. Features in rust are additive.
  */
  mergePackageFeatures =
    { crateConfigs ? crates
    , packageId
    , rootPackageId ? packageId
    , features ? rootFeatures
    , dependencyPath ? [ crates.${packageId}.crateName ]
    , featuresByPackageId ? { }
    , target
      # Adds devDependencies to the crate with rootPackageId.
    , runTests ? false
    , ...
    } @ args:
      assert (builtins.isAttrs crateConfigs);
      assert (builtins.isString packageId);
      assert (builtins.isString rootPackageId);
      assert (builtins.isList features);
      assert (builtins.isList dependencyPath);
      assert (builtins.isAttrs featuresByPackageId);
      assert (builtins.isAttrs target);
      assert (builtins.isBool runTests);
      let
        crateConfig = crateConfigs."${packageId}" or (builtins.throw "Package not found: ${packageId}");
        expandedFeatures = expandFeatures (crateConfig.features or { }) features;
        enabledFeatures = enableFeatures (crateConfig.dependencies or [ ]) expandedFeatures;
        depWithResolvedFeatures = dependency:
          let
            packageId = dependency.packageId;
            features = dependencyFeatures enabledFeatures dependency;
          in
          { inherit packageId features; };
        resolveDependencies = cache: path: dependencies:
          assert (builtins.isAttrs cache);
          assert (builtins.isList dependencies);
          let
            enabledDependencies = filterEnabledDependencies {
              inherit dependencies target;
              features = enabledFeatures;
            };
            directDependencies = map depWithResolvedFeatures enabledDependencies;
            foldOverCache = op: lib.foldl op cache directDependencies;
          in
          foldOverCache
            (
              cache: { packageId, features }:
                let
                  cacheFeatures = cache.${packageId} or [ ];
                  combinedFeatures = sortedUnique (cacheFeatures ++ features);
                in
                if cache ? ${packageId} && cache.${packageId} == combinedFeatures
                then cache
                else
                  mergePackageFeatures {
                    features = combinedFeatures;
                    featuresByPackageId = cache;
                    inherit crateConfigs packageId target runTests rootPackageId;
                  }
            );
        cacheWithSelf =
          let
            cacheFeatures = featuresByPackageId.${packageId} or [ ];
            combinedFeatures = sortedUnique (cacheFeatures ++ enabledFeatures);
          in
          featuresByPackageId // {
            "${packageId}" = combinedFeatures;
          };
        cacheWithDependencies =
          resolveDependencies cacheWithSelf "dep"
            (
              crateConfig.dependencies or [ ]
              ++ lib.optionals
                (runTests && packageId == rootPackageId)
                (crateConfig.devDependencies or [ ])
            );
        cacheWithAll =
          resolveDependencies
            cacheWithDependencies "build"
            (crateConfig.buildDependencies or [ ]);
      in
      cacheWithAll;

  /* Returns the enabled dependencies given the enabled features. */
  filterEnabledDependencies = { dependencies, features, target }:
    assert (builtins.isList dependencies);
    assert (builtins.isList features);
    assert (builtins.isAttrs target);

    lib.filter
      (
        dep:
        let
          targetFunc = dep.target or (features: true);
        in
        targetFunc { inherit features target; }
        && (
          !(dep.optional or false)
          || builtins.any (doesFeatureEnableDependency dep) features
        )
      )
      dependencies;

  /* Returns whether the given feature should enable the given dependency. */
  doesFeatureEnableDependency = { name, rename ? null, ... }: feature:
    let
      prefix = "${name}/";
      len = builtins.stringLength prefix;
      startsWithPrefix = builtins.substring 0 len feature == prefix;
    in
    (rename == null && feature == name)
    || (rename != null && rename == feature)
    || startsWithPrefix;

  /* Returns the expanded features for the given inputFeatures by applying the
    rules in featureMap.

    featureMap is an attribute set which maps feature names to lists of further
    feature names to enable in case this feature is selected.
  */
  expandFeatures = featureMap: inputFeatures:
    assert (builtins.isAttrs featureMap);
    assert (builtins.isList inputFeatures);
    let
      expandFeature = feature:
        assert (builtins.isString feature);
        [ feature ] ++ (expandFeatures featureMap (featureMap."${feature}" or [ ]));
      outFeatures = lib.concatMap expandFeature inputFeatures;
    in
    sortedUnique outFeatures;

  /* This function adds optional dependencies as features if they are enabled
    indirectly by dependency features. This function mimics Cargo's behavior
    described in a note at:
    https://doc.rust-lang.org/nightly/cargo/reference/features.html#dependency-features
  */
  enableFeatures = dependencies: features:
    assert (builtins.isList features);
    assert (builtins.isList dependencies);
    let
      additionalFeatures = lib.concatMap
        (
          dependency:
            assert (builtins.isAttrs dependency);
            let
              enabled = builtins.any (doesFeatureEnableDependency dependency) features;
            in
            if (dependency.optional or false) && enabled then [ dependency.name ] else [ ]
        )
        dependencies;
    in
    sortedUnique (features ++ additionalFeatures);

  /*
    Returns the actual features for the given dependency.

    features: The features of the crate that refers this dependency.
  */
  dependencyFeatures = features: dependency:
    assert (builtins.isList features);
    assert (builtins.isAttrs dependency);
    let
      defaultOrNil =
        if dependency.usesDefaultFeatures or true
        then [ "default" ]
        else [ ];
      explicitFeatures = dependency.features or [ ];
      additionalDependencyFeatures =
        let
          dependencyPrefix = (dependency.rename or dependency.name) + "/";
          dependencyFeatures =
            builtins.filter (f: lib.hasPrefix dependencyPrefix f) features;
        in
        builtins.map (lib.removePrefix dependencyPrefix) dependencyFeatures;
    in
    defaultOrNil ++ explicitFeatures ++ additionalDependencyFeatures;

  /* Sorts and removes duplicates from a list of strings. */
  sortedUnique = features:
    assert (builtins.isList features);
    assert (builtins.all builtins.isString features);
    let
      outFeaturesSet = lib.foldl (set: feature: set // { "${feature}" = 1; }) { } features;
      outFeaturesUnique = builtins.attrNames outFeaturesSet;
    in
    builtins.sort (a: b: a < b) outFeaturesUnique;

  deprecationWarning = message: value:
    if strictDeprecation
    then builtins.throw "strictDeprecation enabled, aborting: ${message}"
    else builtins.trace message value;

  #
  # crate2nix/default.nix (excerpt end)
  #
  };
}

